[10:10:34] Starting OmniSharpServer using project folder/solution file: c:/Users/Wolfgang.Ramos/visitour/client3/
[10:10:34] using server binary on c:/Users/Wolfgang.Ramos/.emacs.d/personal/omnisharp-server/v1.26.3/OmniSharp.exe
[10:10:40] INFORMATION: OmniSharp.Stdio.Host, Starting OmniSharp on Windows 6.2.9200.0 (x64)
[10:10:40] INFORMATION: OmniSharp.MSBuild.Discovery.MSBuildLocator, Located 1 MSBuild instance(s)
            1: StandAlone 15.0 - "c:\Users\Wolfgang.Ramos\.emacs.d\personal\omnisharp-server\v1.26.3\msbuild\15.0\Bin"
[10:10:40] INFORMATION: OmniSharp.MSBuild.Discovery.MSBuildLocator, MSBUILD_EXE_PATH environment variable set to 'c:\Users\Wolfgang.Ramos\.emacs.d\personal\omnisharp-server\v1.26.3\msbuild\15.0\Bin\MSBuild.exe'
[10:10:40] INFORMATION: OmniSharp.MSBuild.Discovery.MSBuildLocator, Registered MSBuild instance: StandAlone 15.0 - "c:\Users\Wolfgang.Ramos\.emacs.d\personal\omnisharp-server\v1.26.3\msbuild\15.0\Bin"
            CscToolExe = csc.exe
            CscToolPath = c:\Users\Wolfgang.Ramos\.emacs.d\personal\omnisharp-server\v1.26.3\msbuild\15.0\Bin\Roslyn
            MSBuildExtensionsPath = c:\Users\Wolfgang.Ramos\.emacs.d\personal\omnisharp-server\v1.26.3\msbuild
            MSBuildToolsPath = c:\Users\Wolfgang.Ramos\.emacs.d\personal\omnisharp-server\v1.26.3\msbuild\15.0\Bin
[10:10:43] INFORMATION: OmniSharp.Cake.CakeProjectSystem, Detecting Cake files in 'c:/Users/Wolfgang.Ramos/visitour/client3/'.
[10:10:51] INFORMATION: OmniSharp.Cake.CakeProjectSystem, Could not find any Cake files
[10:10:51] INFORMATION: OmniSharp.DotNet.DotNetProjectSystem, Initializing in c:/Users/Wolfgang.Ramos/visitour/client3/
[10:10:51] INFORMATION: OmniSharp.DotNet.DotNetProjectSystem, Auto package restore: False
[10:10:51] INFORMATION: OmniSharp.DotNet.DotNetProjectSystem, Update workspace context
[10:10:51] INFORMATION: OmniSharp.DotNet.DotNetProjectSystem, Resolving projects references
[10:10:51] INFORMATION: OmniSharp.MSBuild.ProjectSystem, No solution files found in 'c:/Users/Wolfgang.Ramos/visitour/client3/'
[10:10:51] INFORMATION: OmniSharp.MSBuild.ProjectManager, Queue project update for 'c:/Users/Wolfgang.Ramos/visitour/client3/customers\MediaSaturnDeutschland\MSDInterfaceDescription\MSDInterfaceDescription\MSDInterfaceDescription.csproj'
[10:10:51] INFORMATION: OmniSharp.MSBuild.ProjectManager, Queue project update for 'c:/Users/Wolfgang.Ramos/visitour/client3/customers\MediaSaturnDeutschland\MSDInterfaceDescription\MSDInterfaceDescriptionTest\MSDInterfaceDescriptionTest.csproj'
[10:10:51] INFORMATION: OmniSharp.MSBuild.ProjectManager, Queue project update for 'c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Customization\Allianz_DE\Allianz_DE.csproj'
[10:10:51] INFORMATION: OmniSharp.MSBuild.ProjectManager, Queue project update for 'c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Customization\BES\BES.csproj'
[10:10:51] INFORMATION: OmniSharp.MSBuild.ProjectManager, Queue project update for 'c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Customization\BSHLogistics\BSHLogistics.csproj'
[10:10:51] INFORMATION: OmniSharp.MSBuild.ProjectManager, Queue project update for 'c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Customization\Coffema\Coffema.csproj'
[10:10:51] INFORMATION: OmniSharp.MSBuild.ProjectManager, Queue project update for 'c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Customization\DefaultCustomization\DefaultCustomization.csproj'
[10:10:51] INFORMATION: OmniSharp.MSBuild.ProjectManager, Queue project update for 'c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Customization\Esoft\Esoft.csproj'
[10:10:51] INFORMATION: OmniSharp.MSBuild.ProjectManager, Queue project update for 'c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Customization\Geas\Geas.csproj'
[10:10:51] INFORMATION: OmniSharp.MSBuild.ProjectManager, Queue project update for 'c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Customization\Jungheinrich\Jungheinrich.csproj'
[10:10:51] INFORMATION: OmniSharp.MSBuild.ProjectManager, Queue project update for 'c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Customization\MediaSaturnDeutschland\MediaSaturnDeutschland.csproj'
[10:10:51] INFORMATION: OmniSharp.MSBuild.ProjectManager, Queue project update for 'c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Customization\MediaSaturnNetherlands\MediaSaturnNetherlands.csproj'
[10:10:51] INFORMATION: OmniSharp.MSBuild.ProjectManager, Queue project update for 'c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Customization\MitieDe\MitieDe.csproj'
[10:10:51] INFORMATION: OmniSharp.MSBuild.ProjectManager, Queue project update for 'c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Customization\Neopost\Neopost.csproj'
[10:10:51] INFORMATION: OmniSharp.MSBuild.ProjectManager, Queue project update for 'c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Customization\NeopostF\NeopostF.csproj'
[10:10:51] INFORMATION: OmniSharp.MSBuild.ProjectManager, Queue project update for 'c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Customization\NeoVac\NeoVac.csproj'
[10:10:51] INFORMATION: OmniSharp.MSBuild.ProjectManager, Queue project update for 'c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Customization\Nova\Nova.csproj'
[10:10:51] INFORMATION: OmniSharp.MSBuild.ProjectManager, Queue project update for 'c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Customization\ResMed\ResMed.csproj'
[10:10:51] INFORMATION: OmniSharp.MSBuild.ProjectManager, Queue project update for 'c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Customization\ResMed\ResMed\ResMed.csproj'
[10:10:51] INFORMATION: OmniSharp.MSBuild.ProjectManager, Queue project update for 'c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Customization\Rewe\Rewe.csproj'
[10:10:51] INFORMATION: OmniSharp.MSBuild.ProjectManager, Queue project update for 'c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Customization\RMPFS\RMPFS.csproj'
[10:10:51] INFORMATION: OmniSharp.MSBuild.ProjectManager, Queue project update for 'c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Customization\Seco\Seco.csproj'
[10:10:51] INFORMATION: OmniSharp.MSBuild.ProjectManager, Queue project update for 'c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Customization\Tchibo\Tchibo.csproj'
[10:10:51] INFORMATION: OmniSharp.MSBuild.ProjectManager, Queue project update for 'c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Customization\TGS\TGS.csproj'
[10:10:51] INFORMATION: OmniSharp.MSBuild.ProjectManager, Queue project update for 'c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Customization\Wolf\Wolf.csproj'
[10:10:51] INFORMATION: OmniSharp.MSBuild.ProjectManager, Queue project update for 'c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Fls\Base\Base.csproj'
[10:10:51] INFORMATION: OmniSharp.MSBuild.ProjectManager, Queue project update for 'c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Fls\DataAccess\DataAccess.csproj'
[10:10:51] INFORMATION: OmniSharp.MSBuild.ProjectManager, Queue project update for 'c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Fls\DllZipper\DllZipper.csproj'
[10:10:51] INFORMATION: OmniSharp.MSBuild.ProjectManager, Queue project update for 'c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Fls\Net\Net.csproj'
[10:10:51] INFORMATION: OmniSharp.MSBuild.ProjectManager, Queue project update for 'c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Fls\RuntimeDataBuilder\RuntimeDataBuilder.csproj'
[10:10:51] INFORMATION: OmniSharp.MSBuild.ProjectManager, Queue project update for 'c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\FlsControlsForms\DevExpress\FormsDevExpress\FormsDevExpress.csproj'
[10:10:51] INFORMATION: OmniSharp.MSBuild.ProjectManager, Queue project update for 'c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\FlsControlsForms\FormsBase\FormsBase.csproj'
[10:10:51] INFORMATION: OmniSharp.MSBuild.ProjectManager, Loading project: c:/Users/Wolfgang.Ramos/visitour/client3/customers\MediaSaturnDeutschland\MSDInterfaceDescription\MSDInterfaceDescription\MSDInterfaceDescription.csproj
[10:10:51] INFORMATION: OmniSharp.MSBuild.ProjectManager, Queue project update for 'c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\FlsControlsForms\MapBoxBase\MapBoxBase.csproj'
[10:10:51] INFORMATION: OmniSharp.MSBuild.ProjectManager, Queue project update for 'c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\FlsControlsForms\MapBoxControl\MapBoxForm.csproj'
[10:10:51] INFORMATION: OmniSharp.MSBuild.ProjectManager, Queue project update for 'c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\FlsControlsForms\VisiTourClient\VisiTourClient.csproj'
[10:10:51] INFORMATION: OmniSharp.MSBuild.ProjectManager, Queue project update for 'c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\FlsUI\ViewModels\ViewModels.csproj'
[10:10:51] INFORMATION: OmniSharp.MSBuild.ProjectManager, Queue project update for 'c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\MapBoxTest\MapBoxTest.csproj'
[10:10:51] INFORMATION: OmniSharp.MSBuild.ProjectManager, Queue project update for 'c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\VisiTourClientMain\VisiTourClientMain.csproj'
[10:10:51] INFORMATION: OmniSharp.MSBuild.ProjectManager, Queue project update for 'c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\solutions\VisiTourClient\DataAccessTest\DataAccessTest.csproj'
[10:10:51] INFORMATION: OmniSharp.MSBuild.ProjectManager, Queue project update for 'c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\solutions\VisiTourClient\MSDTests\MSDTests.csproj'
[10:10:51] INFORMATION: OmniSharp.MSBuild.ProjectManager, Queue project update for 'c:/Users/Wolfgang.Ramos/visitour/client3/tools\ClientGuiTextCustomization\ClientGuiTextCustomization\ClientGuiTextCustomization.csproj'
[10:10:51] INFORMATION: OmniSharp.MSBuild.ProjectManager, Queue project update for 'c:/Users/Wolfgang.Ramos/visitour/client3/tools\Client_3_RightsViewer\Client_3_RightsViewer\Client_3_RightsViewer.csproj'
[10:10:51] INFORMATION: OmniSharp.MSBuild.ProjectManager, Queue project update for 'c:/Users/Wolfgang.Ramos/visitour/client3/tools\Tchibo_importer\ImportTest\ImportTest\ImportTest.csproj'
[10:10:51] INFORMATION: OmniSharp.Script.ScriptProjectSystem, Detecting CSX files in 'c:/Users/Wolfgang.Ramos/visitour/client3/'.
[10:10:52] INFORMATION: OmniSharp.Script.ScriptProjectSystem, Could not find any CSX files
[10:10:52] INFORMATION: OmniSharp.Stdio.Host, Invoking Workspace Options Provider: OmniSharp.Roslyn.CSharp.Services.CSharpWorkspaceOptionsProvider
[10:10:52] INFORMATION: OmniSharp.Stdio.Host, Configuration finished.
[10:10:52] INFORMATION: OmniSharp.Stdio.Host, Omnisharp server running using Stdio at location 'c:/Users/Wolfgang.Ramos/visitour/client3/' on host -1.
[10:10:55] INFORMATION: OmniSharp.MSBuild.ProjectManager, Adding project 'c:/Users/Wolfgang.Ramos/visitour/client3/customers\MediaSaturnDeutschland\MSDInterfaceDescription\MSDInterfaceDescription\MSDInterfaceDescription.csproj'
[10:10:55] INFORMATION: OmniSharp.MSBuild.ProjectManager, Loading project: c:/Users/Wolfgang.Ramos/visitour/client3/customers\MediaSaturnDeutschland\MSDInterfaceDescription\MSDInterfaceDescriptionTest\MSDInterfaceDescriptionTest.csproj
[10:10:55] INFORMATION: OmniSharp.MSBuild.ProjectManager, Adding project 'c:/Users/Wolfgang.Ramos/visitour/client3/customers\MediaSaturnDeutschland\MSDInterfaceDescription\MSDInterfaceDescriptionTest\MSDInterfaceDescriptionTest.csproj'
[10:10:55] INFORMATION: OmniSharp.MSBuild.ProjectManager, Loading project: c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Customization\Allianz_DE\Allianz_DE.csproj
[10:10:58] INFORMATION: OmniSharp.MSBuild.ProjectManager, Adding project 'c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Customization\Allianz_DE\Allianz_DE.csproj'
[10:10:58] INFORMATION: OmniSharp.MSBuild.ProjectManager, Loading project: c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Customization\BES\BES.csproj
[10:10:59] INFORMATION: OmniSharp.MSBuild.ProjectManager, Adding project 'c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Customization\BES\BES.csproj'
[10:10:59] INFORMATION: OmniSharp.MSBuild.ProjectManager, Loading project: c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Customization\BSHLogistics\BSHLogistics.csproj
[10:10:59] INFORMATION: OmniSharp.MSBuild.ProjectManager, Adding project 'c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Customization\BSHLogistics\BSHLogistics.csproj'
[10:10:59] INFORMATION: OmniSharp.MSBuild.ProjectManager, Loading project: c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Customization\Coffema\Coffema.csproj
[10:11:00] INFORMATION: OmniSharp.MSBuild.ProjectManager, Adding project 'c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Customization\Coffema\Coffema.csproj'
[10:11:00] INFORMATION: OmniSharp.MSBuild.ProjectManager, Loading project: c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Customization\DefaultCustomization\DefaultCustomization.csproj
[10:11:00] INFORMATION: OmniSharp.MSBuild.ProjectManager, Adding project 'c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Customization\DefaultCustomization\DefaultCustomization.csproj'
[10:11:00] INFORMATION: OmniSharp.MSBuild.ProjectManager, Loading project: c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Customization\Esoft\Esoft.csproj
[10:11:00] INFORMATION: OmniSharp.MSBuild.ProjectManager, Adding project 'c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Customization\Esoft\Esoft.csproj'
[10:11:00] INFORMATION: OmniSharp.MSBuild.ProjectManager, Loading project: c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Customization\Geas\Geas.csproj
[10:11:01] INFORMATION: OmniSharp.MSBuild.ProjectManager, Adding project 'c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Customization\Geas\Geas.csproj'
[10:11:01] INFORMATION: OmniSharp.MSBuild.ProjectManager, Loading project: c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Customization\Jungheinrich\Jungheinrich.csproj
[10:11:02] INFORMATION: OmniSharp.MSBuild.ProjectManager, Adding project 'c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Customization\Jungheinrich\Jungheinrich.csproj'
[10:11:02] INFORMATION: OmniSharp.MSBuild.ProjectManager, Loading project: c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Customization\MediaSaturnDeutschland\MediaSaturnDeutschland.csproj
[10:11:02] INFORMATION: OmniSharp.MSBuild.ProjectManager, Adding project 'c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Customization\MediaSaturnDeutschland\MediaSaturnDeutschland.csproj'
[10:11:02] INFORMATION: OmniSharp.MSBuild.ProjectManager, Loading project: c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Customization\MediaSaturnNetherlands\MediaSaturnNetherlands.csproj
[10:11:03] INFORMATION: OmniSharp.MSBuild.ProjectManager, Adding project 'c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Customization\MediaSaturnNetherlands\MediaSaturnNetherlands.csproj'
[10:11:03] INFORMATION: OmniSharp.MSBuild.ProjectManager, Loading project: c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Customization\MitieDe\MitieDe.csproj
[10:11:03] INFORMATION: OmniSharp.MSBuild.ProjectManager, Adding project 'c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Customization\MitieDe\MitieDe.csproj'
[10:11:03] INFORMATION: OmniSharp.MSBuild.ProjectManager, Loading project: c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Customization\Neopost\Neopost.csproj
[10:11:03] INFORMATION: OmniSharp.MSBuild.ProjectManager, Adding project 'c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Customization\Neopost\Neopost.csproj'
[10:11:03] INFORMATION: OmniSharp.MSBuild.ProjectManager, Loading project: c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Customization\NeopostF\NeopostF.csproj
[10:11:03] INFORMATION: OmniSharp.MSBuild.ProjectManager, Adding project 'c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Customization\NeopostF\NeopostF.csproj'
[10:11:03] INFORMATION: OmniSharp.MSBuild.ProjectManager, Loading project: c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Customization\NeoVac\NeoVac.csproj
[10:11:04] INFORMATION: OmniSharp.MSBuild.ProjectManager, Adding project 'c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Customization\NeoVac\NeoVac.csproj'
[10:11:04] INFORMATION: OmniSharp.MSBuild.ProjectManager, Loading project: c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Customization\Nova\Nova.csproj
[10:11:04] INFORMATION: OmniSharp.MSBuild.ProjectManager, Adding project 'c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Customization\Nova\Nova.csproj'
[10:11:04] INFORMATION: OmniSharp.MSBuild.ProjectManager, Loading project: c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Customization\ResMed\ResMed.csproj
[10:11:05] INFORMATION: OmniSharp.MSBuild.ProjectManager, Adding project 'c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Customization\ResMed\ResMed.csproj'
[10:11:05] INFORMATION: OmniSharp.MSBuild.ProjectManager, Loading project: c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Customization\ResMed\ResMed\ResMed.csproj
[10:11:05] INFORMATION: OmniSharp.MSBuild.ProjectManager, Adding project 'c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Customization\ResMed\ResMed\ResMed.csproj'
[10:11:05] INFORMATION: OmniSharp.MSBuild.ProjectManager, Loading project: c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Customization\Rewe\Rewe.csproj
[10:11:05] INFORMATION: OmniSharp.MSBuild.ProjectManager, Adding project 'c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Customization\Rewe\Rewe.csproj'
[10:11:05] INFORMATION: OmniSharp.MSBuild.ProjectManager, Loading project: c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Customization\RMPFS\RMPFS.csproj
[10:11:06] INFORMATION: OmniSharp.MSBuild.ProjectManager, Adding project 'c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Customization\RMPFS\RMPFS.csproj'
[10:11:06] INFORMATION: OmniSharp.MSBuild.ProjectManager, Loading project: c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Customization\Seco\Seco.csproj
[10:11:06] INFORMATION: OmniSharp.MSBuild.ProjectManager, Adding project 'c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Customization\Seco\Seco.csproj'
[10:11:06] INFORMATION: OmniSharp.MSBuild.ProjectManager, Loading project: c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Customization\Tchibo\Tchibo.csproj
[10:11:08] INFORMATION: OmniSharp.MSBuild.ProjectManager, Adding project 'c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Customization\Tchibo\Tchibo.csproj'
[10:11:08] INFORMATION: OmniSharp.MSBuild.ProjectManager, Loading project: c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Customization\TGS\TGS.csproj
[10:11:10] INFORMATION: OmniSharp.MSBuild.ProjectManager, Adding project 'c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Customization\TGS\TGS.csproj'
[10:11:10] INFORMATION: OmniSharp.MSBuild.ProjectManager, Loading project: c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Customization\Wolf\Wolf.csproj
[10:11:11] INFORMATION: OmniSharp.MSBuild.ProjectManager, Adding project 'c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Customization\Wolf\Wolf.csproj'
[10:11:11] INFORMATION: OmniSharp.MSBuild.ProjectManager, Loading project: c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Fls\Base\Base.csproj
[10:11:11] INFORMATION: OmniSharp.MSBuild.ProjectManager, Adding project 'c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Fls\Base\Base.csproj'
[10:11:11] INFORMATION: OmniSharp.MSBuild.ProjectManager, Loading project: c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Fls\DataAccess\DataAccess.csproj
[10:11:11] INFORMATION: OmniSharp.MSBuild.ProjectManager, Adding project 'c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Fls\DataAccess\DataAccess.csproj'
[10:11:11] INFORMATION: OmniSharp.MSBuild.ProjectManager, Loading project: c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Fls\DllZipper\DllZipper.csproj
[10:11:11] INFORMATION: OmniSharp.MSBuild.ProjectManager, Adding project 'c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Fls\DllZipper\DllZipper.csproj'
[10:11:11] INFORMATION: OmniSharp.MSBuild.ProjectManager, Loading project: c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Fls\Net\Net.csproj
[10:11:14] WARNING: OmniSharp.MSBuild.ProjectLoader, The primary reference "c:\Users\Wolfgang.Ramos\visitour\client3\prod\Debug\Base.dll" could not be resolved because it was built against the ".NETFramework,Version=v4.5.2" framework. This is a higher version than the currently targeted framework ".NETFramework,Version=v4.0".
[10:11:14] INFORMATION: OmniSharp.MSBuild.ProjectManager, Adding project 'c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Fls\Net\Net.csproj'
[10:11:14] INFORMATION: OmniSharp.MSBuild.ProjectManager, Loading project: c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Fls\RuntimeDataBuilder\RuntimeDataBuilder.csproj
[10:11:14] INFORMATION: OmniSharp.MSBuild.ProjectManager, Adding project 'c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\Fls\RuntimeDataBuilder\RuntimeDataBuilder.csproj'
[10:11:14] INFORMATION: OmniSharp.MSBuild.ProjectManager, Loading project: c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\FlsControlsForms\DevExpress\FormsDevExpress\FormsDevExpress.csproj
[10:11:27] INFORMATION: OmniSharp.MSBuild.ProjectManager, Adding project 'c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\FlsControlsForms\DevExpress\FormsDevExpress\FormsDevExpress.csproj'
[10:11:27] INFORMATION: OmniSharp.MSBuild.ProjectManager, Loading project: c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\FlsControlsForms\FormsBase\FormsBase.csproj
[10:11:28] WARNING: OmniSharp.MSBuild.ProjectLoader, The primary reference "c:\Users\Wolfgang.Ramos\visitour\client3\prod\Debug\ViewModels.dll" could not be resolved because it was built against the ".NETFramework,Version=v4.5.2" framework. This is a higher version than the currently targeted framework ".NETFramework,Version=v4.0".
[10:11:28] WARNING: OmniSharp.MSBuild.ProjectLoader, The primary reference "c:\Users\Wolfgang.Ramos\visitour\client3\prod\Debug\Base.dll" could not be resolved because it was built against the ".NETFramework,Version=v4.5.2" framework. This is a higher version than the currently targeted framework ".NETFramework,Version=v4.0".
[10:11:28] WARNING: OmniSharp.MSBuild.ProjectLoader, The primary reference "c:\Users\Wolfgang.Ramos\visitour\client3\prod\Debug\ViewModels.dll" could not be resolved because it has an indirect dependency on the assembly "Base, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" which was built against the ".NETFramework,Version=v4.5.2" framework. This is a higher version than the currently targeted framework ".NETFramework,Version=v4.0".
[10:11:28] WARNING: OmniSharp.MSBuild.ProjectLoader, The primary reference "c:\Users\Wolfgang.Ramos\visitour\client3\prod\Debug\ViewModels.dll" could not be resolved because it has an indirect dependency on the assembly "RuntimeDataBuilder, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" which was built against the ".NETFramework,Version=v4.5.2" framework. This is a higher version than the currently targeted framework ".NETFramework,Version=v4.0".
[10:11:28] WARNING: OmniSharp.MSBuild.ProjectLoader, The primary reference "c:\Users\Wolfgang.Ramos\visitour\client3\prod\Debug\ViewModels.dll" could not be resolved because it has an indirect dependency on the assembly "DataAccess, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" which was built against the ".NETFramework,Version=v4.5.2" framework. This is a higher version than the currently targeted framework ".NETFramework,Version=v4.0".
[10:11:28] INFORMATION: OmniSharp.MSBuild.ProjectManager, Adding project 'c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\FlsControlsForms\FormsBase\FormsBase.csproj'
[10:11:28] INFORMATION: OmniSharp.MSBuild.ProjectManager, Loading project: c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\FlsControlsForms\MapBoxBase\MapBoxBase.csproj
[10:11:28] INFORMATION: OmniSharp.MSBuild.ProjectManager, Adding project 'c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\FlsControlsForms\MapBoxBase\MapBoxBase.csproj'
[10:11:28] INFORMATION: OmniSharp.MSBuild.ProjectManager, Loading project: c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\FlsControlsForms\MapBoxControl\MapBoxForm.csproj
[10:11:28] INFORMATION: OmniSharp.MSBuild.ProjectManager, Adding project 'c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\FlsControlsForms\MapBoxControl\MapBoxForm.csproj'
[10:11:28] INFORMATION: OmniSharp.MSBuild.ProjectManager, Loading project: c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\FlsControlsForms\VisiTourClient\VisiTourClient.csproj
[10:11:31] INFORMATION: OmniSharp.MSBuild.ProjectManager, Adding project 'c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\FlsControlsForms\VisiTourClient\VisiTourClient.csproj'
[10:11:31] INFORMATION: OmniSharp.MSBuild.ProjectManager, Loading project: c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\FlsUI\ViewModels\ViewModels.csproj
[10:11:31] INFORMATION: OmniSharp.MSBuild.ProjectManager, Adding project 'c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\FlsUI\ViewModels\ViewModels.csproj'
[10:11:31] INFORMATION: OmniSharp.MSBuild.ProjectManager, Loading project: c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\MapBoxTest\MapBoxTest.csproj
[10:12:01] WARNING: OmniSharp.MSBuild.ProjectLoader, The primary reference "c:\Users\Wolfgang.Ramos\visitour\client3\prod\Debug\MapBoxBase.dll" could not be resolved because it was built against the ".NETFramework,Version=v4.5.2" framework. This is a higher version than the currently targeted framework ".NETFramework,Version=v4.0,Profile=Client".
[10:12:01] WARNING: OmniSharp.MSBuild.ProjectLoader, The primary reference "c:\Users\Wolfgang.Ramos\visitour\client3\prod\Debug\MapBoxControl.dll" could not be resolved because it has an indirect dependency on the assembly "MapBoxBase, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" which was built against the ".NETFramework,Version=v4.5.2" framework. This is a higher version than the currently targeted framework ".NETFramework,Version=v4.0,Profile=Client".
[10:12:01] WARNING: OmniSharp.MSBuild.ProjectLoader, The primary reference "c:\Users\Wolfgang.Ramos\visitour\client3\prod\Debug\MapBoxControl.dll" could not be resolved because it was built against the ".NETFramework,Version=v4.5.2" framework. This is a higher version than the currently targeted framework ".NETFramework,Version=v4.0,Profile=Client".
[10:12:01] WARNING: OmniSharp.MSBuild.ProjectLoader, The primary reference "c:\Users\Wolfgang.Ramos\visitour\client3\prod\Debug\MapBoxControl.dll" could not be resolved because it has an indirect dependency on the assembly "Base, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" which was built against the ".NETFramework,Version=v4.5.2" framework. This is a higher version than the currently targeted framework ".NETFramework,Version=v4.0,Profile=Client".
[10:12:01] WARNING: OmniSharp.MSBuild.ProjectLoader, The primary reference "c:\Users\Wolfgang.Ramos\visitour\client3\prod\Debug\MapBoxBase.dll" could not be resolved because it has an indirect dependency on the assembly "Base, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" which was built against the ".NETFramework,Version=v4.5.2" framework. This is a higher version than the currently targeted framework ".NETFramework,Version=v4.0,Profile=Client".
[10:12:01] WARNING: OmniSharp.MSBuild.ProjectLoader, The primary reference "c:\Users\Wolfgang.Ramos\visitour\client3\prod\Debug\MapBoxControl.dll" could not be resolved because it has an indirect dependency on the assembly "ViewModels, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" which was built against the ".NETFramework,Version=v4.5.2" framework. This is a higher version than the currently targeted framework ".NETFramework,Version=v4.0,Profile=Client".
[10:12:01] WARNING: OmniSharp.MSBuild.ProjectLoader, The primary reference "c:\Users\Wolfgang.Ramos\visitour\client3\prod\Debug\MapBoxBase.dll" could not be resolved because it has an indirect dependency on the assembly "ViewModels, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" which was built against the ".NETFramework,Version=v4.5.2" framework. This is a higher version than the currently targeted framework ".NETFramework,Version=v4.0,Profile=Client".
[10:12:01] WARNING: OmniSharp.MSBuild.ProjectLoader, The primary reference "c:\Users\Wolfgang.Ramos\visitour\client3\prod\Debug\MapBoxControl.dll" could not be resolved because it has an indirect dependency on the assembly "FormsDevExpress, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" which was built against the ".NETFramework,Version=v4.5.2" framework. This is a higher version than the currently targeted framework ".NETFramework,Version=v4.0,Profile=Client".
[10:12:01] WARNING: OmniSharp.MSBuild.ProjectLoader, The primary reference "c:\Users\Wolfgang.Ramos\visitour\client3\prod\Debug\MapBoxControl.dll" could not be resolved because it has an indirect dependency on the assembly "RuntimeDataBuilder, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" which was built against the ".NETFramework,Version=v4.5.2" framework. This is a higher version than the currently targeted framework ".NETFramework,Version=v4.0,Profile=Client".
[10:12:01] WARNING: OmniSharp.MSBuild.ProjectLoader, The primary reference "c:\Users\Wolfgang.Ramos\visitour\client3\prod\Debug\MapBoxBase.dll" could not be resolved because it has an indirect dependency on the assembly "RuntimeDataBuilder, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" which was built against the ".NETFramework,Version=v4.5.2" framework. This is a higher version than the currently targeted framework ".NETFramework,Version=v4.0,Profile=Client".
[10:12:01] WARNING: OmniSharp.MSBuild.ProjectLoader, The primary reference "c:\Users\Wolfgang.Ramos\visitour\client3\prod\Debug\MapBoxControl.dll" could not be resolved because it has an indirect dependency on the assembly "DataAccess, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" which was built against the ".NETFramework,Version=v4.5.2" framework. This is a higher version than the currently targeted framework ".NETFramework,Version=v4.0,Profile=Client".
[10:12:01] WARNING: OmniSharp.MSBuild.ProjectLoader, The primary reference "c:\Users\Wolfgang.Ramos\visitour\client3\prod\Debug\MapBoxBase.dll" could not be resolved because it has an indirect dependency on the assembly "DataAccess, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" which was built against the ".NETFramework,Version=v4.5.2" framework. This is a higher version than the currently targeted framework ".NETFramework,Version=v4.0,Profile=Client".
[10:12:01] INFORMATION: OmniSharp.MSBuild.ProjectManager, Adding project 'c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\MapBoxTest\MapBoxTest.csproj'
[10:12:01] INFORMATION: OmniSharp.MSBuild.ProjectManager, Loading project: c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\VisiTourClientMain\VisiTourClientMain.csproj
[10:12:02] INFORMATION: OmniSharp.MSBuild.ProjectManager, Adding project 'c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\projects\VisiTourClientMain\VisiTourClientMain.csproj'
[10:12:02] INFORMATION: OmniSharp.MSBuild.ProjectManager, Loading project: c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\solutions\VisiTourClient\DataAccessTest\DataAccessTest.csproj
[10:12:05] INFORMATION: OmniSharp.MSBuild.ProjectManager, Adding project 'c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\solutions\VisiTourClient\DataAccessTest\DataAccessTest.csproj'
[10:12:05] INFORMATION: OmniSharp.MSBuild.ProjectManager, Loading project: c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\solutions\VisiTourClient\MSDTests\MSDTests.csproj
[10:12:08] INFORMATION: OmniSharp.MSBuild.ProjectManager, Adding project 'c:/Users/Wolfgang.Ramos/visitour/client3/source\vs2010\solutions\VisiTourClient\MSDTests\MSDTests.csproj'
[10:12:08] INFORMATION: OmniSharp.MSBuild.ProjectManager, Loading project: c:/Users/Wolfgang.Ramos/visitour/client3/tools\ClientGuiTextCustomization\ClientGuiTextCustomization\ClientGuiTextCustomization.csproj
[10:12:36] WARNING: OmniSharp.MSBuild.ProjectLoader, Unbekannter Buildfehler, "Der Objektverweis wurde nicht auf eine Objektinstanz festgelegt." 
[10:12:36] INFORMATION: OmniSharp.MSBuild.ProjectManager, Adding project 'c:/Users/Wolfgang.Ramos/visitour/client3/tools\ClientGuiTextCustomization\ClientGuiTextCustomization\ClientGuiTextCustomization.csproj'
[10:12:36] INFORMATION: OmniSharp.MSBuild.ProjectManager, Loading project: c:/Users/Wolfgang.Ramos/visitour/client3/tools\Client_3_RightsViewer\Client_3_RightsViewer\Client_3_RightsViewer.csproj
[10:12:36] INFORMATION: OmniSharp.MSBuild.ProjectManager, Adding project 'c:/Users/Wolfgang.Ramos/visitour/client3/tools\Client_3_RightsViewer\Client_3_RightsViewer\Client_3_RightsViewer.csproj'
[10:12:36] INFORMATION: OmniSharp.MSBuild.ProjectManager, Loading project: c:/Users/Wolfgang.Ramos/visitour/client3/tools\Tchibo_importer\ImportTest\ImportTest\ImportTest.csproj
[10:12:39] INFORMATION: OmniSharp.MSBuild.ProjectManager, Adding project 'c:/Users/Wolfgang.Ramos/visitour/client3/tools\Tchibo_importer\ImportTest\ImportTest\ImportTest.csproj'
[10:12:40] INFORMATION: OmniSharp.MSBuild.ProjectManager, Update project: MSDInterfaceDescription
[10:12:43] INFORMATION: OmniSharp.MSBuild.ProjectManager, Update project: MSDInterfaceDescriptionTest
[10:12:43] INFORMATION: OmniSharp.MSBuild.ProjectManager, Found referenced project outside root directory: c:\Users\Wolfgang.Ramos\visitour\client3\customers\MediaSaturnDeutschland\MSDInterfaceDescription\MSDInterfaceDescription\MSDInterfaceDescription.csproj
[10:12:43] INFORMATION: OmniSharp.MSBuild.ProjectManager, Adding project 'c:\Users\Wolfgang.Ramos\visitour\client3\customers\MediaSaturnDeutschland\MSDInterfaceDescription\MSDInterfaceDescription\MSDInterfaceDescription.csproj'
[10:12:43] INFORMATION: OmniSharp.MSBuild.ProjectManager, Queue project update for 'c:\Users\Wolfgang.Ramos\visitour\client3\customers\MediaSaturnDeutschland\MSDInterfaceDescription\MSDInterfaceDescription\MSDInterfaceDescription.csproj'
[10:12:43] WARNING: OmniSharp.MSBuild.ProjectManager, Unable to resolve assembly 'c:\Users\Wolfgang.Ramos\visitour\client3\customers\MediaSaturnDeutschland\MSDInterfaceDescription\MSDInterfaceDescription\bin\Debug\MSDInterfaceDescription.dll'
[10:12:43] INFORMATION: OmniSharp.MSBuild.ProjectManager, Update project: Allianz_DE
[10:12:43] INFORMATION: OmniSharp.MSBuild.ProjectManager, Found referenced project outside root directory: c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\FlsControlsForms\DevExpress\FormsDevExpress\FormsDevExpress.csproj
[10:12:43] INFORMATION: OmniSharp.MSBuild.ProjectManager, Adding project 'c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\FlsControlsForms\DevExpress\FormsDevExpress\FormsDevExpress.csproj'
[10:12:43] INFORMATION: OmniSharp.MSBuild.ProjectManager, Queue project update for 'c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\FlsControlsForms\DevExpress\FormsDevExpress\FormsDevExpress.csproj'
[10:12:43] INFORMATION: OmniSharp.MSBuild.ProjectManager, Found referenced project outside root directory: c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\FlsControlsForms\MapBoxBase\MapBoxBase.csproj
[10:12:43] INFORMATION: OmniSharp.MSBuild.ProjectManager, Adding project 'c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\FlsControlsForms\MapBoxBase\MapBoxBase.csproj'
[10:12:43] INFORMATION: OmniSharp.MSBuild.ProjectManager, Queue project update for 'c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\FlsControlsForms\MapBoxBase\MapBoxBase.csproj'
[10:12:43] INFORMATION: OmniSharp.MSBuild.ProjectManager, Found referenced project outside root directory: c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\FlsControlsForms\VisiTourClient\VisiTourClient.csproj
[10:12:43] INFORMATION: OmniSharp.MSBuild.ProjectManager, Adding project 'c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\FlsControlsForms\VisiTourClient\VisiTourClient.csproj'
[10:12:43] INFORMATION: OmniSharp.MSBuild.ProjectManager, Queue project update for 'c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\FlsControlsForms\VisiTourClient\VisiTourClient.csproj'
[10:12:43] INFORMATION: OmniSharp.MSBuild.ProjectManager, Found referenced project outside root directory: c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\FlsUI\ViewModels\ViewModels.csproj
[10:12:43] INFORMATION: OmniSharp.MSBuild.ProjectManager, Adding project 'c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\FlsUI\ViewModels\ViewModels.csproj'
[10:12:43] INFORMATION: OmniSharp.MSBuild.ProjectManager, Queue project update for 'c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\FlsUI\ViewModels\ViewModels.csproj'
[10:12:43] INFORMATION: OmniSharp.MSBuild.ProjectManager, Found referenced project outside root directory: c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\Fls\Base\Base.csproj
[10:12:44] INFORMATION: OmniSharp.MSBuild.ProjectManager, Adding project 'c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\Fls\Base\Base.csproj'
[10:12:44] INFORMATION: OmniSharp.MSBuild.ProjectManager, Queue project update for 'c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\Fls\Base\Base.csproj'
[10:12:44] INFORMATION: OmniSharp.MSBuild.ProjectManager, Found referenced project outside root directory: c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\Fls\DataAccess\DataAccess.csproj
[10:12:44] INFORMATION: OmniSharp.MSBuild.ProjectManager, Adding project 'c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\Fls\DataAccess\DataAccess.csproj'
[10:12:44] INFORMATION: OmniSharp.MSBuild.ProjectManager, Queue project update for 'c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\Fls\DataAccess\DataAccess.csproj'
[10:12:44] INFORMATION: OmniSharp.MSBuild.ProjectManager, Found referenced project outside root directory: c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\Fls\RuntimeDataBuilder\RuntimeDataBuilder.csproj
[10:12:44] INFORMATION: OmniSharp.MSBuild.ProjectManager, Adding project 'c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\Fls\RuntimeDataBuilder\RuntimeDataBuilder.csproj'
[10:12:44] INFORMATION: OmniSharp.MSBuild.ProjectManager, Queue project update for 'c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\Fls\RuntimeDataBuilder\RuntimeDataBuilder.csproj'
[10:12:44] INFORMATION: OmniSharp.MSBuild.ProjectManager, Update project: BES
[10:12:44] INFORMATION: OmniSharp.MSBuild.ProjectManager, Update project: BSHLogistics
[10:12:44] INFORMATION: OmniSharp.MSBuild.ProjectManager, Update project: Coffema
[10:12:44] INFORMATION: OmniSharp.MSBuild.ProjectManager, Update project: DefaultCustomization
[10:12:44] INFORMATION: OmniSharp.MSBuild.ProjectManager, Update project: Esoft
[10:12:44] INFORMATION: OmniSharp.MSBuild.ProjectManager, Update project: Geas
[10:12:44] INFORMATION: OmniSharp.MSBuild.ProjectManager, Update project: Jungheinrich
[10:12:44] INFORMATION: OmniSharp.MSBuild.ProjectManager, Found referenced project outside root directory: c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\FlsControlsForms\MapBoxControl\MapBoxForm.csproj
[10:12:45] INFORMATION: OmniSharp.MSBuild.ProjectManager, Adding project 'c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\FlsControlsForms\MapBoxControl\MapBoxForm.csproj'
[10:12:45] INFORMATION: OmniSharp.MSBuild.ProjectManager, Queue project update for 'c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\FlsControlsForms\MapBoxControl\MapBoxForm.csproj'
[10:12:45] INFORMATION: OmniSharp.MSBuild.ProjectManager, Update project: MediaSaturnDeutschland
[10:12:45] INFORMATION: OmniSharp.MSBuild.ProjectManager, Update project: MediaSaturnNetherlands
[10:12:45] INFORMATION: OmniSharp.MSBuild.ProjectManager, Update project: MitieDe
[10:12:45] INFORMATION: OmniSharp.MSBuild.ProjectManager, Update project: Neopost
[10:12:45] INFORMATION: OmniSharp.MSBuild.ProjectManager, Update project: NeopostF
[10:12:45] INFORMATION: OmniSharp.MSBuild.ProjectManager, Update project: NeoVac
[10:12:45] INFORMATION: OmniSharp.MSBuild.ProjectManager, Update project: Nova
[10:12:45] INFORMATION: OmniSharp.MSBuild.ProjectManager, Update project: ResMed
[10:12:45] INFORMATION: OmniSharp.MSBuild.ProjectManager, Update project: ResMed
[10:12:45] INFORMATION: OmniSharp.MSBuild.ProjectManager, Update project: Rewe
[10:12:45] INFORMATION: OmniSharp.MSBuild.ProjectManager, Update project: RMPFS
[10:12:45] INFORMATION: OmniSharp.MSBuild.ProjectManager, Update project: Seco
[10:12:45] INFORMATION: OmniSharp.MSBuild.ProjectManager, Update project: Tchibo
[10:12:45] INFORMATION: OmniSharp.MSBuild.ProjectManager, Update project: TGS
[10:12:45] INFORMATION: OmniSharp.MSBuild.ProjectManager, Update project: Wolf
[10:12:47] INFORMATION: OmniSharp.MSBuild.ProjectManager, Update project: Base
[10:12:47] INFORMATION: OmniSharp.MSBuild.ProjectManager, Update project: DataAccess
[10:12:47] INFORMATION: OmniSharp.MSBuild.ProjectManager, Update project: DllZipper
[10:12:47] INFORMATION: OmniSharp.MSBuild.ProjectManager, Update project: Net
[10:12:48] INFORMATION: OmniSharp.MSBuild.ProjectManager, Update project: RuntimeDataBuilder
[10:12:49] INFORMATION: OmniSharp.MSBuild.ProjectManager, Update project: FormsDevExpress
[10:12:50] INFORMATION: OmniSharp.MSBuild.ProjectManager, Update project: FormsBase
[10:12:50] INFORMATION: OmniSharp.MSBuild.ProjectManager, Update project: MapBoxBase
[10:12:50] INFORMATION: OmniSharp.MSBuild.ProjectManager, Update project: MapBoxForm
[10:12:53] INFORMATION: OmniSharp.MSBuild.ProjectManager, Update project: VisiTourClient
[10:12:53] INFORMATION: OmniSharp.MSBuild.ProjectManager, Update project: ViewModels
[10:12:53] INFORMATION: OmniSharp.MSBuild.ProjectManager, Update project: MapBoxTest
[10:12:54] INFORMATION: OmniSharp.MSBuild.ProjectManager, Update project: VisiTourClientMain
[10:12:54] INFORMATION: OmniSharp.MSBuild.ProjectManager, Update project: DataAccessTest
[10:12:54] INFORMATION: OmniSharp.MSBuild.ProjectManager, Found referenced project outside root directory: c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\Customization\Allianz_DE\Allianz_DE.csproj
[10:12:54] INFORMATION: OmniSharp.MSBuild.ProjectManager, Adding project 'c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\Customization\Allianz_DE\Allianz_DE.csproj'
[10:12:54] INFORMATION: OmniSharp.MSBuild.ProjectManager, Queue project update for 'c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\Customization\Allianz_DE\Allianz_DE.csproj'
[10:12:54] INFORMATION: OmniSharp.MSBuild.ProjectManager, Found referenced project outside root directory: c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\Customization\BSHLogistics\BSHLogistics.csproj
[10:12:54] INFORMATION: OmniSharp.MSBuild.ProjectManager, Adding project 'c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\Customization\BSHLogistics\BSHLogistics.csproj'
[10:12:54] INFORMATION: OmniSharp.MSBuild.ProjectManager, Queue project update for 'c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\Customization\BSHLogistics\BSHLogistics.csproj'
[10:12:54] INFORMATION: OmniSharp.MSBuild.ProjectManager, Found referenced project outside root directory: c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\Customization\Coffema\Coffema.csproj
[10:12:54] INFORMATION: OmniSharp.MSBuild.ProjectManager, Adding project 'c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\Customization\Coffema\Coffema.csproj'
[10:12:54] INFORMATION: OmniSharp.MSBuild.ProjectManager, Queue project update for 'c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\Customization\Coffema\Coffema.csproj'
[10:12:54] INFORMATION: OmniSharp.MSBuild.ProjectManager, Found referenced project outside root directory: c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\Customization\DefaultCustomization\DefaultCustomization.csproj
[10:12:54] INFORMATION: OmniSharp.MSBuild.ProjectManager, Adding project 'c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\Customization\DefaultCustomization\DefaultCustomization.csproj'
[10:12:54] INFORMATION: OmniSharp.MSBuild.ProjectManager, Queue project update for 'c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\Customization\DefaultCustomization\DefaultCustomization.csproj'
[10:12:54] INFORMATION: OmniSharp.MSBuild.ProjectManager, Found referenced project outside root directory: c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\Customization\Esoft\Esoft.csproj
[10:12:54] INFORMATION: OmniSharp.MSBuild.ProjectManager, Adding project 'c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\Customization\Esoft\Esoft.csproj'
[10:12:54] INFORMATION: OmniSharp.MSBuild.ProjectManager, Queue project update for 'c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\Customization\Esoft\Esoft.csproj'
[10:12:54] INFORMATION: OmniSharp.MSBuild.ProjectManager, Found referenced project outside root directory: c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\Customization\Geas\Geas.csproj
[10:12:54] INFORMATION: OmniSharp.MSBuild.ProjectManager, Adding project 'c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\Customization\Geas\Geas.csproj'
[10:12:54] INFORMATION: OmniSharp.MSBuild.ProjectManager, Queue project update for 'c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\Customization\Geas\Geas.csproj'
[10:12:54] INFORMATION: OmniSharp.MSBuild.ProjectManager, Found referenced project outside root directory: c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\Customization\Jungheinrich\Jungheinrich.csproj
[10:12:54] INFORMATION: OmniSharp.MSBuild.ProjectManager, Adding project 'c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\Customization\Jungheinrich\Jungheinrich.csproj'
[10:12:54] INFORMATION: OmniSharp.MSBuild.ProjectManager, Queue project update for 'c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\Customization\Jungheinrich\Jungheinrich.csproj'
[10:12:54] INFORMATION: OmniSharp.MSBuild.ProjectManager, Found referenced project outside root directory: c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\Customization\MediaSaturnDeutschland\MediaSaturnDeutschland.csproj
[10:12:54] INFORMATION: OmniSharp.MSBuild.ProjectManager, Adding project 'c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\Customization\MediaSaturnDeutschland\MediaSaturnDeutschland.csproj'
[10:12:54] INFORMATION: OmniSharp.MSBuild.ProjectManager, Queue project update for 'c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\Customization\MediaSaturnDeutschland\MediaSaturnDeutschland.csproj'
[10:12:54] INFORMATION: OmniSharp.MSBuild.ProjectManager, Found referenced project outside root directory: c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\Customization\NeoVac\NeoVac.csproj
[10:12:57] INFORMATION: OmniSharp.MSBuild.ProjectManager, Adding project 'c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\Customization\NeoVac\NeoVac.csproj'
[10:12:57] INFORMATION: OmniSharp.MSBuild.ProjectManager, Queue project update for 'c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\Customization\NeoVac\NeoVac.csproj'
[10:12:57] INFORMATION: OmniSharp.MSBuild.ProjectManager, Found referenced project outside root directory: c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\Customization\ResMed\ResMed.csproj
[10:13:00] INFORMATION: OmniSharp.MSBuild.ProjectManager, Adding project 'c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\Customization\ResMed\ResMed.csproj'
[10:13:00] INFORMATION: OmniSharp.MSBuild.ProjectManager, Queue project update for 'c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\Customization\ResMed\ResMed.csproj'
[10:13:00] INFORMATION: OmniSharp.MSBuild.ProjectManager, Found referenced project outside root directory: c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\Customization\Rewe\Rewe.csproj
[10:13:02] INFORMATION: OmniSharp.MSBuild.ProjectManager, Adding project 'c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\Customization\Rewe\Rewe.csproj'
[10:13:02] INFORMATION: OmniSharp.MSBuild.ProjectManager, Queue project update for 'c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\Customization\Rewe\Rewe.csproj'
[10:13:02] INFORMATION: OmniSharp.MSBuild.ProjectManager, Found referenced project outside root directory: c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\Customization\Seco\Seco.csproj
[10:13:04] INFORMATION: OmniSharp.MSBuild.ProjectManager, Adding project 'c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\Customization\Seco\Seco.csproj'
[10:13:04] INFORMATION: OmniSharp.MSBuild.ProjectManager, Queue project update for 'c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\Customization\Seco\Seco.csproj'
[10:13:04] INFORMATION: OmniSharp.MSBuild.ProjectManager, Found referenced project outside root directory: c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\Customization\Tchibo\Tchibo.csproj
[10:13:08] INFORMATION: OmniSharp.MSBuild.ProjectManager, Adding project 'c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\Customization\Tchibo\Tchibo.csproj'
[10:13:08] INFORMATION: OmniSharp.MSBuild.ProjectManager, Queue project update for 'c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\Customization\Tchibo\Tchibo.csproj'
[10:13:08] INFORMATION: OmniSharp.MSBuild.ProjectManager, Found referenced project outside root directory: c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\Customization\TGS\TGS.csproj
[10:13:10] INFORMATION: OmniSharp.MSBuild.ProjectManager, Adding project 'c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\Customization\TGS\TGS.csproj'
[10:13:10] INFORMATION: OmniSharp.MSBuild.ProjectManager, Queue project update for 'c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\Customization\TGS\TGS.csproj'
[10:13:10] INFORMATION: OmniSharp.MSBuild.ProjectManager, Found referenced project outside root directory: c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\Customization\Wolf\Wolf.csproj
[10:13:10] INFORMATION: OmniSharp.MSBuild.ProjectManager, Adding project 'c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\Customization\Wolf\Wolf.csproj'
[10:13:10] INFORMATION: OmniSharp.MSBuild.ProjectManager, Queue project update for 'c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\Customization\Wolf\Wolf.csproj'
[10:13:10] INFORMATION: OmniSharp.MSBuild.ProjectManager, Update project: MSDTests
[10:13:10] INFORMATION: OmniSharp.MSBuild.ProjectManager, Found referenced project outside root directory: c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\solutions\VisiTourClient\DataAccessTest\DataAccessTest.csproj
[10:13:10] INFORMATION: OmniSharp.MSBuild.ProjectManager, Adding project 'c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\solutions\VisiTourClient\DataAccessTest\DataAccessTest.csproj'
[10:13:10] INFORMATION: OmniSharp.MSBuild.ProjectManager, Queue project update for 'c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\solutions\VisiTourClient\DataAccessTest\DataAccessTest.csproj'
[10:13:10] WARNING: OmniSharp.MSBuild.ProjectManager, Unable to resolve assembly 'c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\solutions\VisiTourClient\DataAccessTest\bin\Debug\DataAccessTest.exe'
[10:13:10] INFORMATION: OmniSharp.MSBuild.ProjectManager, Update project: ClientGuiTextCustomization
[10:13:11] INFORMATION: OmniSharp.MSBuild.ProjectManager, Update project: Client_3_RightsViewer
[10:13:11] INFORMATION: OmniSharp.MSBuild.ProjectManager, Update project: ImportTest
[10:13:12] INFORMATION: OmniSharp.MSBuild.ProjectManager, Loading project: c:\Users\Wolfgang.Ramos\visitour\client3\customers\MediaSaturnDeutschland\MSDInterfaceDescription\MSDInterfaceDescription\MSDInterfaceDescription.csproj
[10:13:12] INFORMATION: OmniSharp.MSBuild.ProjectManager, Loading project: c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\FlsControlsForms\DevExpress\FormsDevExpress\FormsDevExpress.csproj
[10:13:13] INFORMATION: OmniSharp.MSBuild.ProjectManager, Loading project: c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\FlsControlsForms\MapBoxBase\MapBoxBase.csproj
[10:13:13] INFORMATION: OmniSharp.MSBuild.ProjectManager, Loading project: c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\FlsControlsForms\VisiTourClient\VisiTourClient.csproj
[10:13:15] INFORMATION: OmniSharp.MSBuild.ProjectManager, Loading project: c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\FlsUI\ViewModels\ViewModels.csproj
[10:13:15] INFORMATION: OmniSharp.MSBuild.ProjectManager, Loading project: c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\Fls\Base\Base.csproj
[10:13:15] INFORMATION: OmniSharp.MSBuild.ProjectManager, Loading project: c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\Fls\DataAccess\DataAccess.csproj
[10:13:15] INFORMATION: OmniSharp.MSBuild.ProjectManager, Loading project: c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\Fls\RuntimeDataBuilder\RuntimeDataBuilder.csproj
[10:13:15] INFORMATION: OmniSharp.MSBuild.ProjectManager, Loading project: c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\FlsControlsForms\MapBoxControl\MapBoxForm.csproj
[10:13:16] INFORMATION: OmniSharp.MSBuild.ProjectManager, Loading project: c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\Customization\Allianz_DE\Allianz_DE.csproj
[10:13:16] INFORMATION: OmniSharp.MSBuild.ProjectManager, Loading project: c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\Customization\BSHLogistics\BSHLogistics.csproj
[10:13:17] INFORMATION: OmniSharp.MSBuild.ProjectManager, Loading project: c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\Customization\Coffema\Coffema.csproj
[10:13:17] INFORMATION: OmniSharp.MSBuild.ProjectManager, Loading project: c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\Customization\DefaultCustomization\DefaultCustomization.csproj
[10:13:17] INFORMATION: OmniSharp.MSBuild.ProjectManager, Loading project: c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\Customization\Esoft\Esoft.csproj
[10:13:18] INFORMATION: OmniSharp.MSBuild.ProjectManager, Loading project: c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\Customization\Geas\Geas.csproj
[10:13:18] INFORMATION: OmniSharp.MSBuild.ProjectManager, Loading project: c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\Customization\Jungheinrich\Jungheinrich.csproj
[10:13:19] INFORMATION: OmniSharp.MSBuild.ProjectManager, Loading project: c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\Customization\MediaSaturnDeutschland\MediaSaturnDeutschland.csproj
[10:13:20] INFORMATION: OmniSharp.MSBuild.ProjectManager, Loading project: c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\Customization\NeoVac\NeoVac.csproj
[10:13:20] INFORMATION: OmniSharp.MSBuild.ProjectManager, Loading project: c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\Customization\ResMed\ResMed.csproj
[10:13:21] INFORMATION: OmniSharp.MSBuild.ProjectManager, Loading project: c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\Customization\Rewe\Rewe.csproj
[10:13:23] INFORMATION: OmniSharp.MSBuild.ProjectManager, Loading project: c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\Customization\Seco\Seco.csproj
[10:13:26] INFORMATION: OmniSharp.MSBuild.ProjectManager, Loading project: c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\Customization\Tchibo\Tchibo.csproj
[10:13:29] INFORMATION: OmniSharp.MSBuild.ProjectManager, Loading project: c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\Customization\TGS\TGS.csproj
[10:13:33] INFORMATION: OmniSharp.MSBuild.ProjectManager, Loading project: c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\projects\Customization\Wolf\Wolf.csproj
[10:13:34] INFORMATION: OmniSharp.MSBuild.ProjectManager, Loading project: c:\Users\Wolfgang.Ramos\visitour\client3\source\vs2010\solutions\VisiTourClient\DataAccessTest\DataAccessTest.csproj
[10:13:38] INFORMATION: OmniSharp.MSBuild.ProjectManager, Update project: MSDInterfaceDescription
[10:13:38] INFORMATION: OmniSharp.MSBuild.ProjectManager, Update project: FormsDevExpress
[10:13:38] INFORMATION: OmniSharp.MSBuild.ProjectManager, Update project: MapBoxBase
[10:13:38] INFORMATION: OmniSharp.MSBuild.ProjectManager, Update project: VisiTourClient
[10:13:38] INFORMATION: OmniSharp.MSBuild.ProjectManager, Update project: ViewModels
[10:13:38] INFORMATION: OmniSharp.MSBuild.ProjectManager, Update project: Base
[10:13:38] INFORMATION: OmniSharp.MSBuild.ProjectManager, Update project: DataAccess
[10:13:38] INFORMATION: OmniSharp.MSBuild.ProjectManager, Update project: RuntimeDataBuilder
[10:13:38] INFORMATION: OmniSharp.MSBuild.ProjectManager, Update project: MapBoxForm
[10:13:38] INFORMATION: OmniSharp.MSBuild.ProjectManager, Update project: Allianz_DE
[10:13:38] INFORMATION: OmniSharp.MSBuild.ProjectManager, Update project: BSHLogistics
[10:13:38] INFORMATION: OmniSharp.MSBuild.ProjectManager, Update project: Coffema
[10:13:38] INFORMATION: OmniSharp.MSBuild.ProjectManager, Update project: DefaultCustomization
[10:13:38] INFORMATION: OmniSharp.MSBuild.ProjectManager, Update project: Esoft
[10:13:38] INFORMATION: OmniSharp.MSBuild.ProjectManager, Update project: Geas
[10:13:38] INFORMATION: OmniSharp.MSBuild.ProjectManager, Update project: Jungheinrich
[10:13:38] INFORMATION: OmniSharp.MSBuild.ProjectManager, Update project: MediaSaturnDeutschland
[10:13:38] INFORMATION: OmniSharp.MSBuild.ProjectManager, Update project: NeoVac
[10:13:38] INFORMATION: OmniSharp.MSBuild.ProjectManager, Update project: ResMed
[10:13:38] INFORMATION: OmniSharp.MSBuild.ProjectManager, Update project: Rewe
[10:13:38] INFORMATION: OmniSharp.MSBuild.ProjectManager, Update project: Seco
[10:13:38] INFORMATION: OmniSharp.MSBuild.ProjectManager, Update project: Tchibo
[10:13:38] INFORMATION: OmniSharp.MSBuild.ProjectManager, Update project: TGS
[10:13:38] INFORMATION: OmniSharp.MSBuild.ProjectManager, Update project: Wolf
[10:13:38] INFORMATION: OmniSharp.MSBuild.ProjectManager, Update project: DataAccessTest
[10:17:23] <-- 38 /typelookup: ((Type) (Documentation))
[10:17:23] <-- 29 /typelookup: ((Type) (Documentation))
[10:17:23] <-- 31 /typelookup: ((Type) (Documentation))
[10:17:23] <-- 35 /typelookup: ((Type) (Documentation))
[10:17:23] <-- 33 /typelookup: ((Type) (Documentation))
[10:17:23] <-- 40 /typelookup: ((Type) (Documentation))
[10:17:23] <-- 37 /typelookup: ((Type) (Documentation))
[10:17:23] <-- 36 /autocomplete: [((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime") (RequiredNamespaceImport) (MethodHeader . "DateTime") (ReturnType) (Snippet . "DateTime$0") (Kind . "Struct") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime()") (RequiredNamespaceImport) (MethodHeader . "DateTime()") (ReturnType) (Snippet . "DateTime()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, Calendar calendar)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, Calendar calendar)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:Calendar calendar})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, int hour, int minute, int second)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, int hour, int minute, int second)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, int hour, int minute, int second, Calendar calendar)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, int hour, int minute, int second, Calendar calendar)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:Calendar calendar})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, int hour, int minute, int second, DateTimeKind kind)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, int hour, int minute, int second, DateTimeKind kind)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:DateTimeKind kind})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:int millisecond})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, Calendar calendar)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, Calendar calendar)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:int millisecond}, ${8:Calendar calendar})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, Calendar calendar, DateTimeKind kind)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, Calendar calendar, DateTimeKind kind)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:int millisecond}, ${8:Calendar calendar}, ${9:DateTimeKind kind})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, DateTimeKind kind)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, DateTimeKind kind)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:int millisecond}, ${8:DateTimeKind kind})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(long ticks)") (RequiredNamespaceImport) (MethodHeader . "DateTime(long ticks)") (ReturnType) (Snippet . "DateTime(${1:long ticks})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(long ticks, DateTimeKind kind)") (RequiredNamespaceImport) (MethodHeader . "DateTime(long ticks, DateTimeKind kind)") (ReturnType) (Snippet . "DateTime(${1:long ticks}, ${2:DateTimeKind kind})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeConverter") (Description . "") (DisplayText . "DateTimeConverter") (RequiredNamespaceImport) (MethodHeader . "DateTimeConverter") (ReturnType) (Snippet . "DateTimeConverter$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeConverter") (Description . "") (DisplayText . "DateTimeConverter()") (RequiredNamespaceImport) (MethodHeader . "DateTimeConverter()") (ReturnType) (Snippet . "DateTimeConverter()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeEditView") (Description . "Implements a forms user control based on a view model.
This control 
") (DisplayText . "DateTimeEditView") (RequiredNamespaceImport) (MethodHeader . "DateTimeEditView") (ReturnType) (Snippet . "DateTimeEditView$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeEditView") (Description . "Initializes a new instance of the Fls.Controls.Forms.DevExpressBase.DateTimeEditView class.
") (DisplayText . "DateTimeEditView()") (RequiredNamespaceImport) (MethodHeader . "DateTimeEditView()") (ReturnType) (Snippet . "DateTimeEditView()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeEditView") (Description . "Initializes a new instance of the Fls.Controls.Forms.DevExpressBase.DateTimeEditView class.

viewModel: The used view model ") (DisplayText . "DateTimeEditView(DateTimeInputViewModel viewModel)") (RequiredNamespaceImport) (MethodHeader . "DateTimeEditView(DateTimeInputViewModel viewModel)") (ReturnType) (Snippet . "DateTimeEditView(${1:DateTimeInputViewModel viewModel})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeHelper") (Description . "") (DisplayText . "DateTimeHelper") (RequiredNamespaceImport) (MethodHeader . "DateTimeHelper") (ReturnType) (Snippet . "DateTimeHelper$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeInputViewModel") (Description . "Implements a model for date time input.
") (DisplayText . "DateTimeInputViewModel") (RequiredNamespaceImport) (MethodHeader . "DateTimeInputViewModel") (ReturnType) (Snippet . "DateTimeInputViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeInputViewModel") (Description . "Initializes a new instance of the Fls.UI.Base.DateTimeInputViewModel class.
") (DisplayText . "DateTimeInputViewModel()") (RequiredNamespaceImport) (MethodHeader . "DateTimeInputViewModel()") (ReturnType) (Snippet . "DateTimeInputViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeInputViewModel") (Description . "Initializes a new instance of the Fls.UI.Base.DateTimeInputViewModel class.

elementId: The elements id.") (DisplayText . "DateTimeInputViewModel(UIItemId elementId)") (RequiredNamespaceImport) (MethodHeader . "DateTimeInputViewModel(UIItemId elementId)") (ReturnType) (Snippet . "DateTimeInputViewModel(${1:UIItemId elementId})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeInputViewModel") (Description . "Initializes a new instance of the Fls.UI.Base.DateTimeInputViewModel class.

elementId: The elements id.
minDate: The minimum selectable date.
maxDate: The maximum selectable date.
selectedDate: The selected date.") (DisplayText . "DateTimeInputViewModel(UIItemId elementId, DateTime minDate, DateTime maxDate, DateTime selectedDate)") (RequiredNamespaceImport) (MethodHeader . "DateTimeInputViewModel(UIItemId elementId, DateTime minDate, DateTime maxDate, DateTime selectedDate)") (ReturnType) (Snippet . "DateTimeInputViewModel(${1:UIItemId elementId}, ${2:DateTime minDate}, ${3:DateTime maxDate}, ${4:DateTime selectedDate})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeInputViewModel") (Description . "Initializes a new instance of the Fls.UI.Base.DateTimeInputViewModel class.

elementId: The elements id.
selectedDate: The selected date.") (DisplayText . "DateTimeInputViewModel(UIItemId elementId, DateTime selectedDate)") (RequiredNamespaceImport) (MethodHeader . "DateTimeInputViewModel(UIItemId elementId, DateTime selectedDate)") (ReturnType) (Snippet . "DateTimeInputViewModel(${1:UIItemId elementId}, ${2:DateTime selectedDate})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeKind") (Description . "") (DisplayText . "DateTimeKind") (RequiredNamespaceImport) (MethodHeader . "DateTimeKind") (ReturnType) (Snippet . "DateTimeKind$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset") (ReturnType) (Snippet . "DateTimeOffset$0") (Kind . "Struct") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset()") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset()") (ReturnType) (Snippet . "DateTimeOffset()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset(DateTime dateTime)") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset(DateTime dateTime)") (ReturnType) (Snippet . "DateTimeOffset(${1:DateTime dateTime})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset(DateTime dateTime, TimeSpan offset)") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset(DateTime dateTime, TimeSpan offset)") (ReturnType) (Snippet . "DateTimeOffset(${1:DateTime dateTime}, ${2:TimeSpan offset})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset(int year, int month, int day, int hour, int minute, int second, int millisecond, Calendar calendar, TimeSpan offset)") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset(int year, int month, int day, int hour, int minute, int second, int millisecond, Calendar calendar, TimeSpan offset)") (ReturnType) (Snippet . "DateTimeOffset(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:int millisecond}, ${8:Calendar calendar}, ${9:TimeSpan offset})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset(int year, int month, int day, int hour, int minute, int second, int millisecond, TimeSpan offset)") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset(int year, int month, int day, int hour, int minute, int second, int millisecond, TimeSpan offset)") (ReturnType) (Snippet . "DateTimeOffset(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:int millisecond}, ${8:TimeSpan offset})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset(int year, int month, int day, int hour, int minute, int second, TimeSpan offset)") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset(int year, int month, int day, int hour, int minute, int second, TimeSpan offset)") (ReturnType) (Snippet . "DateTimeOffset(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:TimeSpan offset})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset(long ticks, TimeSpan offset)") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset(long ticks, TimeSpan offset)") (ReturnType) (Snippet . "DateTimeOffset(${1:long ticks}, ${2:TimeSpan offset})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffsetConverter") (Description . "") (DisplayText . "DateTimeOffsetConverter") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffsetConverter") (ReturnType) (Snippet . "DateTimeOffsetConverter$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffsetConverter") (Description . "") (DisplayText . "DateTimeOffsetConverter()") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffsetConverter()") (ReturnType) (Snippet . "DateTimeOffsetConverter()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeSlot") (Description . "Implements a model for time intervals. 
") (DisplayText . "DateTimeSlot") (RequiredNamespaceImport) (MethodHeader . "DateTimeSlot") (ReturnType) (Snippet . "DateTimeSlot$0") (Kind . "Struct") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeSlot") (Description . "") (DisplayText . "DateTimeSlot()") (RequiredNamespaceImport) (MethodHeader . "DateTimeSlot()") (ReturnType) (Snippet . "DateTimeSlot()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeSlot") (Description . "Initializes a new instance of the Fls.Base.DateTimeSlot structure. 

start: The start time. 
duration: The duration. ") (DisplayText . "DateTimeSlot(DateTime start, DateTime end)") (RequiredNamespaceImport) (MethodHeader . "DateTimeSlot(DateTime start, DateTime end)") (ReturnType) (Snippet . "DateTimeSlot(${1:DateTime start}, ${2:DateTime end})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeSlot") (Description . "Initializes a new instance of the Fls.Base.DateTimeSlot structure. 

start: The start time. 
duration: The duration. ") (DisplayText . "DateTimeSlot(DateTime start, TimeSpan duration)") (RequiredNamespaceImport) (MethodHeader . "DateTimeSlot(DateTime start, TimeSpan duration)") (ReturnType) (Snippet . "DateTimeSlot(${1:DateTime start}, ${2:TimeSpan duration})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "EntityUpdateType") (Description . "") (DisplayText . "EntityUpdateType") (RequiredNamespaceImport) (MethodHeader . "EntityUpdateType") (ReturnType) (Snippet . "EntityUpdateType$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "IDateTimeInputViewModel") (Description . "Implements an interface for date time object which may use only date or only time or both or nothing.
") (DisplayText . "IDateTimeInputViewModel") (RequiredNamespaceImport) (MethodHeader . "IDateTimeInputViewModel") (ReturnType) (Snippet . "IDateTimeInputViewModel$0") (Kind . "Interface") (IsSuggestionMode . :json-false)) ((CompletionText . "IMaxMinDateTime") (Description . "Implements an interface for minimum and maximum date time classes.
") (DisplayText . "IMaxMinDateTime") (RequiredNamespaceImport) (MethodHeader . "IMaxMinDateTime") (ReturnType) (Snippet . "IMaxMinDateTime$0") (Kind . "Interface") (IsSuggestionMode . :json-false)) ((CompletionText . "ReConvertDateTimesEventArgs") (Description . "") (DisplayText . "ReConvertDateTimesEventArgs") (RequiredNamespaceImport) (MethodHeader . "ReConvertDateTimesEventArgs") (ReturnType) (Snippet . "ReConvertDateTimesEventArgs$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ReConvertDateTimesEventArgs") (Description . "") (DisplayText . "ReConvertDateTimesEventArgs(ITimeConverter converter, IProvideToday dateForTimeOfDayConversion)") (RequiredNamespaceImport) (MethodHeader . "ReConvertDateTimesEventArgs(ITimeConverter converter, IProvideToday dateForTimeOfDayConversion)") (ReturnType) (Snippet . "ReConvertDateTimesEventArgs(${1:ITimeConverter converter}, ${2:IProvideToday dateForTimeOfDayConversion})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "SchedulerViewDateTimeSlotModel") (Description . "Implements a model for scheduler view scheduleTable column header.
") (DisplayText . "SchedulerViewDateTimeSlotModel") (RequiredNamespaceImport) (MethodHeader . "SchedulerViewDateTimeSlotModel") (ReturnType) (Snippet . "SchedulerViewDateTimeSlotModel$0") (Kind . "Struct") (IsSuggestionMode . :json-false)) ((CompletionText . "SchedulerViewDateTimeSlotModel") (Description . "") (DisplayText . "SchedulerViewDateTimeSlotModel()") (RequiredNamespaceImport) (MethodHeader . "SchedulerViewDateTimeSlotModel()") (ReturnType) (Snippet . "SchedulerViewDateTimeSlotModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "SchedulerViewDateTimeSlotModel") (Description . "Initializes a new instance of the Fls.VisiTourClient.ViewModel.Scheduler.SchedulerViewDateTimeSlotModel struct.

slot: The date time slot.
isZombieTime: Indicates that slot is a zombie.
width: The slots width.") (DisplayText . "SchedulerViewDateTimeSlotModel(DateTimeSlot slot, bool isZombieTime, double width)") (RequiredNamespaceImport) (MethodHeader . "SchedulerViewDateTimeSlotModel(DateTimeSlot slot, bool isZombieTime, double width)") (ReturnType) (Snippet . "SchedulerViewDateTimeSlotModel(${1:DateTimeSlot slot}, ${2:bool isZombieTime}, ${3:double width})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateTeamSelections") (Description . "") (DisplayText . "UpdateTeamSelections()") (RequiredNamespaceImport) (MethodHeader . "UpdateTeamSelections()") (ReturnType . "void") (Snippet . "UpdateTeamSelections();$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "XmlDateTimeSerializationMode") (Description . "") (DisplayText . "XmlDateTimeSerializationMode") (RequiredNamespaceImport) (MethodHeader . "XmlDateTimeSerializationMode") (ReturnType) (Snippet . "XmlDateTimeSerializationMode$0") (Kind . "Enum") (IsSuggestionMode . :json-false))]
[10:17:23] <-- 39 /autocomplete: [((CompletionText . "DataAccess") (Description . "") (DisplayText . "DataAccess") (RequiredNamespaceImport) (MethodHeader . "DataAccess") (ReturnType) (Snippet . "DataAccess$0") (Kind . "Namespace") (IsSuggestionMode . :json-false)) ((CompletionText . "DataBaseRequiredPropertiesType") (Description . "") (DisplayText . "DataBaseRequiredPropertiesType") (RequiredNamespaceImport) (MethodHeader . "DataBaseRequiredPropertiesType") (ReturnType) (Snippet . "DataBaseRequiredPropertiesType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataBaseRequiredPropertiesType") (Description . "DataBaseRequiredPropertiesType class constructor
") (DisplayText . "DataBaseRequiredPropertiesType()") (RequiredNamespaceImport) (MethodHeader . "DataBaseRequiredPropertiesType()") (ReturnType) (Snippet . "DataBaseRequiredPropertiesType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataConnection") (Description . "TODO: Update summary.
") (DisplayText . "DataConnection") (RequiredNamespaceImport) (MethodHeader . "DataConnection") (ReturnType) (Snippet . "DataConnection$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataConnection") (Description . "") (DisplayText . "DataConnection()") (RequiredNamespaceImport) (MethodHeader . "DataConnection()") (ReturnType) (Snippet . "DataConnection()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataConnection") (Description . "") (DisplayText . "DataConnection(DOBindingSource lookupBindingSource, DProperty propertyName, string summary, DProperty lookedUpProperty)") (RequiredNamespaceImport) (MethodHeader . "DataConnection(DOBindingSource lookupBindingSource, DProperty propertyName, string summary, DProperty lookedUpProperty)") (ReturnType) (Snippet . "DataConnection(${1:DOBindingSource lookupBindingSource}, ${2:DProperty propertyName}, ${3:string summary}, ${4:DProperty lookedUpProperty})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataConnection") (Description . "") (DisplayText . "DataConnection(DODataView lookupBindingSource, DProperty propertyName, string summary, DProperty lookedUpProperty)") (RequiredNamespaceImport) (MethodHeader . "DataConnection(DODataView lookupBindingSource, DProperty propertyName, string summary, DProperty lookedUpProperty)") (ReturnType) (Snippet . "DataConnection(${1:DODataView lookupBindingSource}, ${2:DProperty propertyName}, ${3:string summary}, ${4:DProperty lookedUpProperty})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataDependencyEventArgs") (Description . "Implements a model for request event arguments.
") (DisplayText . "DataDependencyEventArgs") (RequiredNamespaceImport) (MethodHeader . "DataDependencyEventArgs") (ReturnType) (Snippet . "DataDependencyEventArgs$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataDependencyEventArgs") (Description . "Initializes a new instance of the Fls.UI.Base.UserInformationEventArgs class.

request: An user request.") (DisplayText . "DataDependencyEventArgs(DataDependencyViewModel infoViewModel)") (RequiredNamespaceImport) (MethodHeader . "DataDependencyEventArgs(DataDependencyViewModel infoViewModel)") (ReturnType) (Snippet . "DataDependencyEventArgs(${1:DataDependencyViewModel infoViewModel})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataDependencyViewModel") (Description . "") (DisplayText . "DataDependencyViewModel") (RequiredNamespaceImport) (MethodHeader . "DataDependencyViewModel") (ReturnType) (Snippet . "DataDependencyViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataDependencyViewModel") (Description . "") (DisplayText . "DataDependencyViewModel(DOBindingSource source, IEnumerable<string> ignoreEntitiesList)") (RequiredNamespaceImport) (MethodHeader . "DataDependencyViewModel(DOBindingSource source, IEnumerable<string> ignoreEntitiesList)") (ReturnType) (Snippet . "DataDependencyViewModel(${1:DOBindingSource source}, ${2:IEnumerable<string> ignoreEntitiesList})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataErrorsChangedEventArgs") (Description . "") (DisplayText . "DataErrorsChangedEventArgs") (RequiredNamespaceImport) (MethodHeader . "DataErrorsChangedEventArgs") (ReturnType) (Snippet . "DataErrorsChangedEventArgs$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataErrorsChangedEventArgs") (Description . "") (DisplayText . "DataErrorsChangedEventArgs(string propertyName)") (RequiredNamespaceImport) (MethodHeader . "DataErrorsChangedEventArgs(string propertyName)") (ReturnType) (Snippet . "DataErrorsChangedEventArgs(${1:string propertyName})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataGroupType") (Description . "") (DisplayText . "DataGroupType") (RequiredNamespaceImport) (MethodHeader . "DataGroupType") (ReturnType) (Snippet . "DataGroupType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataGroupType") (Description . "DataGroupType class constructor
") (DisplayText . "DataGroupType()") (RequiredNamespaceImport) (MethodHeader . "DataGroupType()") (ReturnType) (Snippet . "DataGroupType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataItemType") (Description . "") (DisplayText . "DataItemType") (RequiredNamespaceImport) (MethodHeader . "DataItemType") (ReturnType) (Snippet . "DataItemType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataItemType") (Description . "") (DisplayText . "DataItemType()") (RequiredNamespaceImport) (MethodHeader . "DataItemType()") (ReturnType) (Snippet . "DataItemType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataItemTypeCreateStyle") (Description . "") (DisplayText . "DataItemTypeCreateStyle") (RequiredNamespaceImport) (MethodHeader . "DataItemTypeCreateStyle") (ReturnType) (Snippet . "DataItemTypeCreateStyle$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DataItemTypeEntityViewSourceMode") (Description . "") (DisplayText . "DataItemTypeEntityViewSourceMode") (RequiredNamespaceImport) (MethodHeader . "DataItemTypeEntityViewSourceMode") (ReturnType) (Snippet . "DataItemTypeEntityViewSourceMode$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DataItemTypeInitAction") (Description . "") (DisplayText . "DataItemTypeInitAction") (RequiredNamespaceImport) (MethodHeader . "DataItemTypeInitAction") (ReturnType) (Snippet . "DataItemTypeInitAction$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DataMisalignedException") (Description . "") (DisplayText . "DataMisalignedException") (RequiredNamespaceImport) (MethodHeader . "DataMisalignedException") (ReturnType) (Snippet . "DataMisalignedException$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataMisalignedException") (Description . "") (DisplayText . "DataMisalignedException()") (RequiredNamespaceImport) (MethodHeader . "DataMisalignedException()") (ReturnType) (Snippet . "DataMisalignedException()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataMisalignedException") (Description . "") (DisplayText . "DataMisalignedException(string message)") (RequiredNamespaceImport) (MethodHeader . "DataMisalignedException(string message)") (ReturnType) (Snippet . "DataMisalignedException(${1:string message})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataMisalignedException") (Description . "") (DisplayText . "DataMisalignedException(string message, Exception innerException)") (RequiredNamespaceImport) (MethodHeader . "DataMisalignedException(string message, Exception innerException)") (ReturnType) (Snippet . "DataMisalignedException(${1:string message}, ${2:Exception innerException})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataModel") (Description . "Implements a model for 
") (DisplayText . "DataModel") (RequiredNamespaceImport) (MethodHeader . "DataModel") (ReturnType) (Snippet . "DataModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataModel") (Description . "") (DisplayText . "DataModel()") (RequiredNamespaceImport) (MethodHeader . "DataModel()") (ReturnType) (Snippet . "DataModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObject") (Description . "") (DisplayText . "DataObject") (RequiredNamespaceImport) (MethodHeader . "DataObject") (ReturnType) (Snippet . "DataObject$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObject") (Description . "") (DisplayText . "DataObject()") (RequiredNamespaceImport) (MethodHeader . "DataObject()") (ReturnType) (Snippet . "DataObject()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectAttribute") (Description . "") (DisplayText . "DataObjectAttribute") (RequiredNamespaceImport) (MethodHeader . "DataObjectAttribute") (ReturnType) (Snippet . "DataObjectAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectAttribute") (Description . "") (DisplayText . "DataObjectAttribute()") (RequiredNamespaceImport) (MethodHeader . "DataObjectAttribute()") (ReturnType) (Snippet . "DataObjectAttribute()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectAttribute") (Description . "") (DisplayText . "DataObjectAttribute(bool isDataObject)") (RequiredNamespaceImport) (MethodHeader . "DataObjectAttribute(bool isDataObject)") (ReturnType) (Snippet . "DataObjectAttribute(${1:bool isDataObject})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectClock") (Description . "") (DisplayText . "DataObjectClock<T>") (RequiredNamespaceImport) (MethodHeader . "DataObjectClock<T>") (ReturnType) (Snippet . "DataObjectClock<${1:T}>$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectClock") (Description . "") (DisplayText . "DataObjectClock<T>(T doObject, ITimeExtractor extractor, IZonedClock unbiasedLocalTime)") (RequiredNamespaceImport) (MethodHeader . "DataObjectClock<T>(T doObject, ITimeExtractor extractor, IZonedClock unbiasedLocalTime)") (ReturnType) (Snippet . "DataObjectClock<${1:T}>(${2:T doObject}, ${3:ITimeExtractor extractor}, ${4:IZonedClock unbiasedLocalTime})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectFieldAttribute") (Description . "") (DisplayText . "DataObjectFieldAttribute") (RequiredNamespaceImport) (MethodHeader . "DataObjectFieldAttribute") (ReturnType) (Snippet . "DataObjectFieldAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectFieldAttribute") (Description . "") (DisplayText . "DataObjectFieldAttribute(bool primaryKey)") (RequiredNamespaceImport) (MethodHeader . "DataObjectFieldAttribute(bool primaryKey)") (ReturnType) (Snippet . "DataObjectFieldAttribute(${1:bool primaryKey})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectFieldAttribute") (Description . "") (DisplayText . "DataObjectFieldAttribute(bool primaryKey, bool isIdentity)") (RequiredNamespaceImport) (MethodHeader . "DataObjectFieldAttribute(bool primaryKey, bool isIdentity)") (ReturnType) (Snippet . "DataObjectFieldAttribute(${1:bool primaryKey}, ${2:bool isIdentity})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectFieldAttribute") (Description . "") (DisplayText . "DataObjectFieldAttribute(bool primaryKey, bool isIdentity, bool isNullable)") (RequiredNamespaceImport) (MethodHeader . "DataObjectFieldAttribute(bool primaryKey, bool isIdentity, bool isNullable)") (ReturnType) (Snippet . "DataObjectFieldAttribute(${1:bool primaryKey}, ${2:bool isIdentity}, ${3:bool isNullable})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectFieldAttribute") (Description . "") (DisplayText . "DataObjectFieldAttribute(bool primaryKey, bool isIdentity, bool isNullable, int length)") (RequiredNamespaceImport) (MethodHeader . "DataObjectFieldAttribute(bool primaryKey, bool isIdentity, bool isNullable, int length)") (ReturnType) (Snippet . "DataObjectFieldAttribute(${1:bool primaryKey}, ${2:bool isIdentity}, ${3:bool isNullable}, ${4:int length})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectMethodAttribute") (Description . "") (DisplayText . "DataObjectMethodAttribute") (RequiredNamespaceImport) (MethodHeader . "DataObjectMethodAttribute") (ReturnType) (Snippet . "DataObjectMethodAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectMethodAttribute") (Description . "") (DisplayText . "DataObjectMethodAttribute(DataObjectMethodType methodType)") (RequiredNamespaceImport) (MethodHeader . "DataObjectMethodAttribute(DataObjectMethodType methodType)") (ReturnType) (Snippet . "DataObjectMethodAttribute(${1:DataObjectMethodType methodType})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectMethodAttribute") (Description . "") (DisplayText . "DataObjectMethodAttribute(DataObjectMethodType methodType, bool isDefault)") (RequiredNamespaceImport) (MethodHeader . "DataObjectMethodAttribute(DataObjectMethodType methodType, bool isDefault)") (ReturnType) (Snippet . "DataObjectMethodAttribute(${1:DataObjectMethodType methodType}, ${2:bool isDefault})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectMethodType") (Description . "") (DisplayText . "DataObjectMethodType") (RequiredNamespaceImport) (MethodHeader . "DataObjectMethodType") (ReturnType) (Snippet . "DataObjectMethodType$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectTimeInformation") (Description . "") (DisplayText . "DataObjectTimeInformation") (RequiredNamespaceImport) (MethodHeader . "DataObjectTimeInformation") (ReturnType) (Snippet . "DataObjectTimeInformation$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectTimeInformation") (Description . "") (DisplayText . "DataObjectTimeInformation(TimeZoneInfo timeZone, IProvideToday dateForTimeOfDayConversion, TimeZoneAlias alias)") (RequiredNamespaceImport) (MethodHeader . "DataObjectTimeInformation(TimeZoneInfo timeZone, IProvideToday dateForTimeOfDayConversion, TimeZoneAlias alias)") (ReturnType) (Snippet . "DataObjectTimeInformation(${1:TimeZoneInfo timeZone}, ${2:IProvideToday dateForTimeOfDayConversion}, ${3:TimeZoneAlias alias})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectTimeInformationExtractor") (Description . "") (DisplayText . "DataObjectTimeInformationExtractor") (RequiredNamespaceImport) (MethodHeader . "DataObjectTimeInformationExtractor") (ReturnType) (Snippet . "DataObjectTimeInformationExtractor$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectTimeInformationExtractor") (Description . "") (DisplayText . "DataObjectTimeInformationExtractor(TimeZoneInfo fallBackTimeZone, IProvideToday fallBackDateForTimeOfDayConversion)") (RequiredNamespaceImport) (MethodHeader . "DataObjectTimeInformationExtractor(TimeZoneInfo fallBackTimeZone, IProvideToday fallBackDateForTimeOfDayConversion)") (ReturnType) (Snippet . "DataObjectTimeInformationExtractor(${1:TimeZoneInfo fallBackTimeZone}, ${2:IProvideToday fallBackDateForTimeOfDayConversion})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectToDateMapper") (Description . "") (DisplayText . "DataObjectToDateMapper") (RequiredNamespaceImport) (MethodHeader . "DataObjectToDateMapper") (ReturnType) (Snippet . "DataObjectToDateMapper$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectToDateMapper") (Description . "") (DisplayText . "DataObjectToDateMapper(IProvideToday fallBackToday)") (RequiredNamespaceImport) (MethodHeader . "DataObjectToDateMapper(IProvideToday fallBackToday)") (ReturnType) (Snippet . "DataObjectToDateMapper(${1:IProvideToday fallBackToday})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataOutputType") (Description . "") (DisplayText . "DataOutputType") (RequiredNamespaceImport) (MethodHeader . "DataOutputType") (ReturnType) (Snippet . "DataOutputType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataOutputType") (Description . "DataOutputType class constructor
") (DisplayText . "DataOutputType()") (RequiredNamespaceImport) (MethodHeader . "DataOutputType()") (ReturnType) (Snippet . "DataOutputType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataRequestModel") (Description . "") (DisplayText . "DataRequestModel<Index, Data>") (RequiredNamespaceImport) (MethodHeader . "DataRequestModel<Index, Data>") (ReturnType) (Snippet . "DataRequestModel<${1:Index}, ${2:Data}>$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataRequestModel") (Description . "") (DisplayText . "DataRequestModel<Index, Data>()") (RequiredNamespaceImport) (MethodHeader . "DataRequestModel<Index, Data>()") (ReturnType) (Snippet . "DataRequestModel<${1:Index}, ${2:Data}>()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataSourceActionType") (Description . "") (DisplayText . "DataSourceActionType") (RequiredNamespaceImport) (MethodHeader . "DataSourceActionType") (ReturnType) (Snippet . "DataSourceActionType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataSourceActionType") (Description . "") (DisplayText . "DataSourceActionType()") (RequiredNamespaceImport) (MethodHeader . "DataSourceActionType()") (ReturnType) (Snippet . "DataSourceActionType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataSourceActionTypeType") (Description . "") (DisplayText . "DataSourceActionTypeType") (RequiredNamespaceImport) (MethodHeader . "DataSourceActionTypeType") (ReturnType) (Snippet . "DataSourceActionTypeType$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DataSourceErrorEventArgs") (Description . "") (DisplayText . "DataSourceErrorEventArgs") (RequiredNamespaceImport) (MethodHeader . "DataSourceErrorEventArgs") (ReturnType) (Snippet . "DataSourceErrorEventArgs$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataSourceErrorEventArgs") (Description . "") (DisplayText . "DataSourceErrorEventArgs(string textId)") (RequiredNamespaceImport) (MethodHeader . "DataSourceErrorEventArgs(string textId)") (ReturnType) (Snippet . "DataSourceErrorEventArgs(${1:string textId})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataSourceErrorEventArgs") (Description . "") (DisplayText . "DataSourceErrorEventArgs(string textId, int code)") (RequiredNamespaceImport) (MethodHeader . "DataSourceErrorEventArgs(string textId, int code)") (ReturnType) (Snippet . "DataSourceErrorEventArgs(${1:string textId}, ${2:int code})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataSourceNameAttribute") (Description . "Implements an attribute for a subversion version.
") (DisplayText . "DataSourceNameAttribute") (RequiredNamespaceImport) (MethodHeader . "DataSourceNameAttribute") (ReturnType) (Snippet . "DataSourceNameAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataSourceNameAttribute") (Description . "Initializes a new instance of the Fls.VisiTourClient.ViewModel.DataSourceNameAttribute class.

svnRevision: The subversion version.") (DisplayText . "DataSourceNameAttribute(string name)") (RequiredNamespaceImport) (MethodHeader . "DataSourceNameAttribute(string name)") (ReturnType) (Snippet . "DataSourceNameAttribute(${1:string name})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataSources") (Description . "") (DisplayText . "DataSources") (RequiredNamespaceImport) (MethodHeader . "DataSources") (ReturnType) (Snippet . "DataSources$0") (Kind . "Namespace") (IsSuggestionMode . :json-false)) ((CompletionText . "DataTableSourceViewModel") (Description . "") (DisplayText . "DataTableSourceViewModel") (RequiredNamespaceImport) (MethodHeader . "DataTableSourceViewModel") (ReturnType) (Snippet . "DataTableSourceViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataTableSourceViewModel") (Description . "") (DisplayText . "DataTableSourceViewModel()") (RequiredNamespaceImport) (MethodHeader . "DataTableSourceViewModel()") (ReturnType) (Snippet . "DataTableSourceViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataTableViewModel") (Description . "Implements a model for data table.
") (DisplayText . "DataTableViewModel") (RequiredNamespaceImport) (MethodHeader . "DataTableViewModel") (ReturnType) (Snippet . "DataTableViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataTableViewModel") (Description . "Initializes a new instance of the Fls.UI.Base.DataTableViewModel class.
") (DisplayText . "DataTableViewModel()") (RequiredNamespaceImport) (MethodHeader . "DataTableViewModel()") (ReturnType) (Snippet . "DataTableViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataTableWithColoringViewModel") (Description . "TODO: Update summary.
") (DisplayText . "DataTableWithColoringViewModel") (RequiredNamespaceImport) (MethodHeader . "DataTableWithColoringViewModel") (ReturnType) (Snippet . "DataTableWithColoringViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataTableWithColoringViewModel") (Description . "Initializes a new instance of the Fls.UI.Base.DataTableWithColoringViewModel class.
") (DisplayText . "DataTableWithColoringViewModel()") (RequiredNamespaceImport) (MethodHeader . "DataTableWithColoringViewModel()") (ReturnType) (Snippet . "DataTableWithColoringViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataTransfersTypes") (Description . "The available data transfer types.
") (DisplayText . "DataTransfersTypes") (RequiredNamespaceImport) (MethodHeader . "DataTransfersTypes") (ReturnType) (Snippet . "DataTransfersTypes$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DateEditExtensionPainter") (Description . "Implements a model for 
") (DisplayText . "DateEditExtensionPainter") (RequiredNamespaceImport) (MethodHeader . "DateEditExtensionPainter") (ReturnType) (Snippet . "DateEditExtensionPainter$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DateEditExtensionPainter") (Description . "") (DisplayText . "DateEditExtensionPainter()") (RequiredNamespaceImport) (MethodHeader . "DateEditExtensionPainter()") (ReturnType) (Snippet . "DateEditExtensionPainter()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateEditExtensionViewInfo") (Description . "") (DisplayText . "DateEditExtensionViewInfo") (RequiredNamespaceImport) (MethodHeader . "DateEditExtensionViewInfo") (ReturnType) (Snippet . "DateEditExtensionViewInfo$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DateEditExtensionViewInfo") (Description . "") (DisplayText . "DateEditExtensionViewInfo(RepositoryItem item)") (RequiredNamespaceImport) (MethodHeader . "DateEditExtensionViewInfo(RepositoryItem item)") (ReturnType) (Snippet . "DateEditExtensionViewInfo(${1:RepositoryItem item})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateSelectorViewModel") (Description . "Implements a model for a date selector.
") (DisplayText . "DateSelectorViewModel") (RequiredNamespaceImport) (MethodHeader . "DateSelectorViewModel") (ReturnType) (Snippet . "DateSelectorViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DateSelectorViewModel") (Description . "Initializes a new instance of the Fls.VisiTourClient.ViewModel.DateSelectorViewModel class.
") (DisplayText . "DateSelectorViewModel()") (RequiredNamespaceImport) (MethodHeader . "DateSelectorViewModel()") (ReturnType) (Snippet . "DateSelectorViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateSelectorViewModel") (Description . "Initializes a new instance of the Fls.VisiTourClient.ViewModel.DateSelectorViewModel class.

startDate: The selected start date.
endDate: The selected end date.") (DisplayText . "DateSelectorViewModel(DateTimeInputViewModel startDate, DateTimeInputViewModel endDate)") (RequiredNamespaceImport) (MethodHeader . "DateSelectorViewModel(DateTimeInputViewModel startDate, DateTimeInputViewModel endDate)") (ReturnType) (Snippet . "DateSelectorViewModel(${1:DateTimeInputViewModel startDate}, ${2:DateTimeInputViewModel endDate})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateSelectorViewModel") (Description . "Initializes a new instance of the Fls.VisiTourClient.ViewModel.DateSelectorViewModel class.

elementId: The elements id.
startDate: The selected start date.
endDate: The selected end date.") (DisplayText . "DateSelectorViewModel(UIItemId elementId, DateTimeInputViewModel startDate, DateTimeInputViewModel endDate)") (RequiredNamespaceImport) (MethodHeader . "DateSelectorViewModel(UIItemId elementId, DateTimeInputViewModel startDate, DateTimeInputViewModel endDate)") (ReturnType) (Snippet . "DateSelectorViewModel(${1:UIItemId elementId}, ${2:DateTimeInputViewModel startDate}, ${3:DateTimeInputViewModel endDate})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime") (RequiredNamespaceImport) (MethodHeader . "DateTime") (ReturnType) (Snippet . "DateTime$0") (Kind . "Struct") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime()") (RequiredNamespaceImport) (MethodHeader . "DateTime()") (ReturnType) (Snippet . "DateTime()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, Calendar calendar)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, Calendar calendar)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:Calendar calendar})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, int hour, int minute, int second)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, int hour, int minute, int second)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, int hour, int minute, int second, Calendar calendar)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, int hour, int minute, int second, Calendar calendar)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:Calendar calendar})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, int hour, int minute, int second, DateTimeKind kind)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, int hour, int minute, int second, DateTimeKind kind)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:DateTimeKind kind})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:int millisecond})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, Calendar calendar)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, Calendar calendar)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:int millisecond}, ${8:Calendar calendar})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, Calendar calendar, DateTimeKind kind)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, Calendar calendar, DateTimeKind kind)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:int millisecond}, ${8:Calendar calendar}, ${9:DateTimeKind kind})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, DateTimeKind kind)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, DateTimeKind kind)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:int millisecond}, ${8:DateTimeKind kind})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(long ticks)") (RequiredNamespaceImport) (MethodHeader . "DateTime(long ticks)") (ReturnType) (Snippet . "DateTime(${1:long ticks})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(long ticks, DateTimeKind kind)") (RequiredNamespaceImport) (MethodHeader . "DateTime(long ticks, DateTimeKind kind)") (ReturnType) (Snippet . "DateTime(${1:long ticks}, ${2:DateTimeKind kind})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeConverter") (Description . "") (DisplayText . "DateTimeConverter") (RequiredNamespaceImport) (MethodHeader . "DateTimeConverter") (ReturnType) (Snippet . "DateTimeConverter$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeConverter") (Description . "") (DisplayText . "DateTimeConverter()") (RequiredNamespaceImport) (MethodHeader . "DateTimeConverter()") (ReturnType) (Snippet . "DateTimeConverter()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeEditView") (Description . "Implements a forms user control based on a view model.
This control 
") (DisplayText . "DateTimeEditView") (RequiredNamespaceImport) (MethodHeader . "DateTimeEditView") (ReturnType) (Snippet . "DateTimeEditView$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeEditView") (Description . "Initializes a new instance of the Fls.Controls.Forms.DevExpressBase.DateTimeEditView class.
") (DisplayText . "DateTimeEditView()") (RequiredNamespaceImport) (MethodHeader . "DateTimeEditView()") (ReturnType) (Snippet . "DateTimeEditView()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeEditView") (Description . "Initializes a new instance of the Fls.Controls.Forms.DevExpressBase.DateTimeEditView class.

viewModel: The used view model ") (DisplayText . "DateTimeEditView(DateTimeInputViewModel viewModel)") (RequiredNamespaceImport) (MethodHeader . "DateTimeEditView(DateTimeInputViewModel viewModel)") (ReturnType) (Snippet . "DateTimeEditView(${1:DateTimeInputViewModel viewModel})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeHelper") (Description . "") (DisplayText . "DateTimeHelper") (RequiredNamespaceImport) (MethodHeader . "DateTimeHelper") (ReturnType) (Snippet . "DateTimeHelper$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeInputViewModel") (Description . "Implements a model for date time input.
") (DisplayText . "DateTimeInputViewModel") (RequiredNamespaceImport) (MethodHeader . "DateTimeInputViewModel") (ReturnType) (Snippet . "DateTimeInputViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeInputViewModel") (Description . "Initializes a new instance of the Fls.UI.Base.DateTimeInputViewModel class.
") (DisplayText . "DateTimeInputViewModel()") (RequiredNamespaceImport) (MethodHeader . "DateTimeInputViewModel()") (ReturnType) (Snippet . "DateTimeInputViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeInputViewModel") (Description . "Initializes a new instance of the Fls.UI.Base.DateTimeInputViewModel class.

elementId: The elements id.") (DisplayText . "DateTimeInputViewModel(UIItemId elementId)") (RequiredNamespaceImport) (MethodHeader . "DateTimeInputViewModel(UIItemId elementId)") (ReturnType) (Snippet . "DateTimeInputViewModel(${1:UIItemId elementId})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeInputViewModel") (Description . "Initializes a new instance of the Fls.UI.Base.DateTimeInputViewModel class.

elementId: The elements id.
minDate: The minimum selectable date.
maxDate: The maximum selectable date.
selectedDate: The selected date.") (DisplayText . "DateTimeInputViewModel(UIItemId elementId, DateTime minDate, DateTime maxDate, DateTime selectedDate)") (RequiredNamespaceImport) (MethodHeader . "DateTimeInputViewModel(UIItemId elementId, DateTime minDate, DateTime maxDate, DateTime selectedDate)") (ReturnType) (Snippet . "DateTimeInputViewModel(${1:UIItemId elementId}, ${2:DateTime minDate}, ${3:DateTime maxDate}, ${4:DateTime selectedDate})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeInputViewModel") (Description . "Initializes a new instance of the Fls.UI.Base.DateTimeInputViewModel class.

elementId: The elements id.
selectedDate: The selected date.") (DisplayText . "DateTimeInputViewModel(UIItemId elementId, DateTime selectedDate)") (RequiredNamespaceImport) (MethodHeader . "DateTimeInputViewModel(UIItemId elementId, DateTime selectedDate)") (ReturnType) (Snippet . "DateTimeInputViewModel(${1:UIItemId elementId}, ${2:DateTime selectedDate})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeKind") (Description . "") (DisplayText . "DateTimeKind") (RequiredNamespaceImport) (MethodHeader . "DateTimeKind") (ReturnType) (Snippet . "DateTimeKind$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset") (ReturnType) (Snippet . "DateTimeOffset$0") (Kind . "Struct") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset()") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset()") (ReturnType) (Snippet . "DateTimeOffset()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset(DateTime dateTime)") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset(DateTime dateTime)") (ReturnType) (Snippet . "DateTimeOffset(${1:DateTime dateTime})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset(DateTime dateTime, TimeSpan offset)") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset(DateTime dateTime, TimeSpan offset)") (ReturnType) (Snippet . "DateTimeOffset(${1:DateTime dateTime}, ${2:TimeSpan offset})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset(int year, int month, int day, int hour, int minute, int second, int millisecond, Calendar calendar, TimeSpan offset)") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset(int year, int month, int day, int hour, int minute, int second, int millisecond, Calendar calendar, TimeSpan offset)") (ReturnType) (Snippet . "DateTimeOffset(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:int millisecond}, ${8:Calendar calendar}, ${9:TimeSpan offset})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset(int year, int month, int day, int hour, int minute, int second, int millisecond, TimeSpan offset)") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset(int year, int month, int day, int hour, int minute, int second, int millisecond, TimeSpan offset)") (ReturnType) (Snippet . "DateTimeOffset(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:int millisecond}, ${8:TimeSpan offset})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset(int year, int month, int day, int hour, int minute, int second, TimeSpan offset)") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset(int year, int month, int day, int hour, int minute, int second, TimeSpan offset)") (ReturnType) (Snippet . "DateTimeOffset(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:TimeSpan offset})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset(long ticks, TimeSpan offset)") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset(long ticks, TimeSpan offset)") (ReturnType) (Snippet . "DateTimeOffset(${1:long ticks}, ${2:TimeSpan offset})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffsetConverter") (Description . "") (DisplayText . "DateTimeOffsetConverter") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffsetConverter") (ReturnType) (Snippet . "DateTimeOffsetConverter$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffsetConverter") (Description . "") (DisplayText . "DateTimeOffsetConverter()") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffsetConverter()") (ReturnType) (Snippet . "DateTimeOffsetConverter()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeSlot") (Description . "Implements a model for time intervals. 
") (DisplayText . "DateTimeSlot") (RequiredNamespaceImport) (MethodHeader . "DateTimeSlot") (ReturnType) (Snippet . "DateTimeSlot$0") (Kind . "Struct") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeSlot") (Description . "") (DisplayText . "DateTimeSlot()") (RequiredNamespaceImport) (MethodHeader . "DateTimeSlot()") (ReturnType) (Snippet . "DateTimeSlot()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeSlot") (Description . "Initializes a new instance of the Fls.Base.DateTimeSlot structure. 

start: The start time. 
duration: The duration. ") (DisplayText . "DateTimeSlot(DateTime start, DateTime end)") (RequiredNamespaceImport) (MethodHeader . "DateTimeSlot(DateTime start, DateTime end)") (ReturnType) (Snippet . "DateTimeSlot(${1:DateTime start}, ${2:DateTime end})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeSlot") (Description . "Initializes a new instance of the Fls.Base.DateTimeSlot structure. 

start: The start time. 
duration: The duration. ") (DisplayText . "DateTimeSlot(DateTime start, TimeSpan duration)") (RequiredNamespaceImport) (MethodHeader . "DateTimeSlot(DateTime start, TimeSpan duration)") (ReturnType) (Snippet . "DateTimeSlot(${1:DateTime start}, ${2:TimeSpan duration})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DayChangeParameters") (Description . "") (DisplayText . "DayChangeParameters") (RequiredNamespaceImport) (MethodHeader . "DayChangeParameters") (ReturnType) (Snippet . "DayChangeParameters$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DayChangeParameters") (Description . "") (DisplayText . "DayChangeParameters(DateTime date, ILabelColor labelColor, bool isDisabled, string additionalInfo)") (RequiredNamespaceImport) (MethodHeader . "DayChangeParameters(DateTime date, ILabelColor labelColor, bool isDisabled, string additionalInfo)") (ReturnType) (Snippet . "DayChangeParameters(${1:DateTime date}, ${2:ILabelColor labelColor}, ${3:bool isDisabled}, ${4:string additionalInfo})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DayModel") (Description . "Implements a model for 
") (DisplayText . "DayModel") (RequiredNamespaceImport) (MethodHeader . "DayModel") (ReturnType) (Snippet . "DayModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DayModel") (Description . "") (DisplayText . "DayModel(ColorBase selectionColor, ColorBase todayMark, IZonedClock masterClock)") (RequiredNamespaceImport) (MethodHeader . "DayModel(ColorBase selectionColor, ColorBase todayMark, IZonedClock masterClock)") (ReturnType) (Snippet . "DayModel(${1:ColorBase selectionColor}, ${2:ColorBase todayMark}, ${3:IZonedClock masterClock})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DayOfWeek") (Description . "") (DisplayText . "DayOfWeek") (RequiredNamespaceImport) (MethodHeader . "DayOfWeek") (ReturnType) (Snippet . "DayOfWeek$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DaySelectionType") (Description . "") (DisplayText . "DaySelectionType") (RequiredNamespaceImport) (MethodHeader . "DaySelectionType") (ReturnType) (Snippet . "DaySelectionType$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DescriptionAttribute") (Description . "") (DisplayText . "DescriptionAttribute") (RequiredNamespaceImport) (MethodHeader . "DescriptionAttribute") (ReturnType) (Snippet . "DescriptionAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DescriptionAttribute") (Description . "") (DisplayText . "DescriptionAttribute()") (RequiredNamespaceImport) (MethodHeader . "DescriptionAttribute()") (ReturnType) (Snippet . "DescriptionAttribute()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DescriptionAttribute") (Description . "") (DisplayText . "DescriptionAttribute(string description)") (RequiredNamespaceImport) (MethodHeader . "DescriptionAttribute(string description)") (ReturnType) (Snippet . "DescriptionAttribute(${1:string description})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DesignerAttribute") (Description . "") (DisplayText . "DesignerAttribute") (RequiredNamespaceImport) (MethodHeader . "DesignerAttribute") (ReturnType) (Snippet . "DesignerAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DesignerAttribute") (Description . "") (DisplayText . "DesignerAttribute(string designerTypeName)") (RequiredNamespaceImport) (MethodHeader . "DesignerAttribute(string designerTypeName)") (ReturnType) (Snippet . "DesignerAttribute(${1:string designerTypeName})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DesignerAttribute") (Description . "") (DisplayText . "DesignerAttribute(string designerTypeName, string designerBaseTypeName)") (RequiredNamespaceImport) (MethodHeader . "DesignerAttribute(string designerTypeName, string designerBaseTypeName)") (ReturnType) (Snippet . "DesignerAttribute(${1:string designerTypeName}, ${2:string designerBaseTypeName})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DesignerAttribute") (Description . "") (DisplayText . "DesignerAttribute(string designerTypeName, Type designerBaseType)") (RequiredNamespaceImport) (MethodHeader . "DesignerAttribute(string designerTypeName, Type designerBaseType)") (ReturnType) (Snippet . "DesignerAttribute(${1:string designerTypeName}, ${2:Type designerBaseType})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DesignerAttribute") (Description . "") (DisplayText . "DesignerAttribute(Type designerType)") (RequiredNamespaceImport) (MethodHeader . "DesignerAttribute(Type designerType)") (ReturnType) (Snippet . "DesignerAttribute(${1:Type designerType})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DesignerAttribute") (Description . "") (DisplayText . "DesignerAttribute(Type designerType, Type designerBaseType)") (RequiredNamespaceImport) (MethodHeader . "DesignerAttribute(Type designerType, Type designerBaseType)") (ReturnType) (Snippet . "DesignerAttribute(${1:Type designerType}, ${2:Type designerBaseType})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DirectedAction") (Description . "Describes different directed actions. 
") (DisplayText . "DirectedAction") (RequiredNamespaceImport) (MethodHeader . "DirectedAction") (ReturnType) (Snippet . "DirectedAction$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "AbidancesViewModel") (Description . "") (DisplayText . "AbidancesViewModel") (RequiredNamespaceImport) (MethodHeader . "AbidancesViewModel") (ReturnType) (Snippet . "AbidancesViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "AbidancesViewModel") (Description . "") (DisplayText . "AbidancesViewModel()") (RequiredNamespaceImport) (MethodHeader . "AbidancesViewModel()") (ReturnType) (Snippet . "AbidancesViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "AdditionalDataRequestsType") (Description . "") (DisplayText . "AdditionalDataRequestsType") (RequiredNamespaceImport) (MethodHeader . "AdditionalDataRequestsType") (ReturnType) (Snippet . "AdditionalDataRequestsType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "AdditionalDataRequestsType") (Description . "AdditionalDataRequestsType class constructor
") (DisplayText . "AdditionalDataRequestsType()") (RequiredNamespaceImport) (MethodHeader . "AdditionalDataRequestsType()") (ReturnType) (Snippet . "AdditionalDataRequestsType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "AssemblyAlgorithmIdAttribute") (Description . "") (DisplayText . "AssemblyAlgorithmIdAttribute") (RequiredNamespaceImport) (MethodHeader . "AssemblyAlgorithmIdAttribute") (ReturnType) (Snippet . "AssemblyAlgorithmIdAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "AssemblyAlgorithmIdAttribute") (Description . "") (DisplayText . "AssemblyAlgorithmIdAttribute(AssemblyHashAlgorithm algorithmId)") (RequiredNamespaceImport) (MethodHeader . "AssemblyAlgorithmIdAttribute(AssemblyHashAlgorithm algorithmId)") (ReturnType) (Snippet . "AssemblyAlgorithmIdAttribute(${1:AssemblyHashAlgorithm algorithmId})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "AssemblyAlgorithmIdAttribute") (Description . "") (DisplayText . "AssemblyAlgorithmIdAttribute(uint algorithmId)") (RequiredNamespaceImport) (MethodHeader . "AssemblyAlgorithmIdAttribute(uint algorithmId)") (ReturnType) (Snippet . "AssemblyAlgorithmIdAttribute(${1:uint algorithmId})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "AssemblyMetadataAttribute") (Description . "") (DisplayText . "AssemblyMetadataAttribute") (RequiredNamespaceImport) (MethodHeader . "AssemblyMetadataAttribute") (ReturnType) (Snippet . "AssemblyMetadataAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "AssemblyMetadataAttribute") (Description . "") (DisplayText . "AssemblyMetadataAttribute(string key, string value)") (RequiredNamespaceImport) (MethodHeader . "AssemblyMetadataAttribute(string key, string value)") (ReturnType) (Snippet . "AssemblyMetadataAttribute(${1:string key}, ${2:string value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "AutoSearchCtrlMetaData") (Description . "") (DisplayText . "AutoSearchCtrlMetaData") (RequiredNamespaceImport) (MethodHeader . "AutoSearchCtrlMetaData") (ReturnType) (Snippet . "AutoSearchCtrlMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "AutoSearchCtrlMetaData") (Description . "") (DisplayText . "AutoSearchCtrlMetaData()") (RequiredNamespaceImport) (MethodHeader . "AutoSearchCtrlMetaData()") (ReturnType) (Snippet . "AutoSearchCtrlMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "AvailablePreviewDays") (Description . "") (DisplayText . "AvailablePreviewDays") (RequiredNamespaceImport) (MethodHeader . "AvailablePreviewDays") (ReturnType) (Snippet . "AvailablePreviewDays$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "BaseData") (Description . "") (DisplayText . "BaseData") (RequiredNamespaceImport) (MethodHeader . "BaseData") (ReturnType) (Snippet . "BaseData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "BaseData") (Description . "") (DisplayText . "BaseData()") (RequiredNamespaceImport) (MethodHeader . "BaseData()") (ReturnType) (Snippet . "BaseData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "BaseMetaData") (Description . "Implements a model for meta data of forms.
") (DisplayText . "BaseMetaData") (RequiredNamespaceImport) (MethodHeader . "BaseMetaData") (ReturnType) (Snippet . "BaseMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "BaseMetaData") (Description . "Initializes a new instance of the Fls.VisiTourClient.MetaData.BaseMetaData class.
") (DisplayText . "BaseMetaData()") (RequiredNamespaceImport) (MethodHeader . "BaseMetaData()") (ReturnType) (Snippet . "BaseMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "BindableAttribute") (Description . "") (DisplayText . "BindableAttribute") (RequiredNamespaceImport) (MethodHeader . "BindableAttribute") (ReturnType) (Snippet . "BindableAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "BindableAttribute") (Description . "") (DisplayText . "BindableAttribute(BindableSupport flags)") (RequiredNamespaceImport) (MethodHeader . "BindableAttribute(BindableSupport flags)") (ReturnType) (Snippet . "BindableAttribute(${1:BindableSupport flags})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "BindableAttribute") (Description . "") (DisplayText . "BindableAttribute(BindableSupport flags, BindingDirection direction)") (RequiredNamespaceImport) (MethodHeader . "BindableAttribute(BindableSupport flags, BindingDirection direction)") (ReturnType) (Snippet . "BindableAttribute(${1:BindableSupport flags}, ${2:BindingDirection direction})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "BindableAttribute") (Description . "") (DisplayText . "BindableAttribute(bool bindable)") (RequiredNamespaceImport) (MethodHeader . "BindableAttribute(bool bindable)") (ReturnType) (Snippet . "BindableAttribute(${1:bool bindable})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "BindableAttribute") (Description . "") (DisplayText . "BindableAttribute(bool bindable, BindingDirection direction)") (RequiredNamespaceImport) (MethodHeader . "BindableAttribute(bool bindable, BindingDirection direction)") (ReturnType) (Snippet . "BindableAttribute(${1:bool bindable}, ${2:BindingDirection direction})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "BindableSupport") (Description . "") (DisplayText . "BindableSupport") (RequiredNamespaceImport) (MethodHeader . "BindableSupport") (ReturnType) (Snippet . "BindableSupport$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "BindingSourceMetaData") (Description . "") (DisplayText . "BindingSourceMetaData") (RequiredNamespaceImport) (MethodHeader . "BindingSourceMetaData") (ReturnType) (Snippet . "BindingSourceMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "BindingSourceMetaData") (Description . "") (DisplayText . "BindingSourceMetaData(string id, string entity, string parentFormName, string connector, string connectorTarget, string validatorId, string clientFilter, IEnumerable<string> fieldNames = null, bool autoSave = false, bool doGeoCoding = true, bool targetZeroAsNull = false)") (RequiredNamespaceImport) (MethodHeader . "BindingSourceMetaData(string id, string entity, string parentFormName, string connector, string connectorTarget, string validatorId, string clientFilter, IEnumerable<string> fieldNames = null, bool autoSave = false, bool doGeoCoding = true, bool targetZeroAsNull = false)") (ReturnType) (Snippet . "BindingSourceMetaData(${1:string id}, ${2:string entity}, ${3:string parentFormName}, ${4:string connector}, ${5:string connectorTarget}, ${6:string validatorId}, ${7:string clientFilter}, ${8:IEnumerable<string> fieldNames = null}, ${9:bool autoSave = false}, ${10:bool doGeoCoding = true}, ${11:bool targetZeroAsNull = false})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "BookResourceInDateFrameViewModel") (Description . "") (DisplayText . "BookResourceInDateFrameViewModel") (RequiredNamespaceImport) (MethodHeader . "BookResourceInDateFrameViewModel") (ReturnType) (Snippet . "BookResourceInDateFrameViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "BookResourceInDateFrameViewModel") (Description . "") (DisplayText . "BookResourceInDateFrameViewModel(TourModel mainTour, ConcurrentDictionary<int, DOEngineer> availableEngineeres, DateTime startDate, DateTime endDate, DOEngineer changeEngineer)") (RequiredNamespaceImport) (MethodHeader . "BookResourceInDateFrameViewModel(TourModel mainTour, ConcurrentDictionary<int, DOEngineer> availableEngineeres, DateTime startDate, DateTime endDate, DOEngineer changeEngineer)") (ReturnType) (Snippet . "BookResourceInDateFrameViewModel(${1:TourModel mainTour}, ${2:ConcurrentDictionary<int, DOEngineer> availableEngineeres}, ${3:DateTime startDate}, ${4:DateTime endDate}, ${5:DOEngineer changeEngineer})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "CalendarControlType") (Description . "") (DisplayText . "CalendarControlType") (RequiredNamespaceImport) (MethodHeader . "CalendarControlType") (ReturnType) (Snippet . "CalendarControlType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "CalendarControlType") (Description . "") (DisplayText . "CalendarControlType()") (RequiredNamespaceImport) (MethodHeader . "CalendarControlType()") (ReturnType) (Snippet . "CalendarControlType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "CalendarView") (Description . "") (DisplayText . "CalendarView") (RequiredNamespaceImport) (MethodHeader . "CalendarView") (ReturnType) (Snippet . "CalendarView$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "CalendarViewModel") (Description . "Implements a model for data table.
") (DisplayText . "CalendarViewModel") (RequiredNamespaceImport) (MethodHeader . "CalendarViewModel") (ReturnType) (Snippet . "CalendarViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "CalendarViewModel") (Description . "Initializes a new instance of the Fls.UI.Base.DataTableViewModel class.
") (DisplayText . "CalendarViewModel()") (RequiredNamespaceImport) (MethodHeader . "CalendarViewModel()") (ReturnType) (Snippet . "CalendarViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "CannotUnloadAppDomainException") (Description . "") (DisplayText . "CannotUnloadAppDomainException") (RequiredNamespaceImport) (MethodHeader . "CannotUnloadAppDomainException") (ReturnType) (Snippet . "CannotUnloadAppDomainException$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "CannotUnloadAppDomainException") (Description . "") (DisplayText . "CannotUnloadAppDomainException()") (RequiredNamespaceImport) (MethodHeader . "CannotUnloadAppDomainException()") (ReturnType) (Snippet . "CannotUnloadAppDomainException()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "CannotUnloadAppDomainException") (Description . "") (DisplayText . "CannotUnloadAppDomainException(SerializationInfo info, StreamingContext context)") (RequiredNamespaceImport) (MethodHeader . "CannotUnloadAppDomainException(SerializationInfo info, StreamingContext context)") (ReturnType) (Snippet . "CannotUnloadAppDomainException(${1:SerializationInfo info}, ${2:StreamingContext context})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "CannotUnloadAppDomainException") (Description . "") (DisplayText . "CannotUnloadAppDomainException(string message)") (RequiredNamespaceImport) (MethodHeader . "CannotUnloadAppDomainException(string message)") (ReturnType) (Snippet . "CannotUnloadAppDomainException(${1:string message})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "CannotUnloadAppDomainException") (Description . "") (DisplayText . "CannotUnloadAppDomainException(string message, Exception innerException)") (RequiredNamespaceImport) (MethodHeader . "CannotUnloadAppDomainException(string message, Exception innerException)") (ReturnType) (Snippet . "CannotUnloadAppDomainException(${1:string message}, ${2:Exception innerException})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ChartControlMetaData") (Description . "") (DisplayText . "ChartControlMetaData") (RequiredNamespaceImport) (MethodHeader . "ChartControlMetaData") (ReturnType) (Snippet . "ChartControlMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ChartControlMetaData") (Description . "") (DisplayText . "ChartControlMetaData()") (RequiredNamespaceImport) (MethodHeader . "ChartControlMetaData()") (ReturnType) (Snippet . "ChartControlMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ChartDataValuesType") (Description . "") (DisplayText . "ChartDataValuesType") (RequiredNamespaceImport) (MethodHeader . "ChartDataValuesType") (ReturnType) (Snippet . "ChartDataValuesType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ChartDataValuesType") (Description . "ChartDataValuesType class constructor
") (DisplayText . "ChartDataValuesType()") (RequiredNamespaceImport) (MethodHeader . "ChartDataValuesType()") (ReturnType) (Snippet . "ChartDataValuesType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "CheckedComboBoxFromRefMetaData") (Description . "") (DisplayText . "CheckedComboBoxFromRefMetaData") (RequiredNamespaceImport) (MethodHeader . "CheckedComboBoxFromRefMetaData") (ReturnType) (Snippet . "CheckedComboBoxFromRefMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "CheckedComboBoxFromRefMetaData") (Description . "") (DisplayText . "CheckedComboBoxFromRefMetaData()") (RequiredNamespaceImport) (MethodHeader . "CheckedComboBoxFromRefMetaData()") (ReturnType) (Snippet . "CheckedComboBoxFromRefMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ClientFormElementMetaData") (Description . "Implements a model for form elements meta data.
") (DisplayText . "ClientFormElementMetaData") (RequiredNamespaceImport) (MethodHeader . "ClientFormElementMetaData") (ReturnType) (Snippet . "ClientFormElementMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ClientFormElementMetaData") (Description . "Initializes a new instance of the Fls.VisiTourClient.MetaData.ClientFormElementMetaData class.
") (DisplayText . "ClientFormElementMetaData()") (RequiredNamespaceImport) (MethodHeader . "ClientFormElementMetaData()") (ReturnType) (Snippet . "ClientFormElementMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ClientFormGroupMetaData") (Description . "TODO: Update summary.
") (DisplayText . "ClientFormGroupMetaData") (RequiredNamespaceImport) (MethodHeader . "ClientFormGroupMetaData") (ReturnType) (Snippet . "ClientFormGroupMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ClientFormGroupMetaData") (Description . "") (DisplayText . "ClientFormGroupMetaData(string id, Rights rightsName, string module, ClientFormGroupMetaData parentGroupMeta)") (RequiredNamespaceImport) (MethodHeader . "ClientFormGroupMetaData(string id, Rights rightsName, string module, ClientFormGroupMetaData parentGroupMeta)") (ReturnType) (Snippet . "ClientFormGroupMetaData(${1:string id}, ${2:Rights rightsName}, ${3:string module}, ${4:ClientFormGroupMetaData parentGroupMeta})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ClientFormMetaData") (Description . "Implements a model for client form meta data.
") (DisplayText . "ClientFormMetaData") (RequiredNamespaceImport) (MethodHeader . "ClientFormMetaData") (ReturnType) (Snippet . "ClientFormMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ClientFormMetaData") (Description . "Initializes a new instance of the Fls.VisiTourClient.MetaData.ClientFormMetaData class.
") (DisplayText . "ClientFormMetaData()") (RequiredNamespaceImport) (MethodHeader . "ClientFormMetaData()") (ReturnType) (Snippet . "ClientFormMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ClientMetaData") (Description . "") (DisplayText . "ClientMetaData") (RequiredNamespaceImport) (MethodHeader . "ClientMetaData") (ReturnType) (Snippet . "ClientMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ClientMetaData") (Description . "") (DisplayText . "ClientMetaData()") (RequiredNamespaceImport) (MethodHeader . "ClientMetaData()") (ReturnType) (Snippet . "ClientMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ClientUpdater") (Description . "") (DisplayText . "ClientUpdater") (RequiredNamespaceImport) (MethodHeader . "ClientUpdater") (ReturnType) (Snippet . "ClientUpdater$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ClientUpdater") (Description . "") (DisplayText . "ClientUpdater(string[] cmdArgs)") (RequiredNamespaceImport) (MethodHeader . "ClientUpdater(string[] cmdArgs)") (ReturnType) (Snippet . "ClientUpdater(${1:string[] cmdArgs})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ColumnMetaDataModel") (Description . "Implements a model for 
") (DisplayText . "ColumnMetaDataModel") (RequiredNamespaceImport) (MethodHeader . "ColumnMetaDataModel") (ReturnType) (Snippet . "ColumnMetaDataModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ColumnMetaDataModel") (Description . "Initializes a new instance of the Fls.Base.ColumnMetaDataModel class.
") (DisplayText . "ColumnMetaDataModel()") (RequiredNamespaceImport) (MethodHeader . "ColumnMetaDataModel()") (ReturnType) (Snippet . "ColumnMetaDataModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ColumnMetaDataType") (Description . "") (DisplayText . "ColumnMetaDataType") (RequiredNamespaceImport) (MethodHeader . "ColumnMetaDataType") (ReturnType) (Snippet . "ColumnMetaDataType$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "ConnectionMetaData") (Description . "this class is used to concentrate the data used to create a proper datasource to bind in the controls
") (DisplayText . "ConnectionMetaData") (RequiredNamespaceImport) (MethodHeader . "ConnectionMetaData") (ReturnType) (Snippet . "ConnectionMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ConnectionMetaData") (Description . "Initializes a new instance of the Fls.VisiTourClient.MetaData.ConnectionMetaData class.
") (DisplayText . "ConnectionMetaData()") (RequiredNamespaceImport) (MethodHeader . "ConnectionMetaData()") (ReturnType) (Snippet . "ConnectionMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ConnectionMetaData") (Description . "Initializes a new instance of the Fls.VisiTourClient.MetaData.ConnectionMetaData class.

tableName: name of the table
propertyName: name of the property
cellType: type of property") (DisplayText . "ConnectionMetaData(string tableName, string propertyName, eControlType cellType)") (RequiredNamespaceImport) (MethodHeader . "ConnectionMetaData(string tableName, string propertyName, eControlType cellType)") (ReturnType) (Snippet . "ConnectionMetaData(${1:string tableName}, ${2:string propertyName}, ${3:eControlType cellType})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "CustomAttributeData") (Description . "") (DisplayText . "CustomAttributeData") (RequiredNamespaceImport) (MethodHeader . "CustomAttributeData") (ReturnType) (Snippet . "CustomAttributeData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "CustomAttributeData") (Description . "") (DisplayText . "CustomAttributeData()") (RequiredNamespaceImport) (MethodHeader . "CustomAttributeData()") (ReturnType) (Snippet . "CustomAttributeData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "CustomAttributeNamedArgument") (Description . "") (DisplayText . "CustomAttributeNamedArgument") (RequiredNamespaceImport) (MethodHeader . "CustomAttributeNamedArgument") (ReturnType) (Snippet . "CustomAttributeNamedArgument$0") (Kind . "Struct") (IsSuggestionMode . :json-false)) ((CompletionText . "CustomAttributeNamedArgument") (Description . "") (DisplayText . "CustomAttributeNamedArgument()") (RequiredNamespaceImport) (MethodHeader . "CustomAttributeNamedArgument()") (ReturnType) (Snippet . "CustomAttributeNamedArgument()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "CustomAttributeNamedArgument") (Description . "") (DisplayText . "CustomAttributeNamedArgument(MemberInfo memberInfo, CustomAttributeTypedArgument typedArgument)") (RequiredNamespaceImport) (MethodHeader . "CustomAttributeNamedArgument(MemberInfo memberInfo, CustomAttributeTypedArgument typedArgument)") (ReturnType) (Snippet . "CustomAttributeNamedArgument(${1:MemberInfo memberInfo}, ${2:CustomAttributeTypedArgument typedArgument})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "CustomAttributeNamedArgument") (Description . "") (DisplayText . "CustomAttributeNamedArgument(MemberInfo memberInfo, object value)") (RequiredNamespaceImport) (MethodHeader . "CustomAttributeNamedArgument(MemberInfo memberInfo, object value)") (ReturnType) (Snippet . "CustomAttributeNamedArgument(${1:MemberInfo memberInfo}, ${2:object value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "CustomAttributeTypedArgument") (Description . "") (DisplayText . "CustomAttributeTypedArgument") (RequiredNamespaceImport) (MethodHeader . "CustomAttributeTypedArgument") (ReturnType) (Snippet . "CustomAttributeTypedArgument$0") (Kind . "Struct") (IsSuggestionMode . :json-false)) ((CompletionText . "CustomAttributeTypedArgument") (Description . "") (DisplayText . "CustomAttributeTypedArgument()") (RequiredNamespaceImport) (MethodHeader . "CustomAttributeTypedArgument()") (ReturnType) (Snippet . "CustomAttributeTypedArgument()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "CustomAttributeTypedArgument") (Description . "") (DisplayText . "CustomAttributeTypedArgument(object value)") (RequiredNamespaceImport) (MethodHeader . "CustomAttributeTypedArgument(object value)") (ReturnType) (Snippet . "CustomAttributeTypedArgument(${1:object value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "CustomAttributeTypedArgument") (Description . "") (DisplayText . "CustomAttributeTypedArgument(Type argumentType, object value)") (RequiredNamespaceImport) (MethodHeader . "CustomAttributeTypedArgument(Type argumentType, object value)") (ReturnType) (Snippet . "CustomAttributeTypedArgument(${1:Type argumentType}, ${2:object value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "CustomDataSourceBase") (Description . "") (DisplayText . "CustomDataSourceBase") (RequiredNamespaceImport) (MethodHeader . "CustomDataSourceBase") (ReturnType) (Snippet . "CustomDataSourceBase$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "CustomDataSourceBase") (Description . "") (DisplayText . "CustomDataSourceBase()") (RequiredNamespaceImport) (MethodHeader . "CustomDataSourceBase()") (ReturnType) (Snippet . "CustomDataSourceBase()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "CustomerMetaData") (Description . "Implements a model for meta data of forms.
") (DisplayText . "CustomerMetaData") (RequiredNamespaceImport) (MethodHeader . "CustomerMetaData") (ReturnType) (Snippet . "CustomerMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "CustomerMetaData") (Description . "") (DisplayText . "CustomerMetaData()") (RequiredNamespaceImport) (MethodHeader . "CustomerMetaData()") (ReturnType) (Snippet . "CustomerMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "CustomizeableDataOutputType") (Description . "") (DisplayText . "CustomizeableDataOutputType") (RequiredNamespaceImport) (MethodHeader . "CustomizeableDataOutputType") (ReturnType) (Snippet . "CustomizeableDataOutputType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "CustomizeableDataOutputType") (Description . "CustomizeableDataOutputType class constructor
") (DisplayText . "CustomizeableDataOutputType()") (RequiredNamespaceImport) (MethodHeader . "CustomizeableDataOutputType()") (ReturnType) (Snippet . "CustomizeableDataOutputType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DBInitWizardViewModel") (Description . "") (DisplayText . "DBInitWizardViewModel") (RequiredNamespaceImport) (MethodHeader . "DBInitWizardViewModel") (ReturnType) (Snippet . "DBInitWizardViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DBInitWizardViewModel") (Description . "") (DisplayText . "DBInitWizardViewModel(VisitourClientConfigModel config)") (RequiredNamespaceImport) (MethodHeader . "DBInitWizardViewModel(VisitourClientConfigModel config)") (ReturnType) (Snippet . "DBInitWizardViewModel(${1:VisitourClientConfigModel config})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DDataBase") (Description . "") (DisplayText . "DDataBase") (RequiredNamespaceImport) (MethodHeader . "DDataBase") (ReturnType) (Snippet . "DDataBase$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DDataBase") (Description . "") (DisplayText . "DDataBase()") (RequiredNamespaceImport) (MethodHeader . "DDataBase()") (ReturnType) (Snippet . "DDataBase()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "Decimal") (Description . "") (DisplayText . "decimal") (RequiredNamespaceImport) (MethodHeader . "decimal") (ReturnType) (Snippet . "decimal$0") (Kind . "Struct") (IsSuggestionMode . :json-false)) ((CompletionText . "decimal") (Description) (DisplayText . "decimal") (RequiredNamespaceImport) (MethodHeader) (ReturnType) (Snippet . "decimal") (Kind . "Keyword") (IsSuggestionMode . :json-false)) ((CompletionText . "Decimal") (Description . "") (DisplayText . "decimal()") (RequiredNamespaceImport) (MethodHeader . "decimal()") (ReturnType) (Snippet . "decimal()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "Decimal") (Description . "") (DisplayText . "decimal(double value)") (RequiredNamespaceImport) (MethodHeader . "decimal(double value)") (ReturnType) (Snippet . "decimal(${1:double value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "Decimal") (Description . "") (DisplayText . "decimal(float value)") (RequiredNamespaceImport) (MethodHeader . "decimal(float value)") (ReturnType) (Snippet . "decimal(${1:float value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "Decimal") (Description . "") (DisplayText . "decimal(int lo, int mid, int hi, bool isNegative, byte scale)") (RequiredNamespaceImport) (MethodHeader . "decimal(int lo, int mid, int hi, bool isNegative, byte scale)") (ReturnType) (Snippet . "decimal(${1:int lo}, ${2:int mid}, ${3:int hi}, ${4:bool isNegative}, ${5:byte scale})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "Decimal") (Description . "") (DisplayText . "decimal(int value)") (RequiredNamespaceImport) (MethodHeader . "decimal(int value)") (ReturnType) (Snippet . "decimal(${1:int value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "Decimal") (Description . "") (DisplayText . "decimal(int[] bits)") (RequiredNamespaceImport) (MethodHeader . "decimal(int[] bits)") (ReturnType) (Snippet . "decimal(${1:int[] bits})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "Decimal") (Description . "") (DisplayText . "decimal(long value)") (RequiredNamespaceImport) (MethodHeader . "decimal(long value)") (ReturnType) (Snippet . "decimal(${1:long value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "Decimal") (Description . "") (DisplayText . "decimal(uint value)") (RequiredNamespaceImport) (MethodHeader . "decimal(uint value)") (ReturnType) (Snippet . "decimal(${1:uint value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "Decimal") (Description . "") (DisplayText . "decimal(ulong value)") (RequiredNamespaceImport) (MethodHeader . "decimal(ulong value)") (ReturnType) (Snippet . "decimal(${1:ulong value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DecimalBarInputItemViewModel") (Description . "") (DisplayText . "DecimalBarInputItemViewModel") (RequiredNamespaceImport) (MethodHeader . "DecimalBarInputItemViewModel") (ReturnType) (Snippet . "DecimalBarInputItemViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DecimalBarInputItemViewModel") (Description . "") (DisplayText . "DecimalBarInputItemViewModel()") (RequiredNamespaceImport) (MethodHeader . "DecimalBarInputItemViewModel()") (ReturnType) (Snippet . "DecimalBarInputItemViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DecimalConverter") (Description . "") (DisplayText . "DecimalConverter") (RequiredNamespaceImport) (MethodHeader . "DecimalConverter") (ReturnType) (Snippet . "DecimalConverter$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DecimalConverter") (Description . "") (DisplayText . "DecimalConverter()") (RequiredNamespaceImport) (MethodHeader . "DecimalConverter()") (ReturnType) (Snippet . "DecimalConverter()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultBarAndDockingController") (Description . "
Provides access to the default DevExpress.XtraBars.BarAndDockingController object which is used for default painting XtraBars controls (bars, dock panels, Ribbon Controls and tabbed windows of the XtraTabbedMdiManager).") (DisplayText . "DefaultBarAndDockingController") (RequiredNamespaceImport) (MethodHeader . "DefaultBarAndDockingController") (ReturnType) (Snippet . "DefaultBarAndDockingController$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultBarAndDockingController") (Description . "
Initializes a new instance of the DevExpress.XtraBars.DefaultBarAndDockingController class.") (DisplayText . "DefaultBarAndDockingController()") (RequiredNamespaceImport) (MethodHeader . "DefaultBarAndDockingController()") (ReturnType) (Snippet . "DefaultBarAndDockingController()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultBarAndDockingController") (Description . "
Initializes a new instance of the DevExpress.XtraBars.DefaultBarAndDockingController class.
container: A System.ComponentModel.IContainer object that provides functionality for containers.
") (DisplayText . "DefaultBarAndDockingController(IContainer container)") (RequiredNamespaceImport) (MethodHeader . "DefaultBarAndDockingController(IContainer container)") (ReturnType) (Snippet . "DefaultBarAndDockingController(${1:IContainer container})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultBindingPropertyAttribute") (Description . "") (DisplayText . "DefaultBindingPropertyAttribute") (RequiredNamespaceImport) (MethodHeader . "DefaultBindingPropertyAttribute") (ReturnType) (Snippet . "DefaultBindingPropertyAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultBindingPropertyAttribute") (Description . "") (DisplayText . "DefaultBindingPropertyAttribute()") (RequiredNamespaceImport) (MethodHeader . "DefaultBindingPropertyAttribute()") (ReturnType) (Snippet . "DefaultBindingPropertyAttribute()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultBindingPropertyAttribute") (Description . "") (DisplayText . "DefaultBindingPropertyAttribute(string name)") (RequiredNamespaceImport) (MethodHeader . "DefaultBindingPropertyAttribute(string name)") (ReturnType) (Snippet . "DefaultBindingPropertyAttribute(${1:string name})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultComparer") (Description . "Implements a model for a default comparer.
A comparable class.") (DisplayText . "DefaultComparer<T>") (RequiredNamespaceImport) (MethodHeader . "DefaultComparer<T>") (ReturnType) (Snippet . "DefaultComparer<${1:T}>$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultComparer") (Description . "Initializes a new instance of the T class.
") (DisplayText . "DefaultComparer<T>()") (RequiredNamespaceImport) (MethodHeader . "DefaultComparer<T>()") (ReturnType) (Snippet . "DefaultComparer<${1:T}>()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultEditorsRepository") (Description . "") (DisplayText . "DefaultEditorsRepository") (RequiredNamespaceImport) (MethodHeader . "DefaultEditorsRepository") (ReturnType) (Snippet . "DefaultEditorsRepository$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultEditorsRepository") (Description . "") (DisplayText . "DefaultEditorsRepository()") (RequiredNamespaceImport) (MethodHeader . "DefaultEditorsRepository()") (ReturnType) (Snippet . "DefaultEditorsRepository()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultEventAttribute") (Description . "") (DisplayText . "DefaultEventAttribute") (RequiredNamespaceImport) (MethodHeader . "DefaultEventAttribute") (ReturnType) (Snippet . "DefaultEventAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultEventAttribute") (Description . "") (DisplayText . "DefaultEventAttribute(string name)") (RequiredNamespaceImport) (MethodHeader . "DefaultEventAttribute(string name)") (ReturnType) (Snippet . "DefaultEventAttribute(${1:string name})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultLayoutMeta") (Description . "") (DisplayText . "DefaultLayoutMeta") (RequiredNamespaceImport) (MethodHeader . "DefaultLayoutMeta") (ReturnType) (Snippet . "DefaultLayoutMeta$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultLayoutMeta") (Description . "") (DisplayText . "DefaultLayoutMeta()") (RequiredNamespaceImport) (MethodHeader . "DefaultLayoutMeta()") (ReturnType) (Snippet . "DefaultLayoutMeta()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultLayoutNameType") (Description . "") (DisplayText . "DefaultLayoutNameType") (RequiredNamespaceImport) (MethodHeader . "DefaultLayoutNameType") (ReturnType) (Snippet . "DefaultLayoutNameType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultLayoutNameType") (Description . "") (DisplayText . "DefaultLayoutNameType()") (RequiredNamespaceImport) (MethodHeader . "DefaultLayoutNameType()") (ReturnType) (Snippet . "DefaultLayoutNameType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultMemberAttribute") (Description . "") (DisplayText . "DefaultMemberAttribute") (RequiredNamespaceImport) (MethodHeader . "DefaultMemberAttribute") (ReturnType) (Snippet . "DefaultMemberAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultMemberAttribute") (Description . "") (DisplayText . "DefaultMemberAttribute(string memberName)") (RequiredNamespaceImport) (MethodHeader . "DefaultMemberAttribute(string memberName)") (ReturnType) (Snippet . "DefaultMemberAttribute(${1:string memberName})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultPropertyAttribute") (Description . "") (DisplayText . "DefaultPropertyAttribute") (RequiredNamespaceImport) (MethodHeader . "DefaultPropertyAttribute") (ReturnType) (Snippet . "DefaultPropertyAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultPropertyAttribute") (Description . "") (DisplayText . "DefaultPropertyAttribute(string name)") (RequiredNamespaceImport) (MethodHeader . "DefaultPropertyAttribute(string name)") (ReturnType) (Snippet . "DefaultPropertyAttribute(${1:string name})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultRibbonItemStyle") (Description . "") (DisplayText . "DefaultRibbonItemStyle") (RequiredNamespaceImport) (MethodHeader . "DefaultRibbonItemStyle") (ReturnType) (Snippet . "DefaultRibbonItemStyle$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultRibbonItemStyle") (Description . "") (DisplayText . "DefaultRibbonItemStyle()") (RequiredNamespaceImport) (MethodHeader . "DefaultRibbonItemStyle()") (ReturnType) (Snippet . "DefaultRibbonItemStyle()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultValueAttribute") (Description . "") (DisplayText . "DefaultValueAttribute") (RequiredNamespaceImport) (MethodHeader . "DefaultValueAttribute") (ReturnType) (Snippet . "DefaultValueAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultValueAttribute") (Description . "") (DisplayText . "DefaultValueAttribute(bool value)") (RequiredNamespaceImport) (MethodHeader . "DefaultValueAttribute(bool value)") (ReturnType) (Snippet . "DefaultValueAttribute(${1:bool value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultValueAttribute") (Description . "") (DisplayText . "DefaultValueAttribute(byte value)") (RequiredNamespaceImport) (MethodHeader . "DefaultValueAttribute(byte value)") (ReturnType) (Snippet . "DefaultValueAttribute(${1:byte value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultValueAttribute") (Description . "") (DisplayText . "DefaultValueAttribute(char value)") (RequiredNamespaceImport) (MethodHeader . "DefaultValueAttribute(char value)") (ReturnType) (Snippet . "DefaultValueAttribute(${1:char value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultValueAttribute") (Description . "") (DisplayText . "DefaultValueAttribute(double value)") (RequiredNamespaceImport) (MethodHeader . "DefaultValueAttribute(double value)") (ReturnType) (Snippet . "DefaultValueAttribute(${1:double value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultValueAttribute") (Description . "") (DisplayText . "DefaultValueAttribute(float value)") (RequiredNamespaceImport) (MethodHeader . "DefaultValueAttribute(float value)") (ReturnType) (Snippet . "DefaultValueAttribute(${1:float value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultValueAttribute") (Description . "") (DisplayText . "DefaultValueAttribute(int value)") (RequiredNamespaceImport) (MethodHeader . "DefaultValueAttribute(int value)") (ReturnType) (Snippet . "DefaultValueAttribute(${1:int value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultValueAttribute") (Description . "") (DisplayText . "DefaultValueAttribute(long value)") (RequiredNamespaceImport) (MethodHeader . "DefaultValueAttribute(long value)") (ReturnType) (Snippet . "DefaultValueAttribute(${1:long value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultValueAttribute") (Description . "") (DisplayText . "DefaultValueAttribute(object value)") (RequiredNamespaceImport) (MethodHeader . "DefaultValueAttribute(object value)") (ReturnType) (Snippet . "DefaultValueAttribute(${1:object value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultValueAttribute") (Description . "") (DisplayText . "DefaultValueAttribute(short value)") (RequiredNamespaceImport) (MethodHeader . "DefaultValueAttribute(short value)") (ReturnType) (Snippet . "DefaultValueAttribute(${1:short value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultValueAttribute") (Description . "") (DisplayText . "DefaultValueAttribute(string value)") (RequiredNamespaceImport) (MethodHeader . "DefaultValueAttribute(string value)") (ReturnType) (Snippet . "DefaultValueAttribute(${1:string value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultValueAttribute") (Description . "") (DisplayText . "DefaultValueAttribute(Type type, string value)") (RequiredNamespaceImport) (MethodHeader . "DefaultValueAttribute(Type type, string value)") (ReturnType) (Snippet . "DefaultValueAttribute(${1:Type type}, ${2:string value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "Delegate") (Description . "") (DisplayText . "Delegate") (RequiredNamespaceImport) (MethodHeader . "Delegate") (ReturnType) (Snippet . "Delegate$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "Delegate") (Description . "") (DisplayText . "Delegate(object target, string method)") (RequiredNamespaceImport) (MethodHeader . "Delegate(object target, string method)") (ReturnType) (Snippet . "Delegate(${1:object target}, ${2:string method})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "Delegate") (Description . "") (DisplayText . "Delegate(Type target, string method)") (RequiredNamespaceImport) (MethodHeader . "Delegate(Type target, string method)") (ReturnType) (Snippet . "Delegate(${1:Type target}, ${2:string method})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DependencyCheckFinishedEventArgs") (Description . "") (DisplayText . "DependencyCheckFinishedEventArgs") (RequiredNamespaceImport) (MethodHeader . "DependencyCheckFinishedEventArgs") (ReturnType) (Snippet . "DependencyCheckFinishedEventArgs$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DependencyCheckFinishedEventArgs") (Description . "") (DisplayText . "DependencyCheckFinishedEventArgs(bool delete, DOBindingSource source)") (RequiredNamespaceImport) (MethodHeader . "DependencyCheckFinishedEventArgs(bool delete, DOBindingSource source)") (ReturnType) (Snippet . "DependencyCheckFinishedEventArgs(${1:bool delete}, ${2:DOBindingSource source})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DependencyMappingType") (Description . "") (DisplayText . "DependencyMappingType") (RequiredNamespaceImport) (MethodHeader . "DependencyMappingType") (ReturnType) (Snippet . "DependencyMappingType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DependencyMappingType") (Description . "DependencyMappingType class constructor
") (DisplayText . "DependencyMappingType()") (RequiredNamespaceImport) (MethodHeader . "DependencyMappingType()") (ReturnType) (Snippet . "DependencyMappingType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DesignerCategoryAttribute") (Description . "") (DisplayText . "DesignerCategoryAttribute") (RequiredNamespaceImport) (MethodHeader . "DesignerCategoryAttribute") (ReturnType) (Snippet . "DesignerCategoryAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DesignerCategoryAttribute") (Description . "") (DisplayText . "DesignerCategoryAttribute()") (RequiredNamespaceImport) (MethodHeader . "DesignerCategoryAttribute()") (ReturnType) (Snippet . "DesignerCategoryAttribute()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DesignerCategoryAttribute") (Description . "") (DisplayText . "DesignerCategoryAttribute(string category)") (RequiredNamespaceImport) (MethodHeader . "DesignerCategoryAttribute(string category)") (ReturnType) (Snippet . "DesignerCategoryAttribute(${1:string category})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DesignerSerializationVisibility") (Description . "") (DisplayText . "DesignerSerializationVisibility") (RequiredNamespaceImport) (MethodHeader . "DesignerSerializationVisibility") (ReturnType) (Snippet . "DesignerSerializationVisibility$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DesignerSerializationVisibilityAttribute") (Description . "") (DisplayText . "DesignerSerializationVisibilityAttribute") (RequiredNamespaceImport) (MethodHeader . "DesignerSerializationVisibilityAttribute") (ReturnType) (Snippet . "DesignerSerializationVisibilityAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DesignerSerializationVisibilityAttribute") (Description . "") (DisplayText . "DesignerSerializationVisibilityAttribute(DesignerSerializationVisibility visibility)") (RequiredNamespaceImport) (MethodHeader . "DesignerSerializationVisibilityAttribute(DesignerSerializationVisibility visibility)") (ReturnType) (Snippet . "DesignerSerializationVisibilityAttribute(${1:DesignerSerializationVisibility visibility})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DesignOnlyAttribute") (Description . "") (DisplayText . "DesignOnlyAttribute") (RequiredNamespaceImport) (MethodHeader . "DesignOnlyAttribute") (ReturnType) (Snippet . "DesignOnlyAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DesignOnlyAttribute") (Description . "") (DisplayText . "DesignOnlyAttribute(bool isDesignOnly)") (RequiredNamespaceImport) (MethodHeader . "DesignOnlyAttribute(bool isDesignOnly)") (ReturnType) (Snippet . "DesignOnlyAttribute(${1:bool isDesignOnly})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DesignTimeVisibleAttribute") (Description . "") (DisplayText . "DesignTimeVisibleAttribute") (RequiredNamespaceImport) (MethodHeader . "DesignTimeVisibleAttribute") (ReturnType) (Snippet . "DesignTimeVisibleAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DesignTimeVisibleAttribute") (Description . "") (DisplayText . "DesignTimeVisibleAttribute()") (RequiredNamespaceImport) (MethodHeader . "DesignTimeVisibleAttribute()") (ReturnType) (Snippet . "DesignTimeVisibleAttribute()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DesignTimeVisibleAttribute") (Description . "") (DisplayText . "DesignTimeVisibleAttribute(bool visible)") (RequiredNamespaceImport) (MethodHeader . "DesignTimeVisibleAttribute(bool visible)") (ReturnType) (Snippet . "DesignTimeVisibleAttribute(${1:bool visible})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DFilterBase") (Description . "") (DisplayText . "DFilterBase") (RequiredNamespaceImport) (MethodHeader . "DFilterBase") (ReturnType) (Snippet . "DFilterBase$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DFilterBase") (Description . "") (DisplayText . "DFilterBase(FilterType filterType)") (RequiredNamespaceImport) (MethodHeader . "DFilterBase(FilterType filterType)") (ReturnType) (Snippet . "DFilterBase(${1:FilterType filterType})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "Diagnostic") (Description . "") (DisplayText . "Diagnostic") (RequiredNamespaceImport) (MethodHeader . "Diagnostic") (ReturnType) (Snippet . "Diagnostic$0") (Kind . "Namespace") (IsSuggestionMode . :json-false)) ((CompletionText . "Dictionary") (Description . "") (DisplayText . "Dictionary<TKey, TValue>") (RequiredNamespaceImport) (MethodHeader . "Dictionary<TKey, TValue>") (ReturnType) (Snippet . "Dictionary<${1:TKey}, ${2:TValue}>$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "Dictionary") (Description . "") (DisplayText . "Dictionary<TKey, TValue>()") (RequiredNamespaceImport) (MethodHeader . "Dictionary<TKey, TValue>()") (ReturnType) (Snippet . "Dictionary<${1:TKey}, ${2:TValue}>()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "Dictionary") (Description . "") (DisplayText . "Dictionary<TKey, TValue>(IDictionary<TKey, TValue> dictionary)") (RequiredNamespaceImport) (MethodHeader . "Dictionary<TKey, TValue>(IDictionary<TKey, TValue> dictionary)") (ReturnType) (Snippet . "Dictionary<${1:TKey}, ${2:TValue}>(${3:IDictionary<TKey, TValue> dictionary})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "Dictionary") (Description . "") (DisplayText . "Dictionary<TKey, TValue>(IDictionary<TKey, TValue> dictionary, IEqualityComparer<TKey> comparer)") (RequiredNamespaceImport) (MethodHeader . "Dictionary<TKey, TValue>(IDictionary<TKey, TValue> dictionary, IEqualityComparer<TKey> comparer)") (ReturnType) (Snippet . "Dictionary<${1:TKey}, ${2:TValue}>(${3:IDictionary<TKey, TValue> dictionary}, ${4:IEqualityComparer<TKey> comparer})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "Dictionary") (Description . "") (DisplayText . "Dictionary<TKey, TValue>(IEqualityComparer<TKey> comparer)") (RequiredNamespaceImport) (MethodHeader . "Dictionary<TKey, TValue>(IEqualityComparer<TKey> comparer)") (ReturnType) (Snippet . "Dictionary<${1:TKey}, ${2:TValue}>(${3:IEqualityComparer<TKey> comparer})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "Dictionary") (Description . "") (DisplayText . "Dictionary<TKey, TValue>(int capacity)") (RequiredNamespaceImport) (MethodHeader . "Dictionary<TKey, TValue>(int capacity)") (ReturnType) (Snippet . "Dictionary<${1:TKey}, ${2:TValue}>(${3:int capacity})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "Dictionary") (Description . "") (DisplayText . "Dictionary<TKey, TValue>(int capacity, IEqualityComparer<TKey> comparer)") (RequiredNamespaceImport) (MethodHeader . "Dictionary<TKey, TValue>(int capacity, IEqualityComparer<TKey> comparer)") (ReturnType) (Snippet . "Dictionary<${1:TKey}, ${2:TValue}>(${3:int capacity}, ${4:IEqualityComparer<TKey> comparer})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "Dictionary") (Description . "") (DisplayText . "Dictionary<TKey, TValue>(SerializationInfo info, StreamingContext context)") (RequiredNamespaceImport) (MethodHeader . "Dictionary<TKey, TValue>(SerializationInfo info, StreamingContext context)") (ReturnType) (Snippet . "Dictionary<${1:TKey}, ${2:TValue}>(${3:SerializationInfo info}, ${4:StreamingContext context})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DictionaryBase") (Description . "") (DisplayText . "DictionaryBase") (RequiredNamespaceImport) (MethodHeader . "DictionaryBase") (ReturnType) (Snippet . "DictionaryBase$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DictionaryBase") (Description . "") (DisplayText . "DictionaryBase()") (RequiredNamespaceImport) (MethodHeader . "DictionaryBase()") (ReturnType) (Snippet . "DictionaryBase()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DictionaryEntry") (Description . "") (DisplayText . "DictionaryEntry") (RequiredNamespaceImport) (MethodHeader . "DictionaryEntry") (ReturnType) (Snippet . "DictionaryEntry$0") (Kind . "Struct") (IsSuggestionMode . :json-false)) ((CompletionText . "DictionaryEntry") (Description . "") (DisplayText . "DictionaryEntry()") (RequiredNamespaceImport) (MethodHeader . "DictionaryEntry()") (ReturnType) (Snippet . "DictionaryEntry()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DictionaryEntry") (Description . "") (DisplayText . "DictionaryEntry(object key, object value)") (RequiredNamespaceImport) (MethodHeader . "DictionaryEntry(object key, object value)") (ReturnType) (Snippet . "DictionaryEntry(${1:object key}, ${2:object value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DirtyValidator") (Description . "") (DisplayText . "DirtyValidator") (RequiredNamespaceImport) (MethodHeader . "DirtyValidator") (ReturnType) (Snippet . "DirtyValidator$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DirtyValidator") (Description . "") (DisplayText . "DirtyValidator()") (RequiredNamespaceImport) (MethodHeader . "DirtyValidator()") (ReturnType) (Snippet . "DirtyValidator()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DisplayNameAttribute") (Description . "") (DisplayText . "DisplayNameAttribute") (RequiredNamespaceImport) (MethodHeader . "DisplayNameAttribute") (ReturnType) (Snippet . "DisplayNameAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DisplayNameAttribute") (Description . "") (DisplayText . "DisplayNameAttribute()") (RequiredNamespaceImport) (MethodHeader . "DisplayNameAttribute()") (ReturnType) (Snippet . "DisplayNameAttribute()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DisplayNameAttribute") (Description . "") (DisplayText . "DisplayNameAttribute(string displayName)") (RequiredNamespaceImport) (MethodHeader . "DisplayNameAttribute(string displayName)") (ReturnType) (Snippet . "DisplayNameAttribute(${1:string displayName})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DisplayTextEvaluator") (Description . "") (DisplayText . "DisplayTextEvaluator") (RequiredNamespaceImport) (MethodHeader . "DisplayTextEvaluator") (ReturnType) (Snippet . "DisplayTextEvaluator$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DisplayTextEvaluator") (Description . "") (DisplayText . "DisplayTextEvaluator(IDisplayTextEvaluatorOwner owner)") (RequiredNamespaceImport) (MethodHeader . "DisplayTextEvaluator(IDisplayTextEvaluatorOwner owner)") (ReturnType) (Snippet . "DisplayTextEvaluator(${1:IDisplayTextEvaluatorOwner owner})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DistanceControlType") (Description . "") (DisplayText . "DistanceControlType") (RequiredNamespaceImport) (MethodHeader . "DistanceControlType") (ReturnType) (Snippet . "DistanceControlType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DistanceControlType") (Description . "") (DisplayText . "DistanceControlType()") (RequiredNamespaceImport) (MethodHeader . "DistanceControlType()") (ReturnType) (Snippet . "DistanceControlType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DistanceCtrlType") (Description . "") (DisplayText . "DistanceCtrlType") (RequiredNamespaceImport) (MethodHeader . "DistanceCtrlType") (ReturnType) (Snippet . "DistanceCtrlType$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DistanceCtrlUnitType") (Description . "") (DisplayText . "DistanceCtrlUnitType") (RequiredNamespaceImport) (MethodHeader . "DistanceCtrlUnitType") (ReturnType) (Snippet . "DistanceCtrlUnitType$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DistanceEditorView") (Description . "Implements a model for an editable numeric view.
") (DisplayText . "DistanceEditorView") (RequiredNamespaceImport) (MethodHeader . "DistanceEditorView") (ReturnType) (Snippet . "DistanceEditorView$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DistanceEditorView") (Description . "") (DisplayText . "DistanceEditorView()") (RequiredNamespaceImport) (MethodHeader . "DistanceEditorView()") (ReturnType) (Snippet . "DistanceEditorView()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DistanceEditorView") (Description . "") (DisplayText . "DistanceEditorView(DistanceInputViewModel viewModel)") (RequiredNamespaceImport) (MethodHeader . "DistanceEditorView(DistanceInputViewModel viewModel)") (ReturnType) (Snippet . "DistanceEditorView(${1:DistanceInputViewModel viewModel})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DistanceInputViewModel") (Description . "") (DisplayText . "DistanceInputViewModel") (RequiredNamespaceImport) (MethodHeader . "DistanceInputViewModel") (ReturnType) (Snippet . "DistanceInputViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DistanceInputViewModel") (Description . "Initializes a new instance of the Fls.UI.Base.NumericInputViewModel class.
") (DisplayText . "DistanceInputViewModel()") (RequiredNamespaceImport) (MethodHeader . "DistanceInputViewModel()") (ReturnType) (Snippet . "DistanceInputViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DistanceInputViewModel") (Description . "") (DisplayText . "DistanceInputViewModel(decimal maxValue, decimal minValue)") (RequiredNamespaceImport) (MethodHeader . "DistanceInputViewModel(decimal maxValue, decimal minValue)") (ReturnType) (Snippet . "DistanceInputViewModel(${1:decimal maxValue}, ${2:decimal minValue})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DistanceInputViewModel") (Description . "Initializes a new instance of the Fls.UI.Base.NumericInputViewModel class.

elementId: The id of the UI element.
defaultValue: The default value.
startValue: The start value.") (DisplayText . "DistanceInputViewModel(UIItemId elementId, decimal defaultValue, decimal startValue)") (RequiredNamespaceImport) (MethodHeader . "DistanceInputViewModel(UIItemId elementId, decimal defaultValue, decimal startValue)") (ReturnType) (Snippet . "DistanceInputViewModel(${1:UIItemId elementId}, ${2:decimal defaultValue}, ${3:decimal startValue})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DistanceInputViewModel") (Description . "") (DisplayText . "DistanceInputViewModel(UIItemId elementId, decimal defaultValue, decimal startValue, int decimalPlaces, decimal incrementValue, decimal minValue, decimal maxValue, bool hasThousandMark, NumberStyle numberStyle)") (RequiredNamespaceImport) (MethodHeader . "DistanceInputViewModel(UIItemId elementId, decimal defaultValue, decimal startValue, int decimalPlaces, decimal incrementValue, decimal minValue, decimal maxValue, bool hasThousandMark, NumberStyle numberStyle)") (ReturnType) (Snippet . "DistanceInputViewModel(${1:UIItemId elementId}, ${2:decimal defaultValue}, ${3:decimal startValue}, ${4:int decimalPlaces}, ${5:decimal incrementValue}, ${6:decimal minValue}, ${7:decimal maxValue}, ${8:bool hasThousandMark}, ${9:NumberStyle numberStyle})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DistanceMetaData") (Description . "") (DisplayText . "DistanceMetaData") (RequiredNamespaceImport) (MethodHeader . "DistanceMetaData") (ReturnType) (Snippet . "DistanceMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DistanceMetaData") (Description . "") (DisplayText . "DistanceMetaData()") (RequiredNamespaceImport) (MethodHeader . "DistanceMetaData()") (ReturnType) (Snippet . "DistanceMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DLocalizationType") (Description . "") (DisplayText . "DLocalizationType") (RequiredNamespaceImport) (MethodHeader . "DLocalizationType") (ReturnType) (Snippet . "DLocalizationType$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DNamedQuery") (Description . "") (DisplayText . "DNamedQuery") (RequiredNamespaceImport) (MethodHeader . "DNamedQuery") (ReturnType) (Snippet . "DNamedQuery$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DNamedQuery") (Description . "") (DisplayText . "DNamedQuery(string name, Dictionary<string, List<string>> parameters, DDiff diff = null)") (RequiredNamespaceImport) (MethodHeader . "DNamedQuery(string name, Dictionary<string, List<string>> parameters, DDiff diff = null)") (ReturnType) (Snippet . "DNamedQuery(${1:string name}, ${2:Dictionary<string, List<string>> parameters}, ${3:DDiff diff = null})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DNamedQuery") (Description . "") (DisplayText . "DNamedQuery(string name, Dictionary<string, List<string>> parameters, IEnumerable<string> propertyNames, DDiff diff = null)") (RequiredNamespaceImport) (MethodHeader . "DNamedQuery(string name, Dictionary<string, List<string>> parameters, IEnumerable<string> propertyNames, DDiff diff = null)") (ReturnType) (Snippet . "DNamedQuery(${1:string name}, ${2:Dictionary<string, List<string>> parameters}, ${3:IEnumerable<string> propertyNames}, ${4:DDiff diff = null})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DNamedQuery") (Description . "") (DisplayText . "DNamedQuery(string name, Dictionary<string, string> parameters, DDiff diff = null)") (RequiredNamespaceImport) (MethodHeader . "DNamedQuery(string name, Dictionary<string, string> parameters, DDiff diff = null)") (ReturnType) (Snippet . "DNamedQuery(${1:string name}, ${2:Dictionary<string, string> parameters}, ${3:DDiff diff = null})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOAbsenceReason") (Description . "") (DisplayText . "DOAbsenceReason") (RequiredNamespaceImport) (MethodHeader . "DOAbsenceReason") (ReturnType) (Snippet . "DOAbsenceReason$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOAbsenceReason") (Description . "") (DisplayText . "DOAbsenceReason()") (RequiredNamespaceImport) (MethodHeader . "DOAbsenceReason()") (ReturnType) (Snippet . "DOAbsenceReason()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOAbsenceType") (Description . "") (DisplayText . "DOAbsenceType") (RequiredNamespaceImport) (MethodHeader . "DOAbsenceType") (ReturnType) (Snippet . "DOAbsenceType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOAbsenceType") (Description . "") (DisplayText . "DOAbsenceType()") (RequiredNamespaceImport) (MethodHeader . "DOAbsenceType()") (ReturnType) (Snippet . "DOAbsenceType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOAddress") (Description . "") (DisplayText . "DOAddress") (RequiredNamespaceImport) (MethodHeader . "DOAddress") (ReturnType) (Snippet . "DOAddress$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOAddress") (Description . "") (DisplayText . "DOAddress()") (RequiredNamespaceImport) (MethodHeader . "DOAddress()") (ReturnType) (Snippet . "DOAddress()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOAddressCheck") (Description . "") (DisplayText . "DOAddressCheck") (RequiredNamespaceImport) (MethodHeader . "DOAddressCheck") (ReturnType) (Snippet . "DOAddressCheck$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOAddressCheck") (Description . "") (DisplayText . "DOAddressCheck()") (RequiredNamespaceImport) (MethodHeader . "DOAddressCheck()") (ReturnType) (Snippet . "DOAddressCheck()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOAddressError") (Description . "") (DisplayText . "DOAddressError") (RequiredNamespaceImport) (MethodHeader . "DOAddressError") (ReturnType) (Snippet . "DOAddressError$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOAddressError") (Description . "") (DisplayText . "DOAddressError()") (RequiredNamespaceImport) (MethodHeader . "DOAddressError()") (ReturnType) (Snippet . "DOAddressError()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOArticle") (Description . "") (DisplayText . "DOArticle") (RequiredNamespaceImport) (MethodHeader . "DOArticle") (ReturnType) (Snippet . "DOArticle$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOArticle") (Description . "") (DisplayText . "DOArticle()") (RequiredNamespaceImport) (MethodHeader . "DOArticle()") (ReturnType) (Snippet . "DOArticle()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOAsset") (Description . "") (DisplayText . "DOAsset") (RequiredNamespaceImport) (MethodHeader . "DOAsset") (ReturnType) (Snippet . "DOAsset$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOAsset") (Description . "") (DisplayText . "DOAsset()") (RequiredNamespaceImport) (MethodHeader . "DOAsset()") (ReturnType) (Snippet . "DOAsset()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOAssetPurpose") (Description . "") (DisplayText . "DOAssetPurpose") (RequiredNamespaceImport) (MethodHeader . "DOAssetPurpose") (ReturnType) (Snippet . "DOAssetPurpose$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOAssetPurpose") (Description . "") (DisplayText . "DOAssetPurpose()") (RequiredNamespaceImport) (MethodHeader . "DOAssetPurpose()") (ReturnType) (Snippet . "DOAssetPurpose()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOAttachmentFilter") (Description . "") (DisplayText . "DOAttachmentFilter") (RequiredNamespaceImport) (MethodHeader . "DOAttachmentFilter") (ReturnType) (Snippet . "DOAttachmentFilter$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOAttachmentFilter") (Description . "") (DisplayText . "DOAttachmentFilter()") (RequiredNamespaceImport) (MethodHeader . "DOAttachmentFilter()") (ReturnType) (Snippet . "DOAttachmentFilter()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOAttachments") (Description . "") (DisplayText . "DOAttachments") (RequiredNamespaceImport) (MethodHeader . "DOAttachments") (ReturnType) (Snippet . "DOAttachments$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOAttachments") (Description . "") (DisplayText . "DOAttachments()") (RequiredNamespaceImport) (MethodHeader . "DOAttachments()") (ReturnType) (Snippet . "DOAttachments()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOBase") (Description . "") (DisplayText . "DOBase") (RequiredNamespaceImport) (MethodHeader . "DOBase") (ReturnType) (Snippet . "DOBase$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOBase") (Description . "") (DisplayText . "DOBase()") (RequiredNamespaceImport) (MethodHeader . "DOBase()") (ReturnType) (Snippet . "DOBase()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOBrand") (Description . "") (DisplayText . "DOBrand") (RequiredNamespaceImport) (MethodHeader . "DOBrand") (ReturnType) (Snippet . "DOBrand$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOBrand") (Description . "") (DisplayText . "DOBrand()") (RequiredNamespaceImport) (MethodHeader . "DOBrand()") (ReturnType) (Snippet . "DOBrand()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOCallClassification") (Description . "") (DisplayText . "DOCallClassification") (RequiredNamespaceImport) (MethodHeader . "DOCallClassification") (ReturnType) (Snippet . "DOCallClassification$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOCallClassification") (Description . "") (DisplayText . "DOCallClassification()") (RequiredNamespaceImport) (MethodHeader . "DOCallClassification()") (ReturnType) (Snippet . "DOCallClassification()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOCallstate") (Description . "") (DisplayText . "DOCallstate") (RequiredNamespaceImport) (MethodHeader . "DOCallstate") (ReturnType) (Snippet . "DOCallstate$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOCallstate") (Description . "") (DisplayText . "DOCallstate()") (RequiredNamespaceImport) (MethodHeader . "DOCallstate()") (ReturnType) (Snippet . "DOCallstate()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOCarrier") (Description . "") (DisplayText . "DOCarrier") (RequiredNamespaceImport) (MethodHeader . "DOCarrier") (ReturnType) (Snippet . "DOCarrier$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOCarrier") (Description . "") (DisplayText . "DOCarrier()") (RequiredNamespaceImport) (MethodHeader . "DOCarrier()") (ReturnType) (Snippet . "DOCarrier()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DockPanelDesignTimeActionsProvider") (Description . "") (DisplayText . "DockPanelDesignTimeActionsProvider") (RequiredNamespaceImport) (MethodHeader . "DockPanelDesignTimeActionsProvider") (ReturnType) (Snippet . "DockPanelDesignTimeActionsProvider$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DockPanelDesignTimeActionsProvider") (Description . "") (DisplayText . "DockPanelDesignTimeActionsProvider()") (RequiredNamespaceImport) (MethodHeader . "DockPanelDesignTimeActionsProvider()") (ReturnType) (Snippet . "DockPanelDesignTimeActionsProvider()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DockPanelDesignTimeBoundsProvider") (Description . "") (DisplayText . "DockPanelDesignTimeBoundsProvider") (RequiredNamespaceImport) (MethodHeader . "DockPanelDesignTimeBoundsProvider") (ReturnType) (Snippet . "DockPanelDesignTimeBoundsProvider$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DockPanelDesignTimeBoundsProvider") (Description . "") (DisplayText . "DockPanelDesignTimeBoundsProvider()") (RequiredNamespaceImport) (MethodHeader . "DockPanelDesignTimeBoundsProvider()") (ReturnType) (Snippet . "DockPanelDesignTimeBoundsProvider()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOClientLayout") (Description . "") (DisplayText . "DOClientLayout") (RequiredNamespaceImport) (MethodHeader . "DOClientLayout") (ReturnType) (Snippet . "DOClientLayout$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOClientLayout") (Description . "") (DisplayText . "DOClientLayout()") (RequiredNamespaceImport) (MethodHeader . "DOClientLayout()") (ReturnType) (Snippet . "DOClientLayout()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOClientLayout2User") (Description . "") (DisplayText . "DOClientLayout2User") (RequiredNamespaceImport) (MethodHeader . "DOClientLayout2User") (ReturnType) (Snippet . "DOClientLayout2User$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOClientLayout2User") (Description . "") (DisplayText . "DOClientLayout2User()") (RequiredNamespaceImport) (MethodHeader . "DOClientLayout2User()") (ReturnType) (Snippet . "DOClientLayout2User()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOClientUpdateHistory") (Description . "") (DisplayText . "DOClientUpdateHistory") (RequiredNamespaceImport) (MethodHeader . "DOClientUpdateHistory") (ReturnType) (Snippet . "DOClientUpdateHistory$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOClientUpdateHistory") (Description . "") (DisplayText . "DOClientUpdateHistory()") (RequiredNamespaceImport) (MethodHeader . "DOClientUpdateHistory()") (ReturnType) (Snippet . "DOClientUpdateHistory()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DocumentFormat") (Description . "") (DisplayText . "DocumentFormat") (RequiredNamespaceImport) (MethodHeader . "DocumentFormat") (ReturnType) (Snippet . "DocumentFormat$0") (Kind . "Namespace") (IsSuggestionMode . :json-false)) ((CompletionText . "DocumentManagerAppearances") (Description . "") (DisplayText . "DocumentManagerAppearances") (RequiredNamespaceImport) (MethodHeader . "DocumentManagerAppearances") (ReturnType) (Snippet . "DocumentManagerAppearances$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DocumentManagerAppearances") (Description . "") (DisplayText . "DocumentManagerAppearances(IAppearanceOwner owner)") (RequiredNamespaceImport) (MethodHeader . "DocumentManagerAppearances(IAppearanceOwner owner)") (ReturnType) (Snippet . "DocumentManagerAppearances(${1:IAppearanceOwner owner})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOCustomerInstallation") (Description . "") (DisplayText . "DOCustomerInstallation") (RequiredNamespaceImport) (MethodHeader . "DOCustomerInstallation") (ReturnType) (Snippet . "DOCustomerInstallation$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOCustomerInstallation") (Description . "") (DisplayText . "DOCustomerInstallation()") (RequiredNamespaceImport) (MethodHeader . "DOCustomerInstallation()") (ReturnType) (Snippet . "DOCustomerInstallation()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DODataSource") (Description . "") (DisplayText . "DODataSource") (RequiredNamespaceImport) (MethodHeader . "DODataSource") (ReturnType) (Snippet . "DODataSource$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DODataSource") (Description . "") (DisplayText . "DODataSource(DEntity entity, IDOBaseRepository rep, IEntityValidation validator = null, eInitAction initAction = LoadAll)") (RequiredNamespaceImport) (MethodHeader . "DODataSource(DEntity entity, IDOBaseRepository rep, IEntityValidation validator = null, eInitAction initAction = LoadAll)") (ReturnType) (Snippet . "DODataSource(${1:DEntity entity}, ${2:IDOBaseRepository rep}, ${3:IEntityValidation validator = null}, ${4:eInitAction initAction = LoadAll})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DODataSource") (Description . "") (DisplayText . "DODataSource(DEntity entity, IDOBaseRepository rep, IEnumerable<DProperty> propertiesToRead, IEntityValidation validator = null)") (RequiredNamespaceImport) (MethodHeader . "DODataSource(DEntity entity, IDOBaseRepository rep, IEnumerable<DProperty> propertiesToRead, IEntityValidation validator = null)") (ReturnType) (Snippet . "DODataSource(${1:DEntity entity}, ${2:IDOBaseRepository rep}, ${3:IEnumerable<DProperty> propertiesToRead}, ${4:IEntityValidation validator = null})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DODataSource") (Description . "") (DisplayText . "DODataSource(DEntity entity, IDOBaseRepository rep, IEnumerable<string> propertyNames, IEntityValidation validator = null, eInitAction initAction = LoadAll)") (RequiredNamespaceImport) (MethodHeader . "DODataSource(DEntity entity, IDOBaseRepository rep, IEnumerable<string> propertyNames, IEntityValidation validator = null, eInitAction initAction = LoadAll)") (ReturnType) (Snippet . "DODataSource(${1:DEntity entity}, ${2:IDOBaseRepository rep}, ${3:IEnumerable<string> propertyNames}, ${4:IEntityValidation validator = null}, ${5:eInitAction initAction = LoadAll})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DODataSourceFactory") (Description . "") (DisplayText . "DODataSourceFactory") (RequiredNamespaceImport) (MethodHeader . "DODataSourceFactory") (ReturnType) (Snippet . "DODataSourceFactory$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DODataSourceFactory") (Description . "") (DisplayText . "DODataSourceFactory(IDOBaseRepository rep)") (RequiredNamespaceImport) (MethodHeader . "DODataSourceFactory(IDOBaseRepository rep)") (ReturnType) (Snippet . "DODataSourceFactory(${1:IDOBaseRepository rep})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DODataView") (Description . "") (DisplayText . "DODataView") (RequiredNamespaceImport) (MethodHeader . "DODataView") (ReturnType) (Snippet . "DODataView$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DODataView") (Description . "") (DisplayText . "DODataView(DODataSource dataSource, string clientFilterId = null, eInitAction initAction = LoadAll)") (RequiredNamespaceImport) (MethodHeader . "DODataView(DODataSource dataSource, string clientFilterId = null, eInitAction initAction = LoadAll)") (ReturnType) (Snippet . "DODataView(${1:DODataSource dataSource}, ${2:string clientFilterId = null}, ${3:eInitAction initAction = LoadAll})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DODataViewDirect") (Description . "") (DisplayText . "DODataViewDirect") (RequiredNamespaceImport) (MethodHeader . "DODataViewDirect") (ReturnType) (Snippet . "DODataViewDirect$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DODataViewDirect") (Description . "") (DisplayText . "DODataViewDirect(DODataSource dataSource, string clientFilterId = null, eInitAction initAction = LoadAll)") (RequiredNamespaceImport) (MethodHeader . "DODataViewDirect(DODataSource dataSource, string clientFilterId = null, eInitAction initAction = LoadAll)") (ReturnType) (Snippet . "DODataViewDirect(${1:DODataSource dataSource}, ${2:string clientFilterId = null}, ${3:eInitAction initAction = LoadAll})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEngineerMessage") (Description . "") (DisplayText . "DOEngineerMessage") (RequiredNamespaceImport) (MethodHeader . "DOEngineerMessage") (ReturnType) (Snippet . "DOEngineerMessage$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEngineerMessage") (Description . "") (DisplayText . "DOEngineerMessage()") (RequiredNamespaceImport) (MethodHeader . "DOEngineerMessage()") (ReturnType) (Snippet . "DOEngineerMessage()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumAppointSuggOverbooking") (Description . "") (DisplayText . "DOEnumAppointSuggOverbooking") (RequiredNamespaceImport) (MethodHeader . "DOEnumAppointSuggOverbooking") (ReturnType) (Snippet . "DOEnumAppointSuggOverbooking$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumAppointSuggOverbooking") (Description . "") (DisplayText . "DOEnumAppointSuggOverbooking()") (RequiredNamespaceImport) (MethodHeader . "DOEnumAppointSuggOverbooking()") (ReturnType) (Snippet . "DOEnumAppointSuggOverbooking()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumAssetPurpose") (Description . "") (DisplayText . "DOEnumAssetPurpose") (RequiredNamespaceImport) (MethodHeader . "DOEnumAssetPurpose") (ReturnType) (Snippet . "DOEnumAssetPurpose$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumAssetPurpose") (Description . "") (DisplayText . "DOEnumAssetPurpose()") (RequiredNamespaceImport) (MethodHeader . "DOEnumAssetPurpose()") (ReturnType) (Snippet . "DOEnumAssetPurpose()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumClientLayoutType") (Description . "") (DisplayText . "DOEnumClientLayoutType") (RequiredNamespaceImport) (MethodHeader . "DOEnumClientLayoutType") (ReturnType) (Snippet . "DOEnumClientLayoutType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumClientLayoutType") (Description . "") (DisplayText . "DOEnumClientLayoutType()") (RequiredNamespaceImport) (MethodHeader . "DOEnumClientLayoutType()") (ReturnType) (Snippet . "DOEnumClientLayoutType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumContactMedia") (Description . "") (DisplayText . "DOEnumContactMedia") (RequiredNamespaceImport) (MethodHeader . "DOEnumContactMedia") (ReturnType) (Snippet . "DOEnumContactMedia$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumContactMedia") (Description . "") (DisplayText . "DOEnumContactMedia()") (RequiredNamespaceImport) (MethodHeader . "DOEnumContactMedia()") (ReturnType) (Snippet . "DOEnumContactMedia()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumDeliveryStatus") (Description . "") (DisplayText . "DOEnumDeliveryStatus") (RequiredNamespaceImport) (MethodHeader . "DOEnumDeliveryStatus") (ReturnType) (Snippet . "DOEnumDeliveryStatus$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumDeliveryStatus") (Description . "") (DisplayText . "DOEnumDeliveryStatus()") (RequiredNamespaceImport) (MethodHeader . "DOEnumDeliveryStatus()") (ReturnType) (Snippet . "DOEnumDeliveryStatus()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumFillTaskSelection") (Description . "") (DisplayText . "DOEnumFillTaskSelection") (RequiredNamespaceImport) (MethodHeader . "DOEnumFillTaskSelection") (ReturnType) (Snippet . "DOEnumFillTaskSelection$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumFillTaskSelection") (Description . "") (DisplayText . "DOEnumFillTaskSelection()") (RequiredNamespaceImport) (MethodHeader . "DOEnumFillTaskSelection()") (ReturnType) (Snippet . "DOEnumFillTaskSelection()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumMaterialTableType") (Description . "") (DisplayText . "DOEnumMaterialTableType") (RequiredNamespaceImport) (MethodHeader . "DOEnumMaterialTableType") (ReturnType) (Snippet . "DOEnumMaterialTableType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumMaterialTableType") (Description . "") (DisplayText . "DOEnumMaterialTableType()") (RequiredNamespaceImport) (MethodHeader . "DOEnumMaterialTableType()") (ReturnType) (Snippet . "DOEnumMaterialTableType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumNightOptimizeFixCalls") (Description . "") (DisplayText . "DOEnumNightOptimizeFixCalls") (RequiredNamespaceImport) (MethodHeader . "DOEnumNightOptimizeFixCalls") (ReturnType) (Snippet . "DOEnumNightOptimizeFixCalls$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumNightOptimizeFixCalls") (Description . "") (DisplayText . "DOEnumNightOptimizeFixCalls()") (RequiredNamespaceImport) (MethodHeader . "DOEnumNightOptimizeFixCalls()") (ReturnType) (Snippet . "DOEnumNightOptimizeFixCalls()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumObjectStatus") (Description . "") (DisplayText . "DOEnumObjectStatus") (RequiredNamespaceImport) (MethodHeader . "DOEnumObjectStatus") (ReturnType) (Snippet . "DOEnumObjectStatus$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumObjectStatus") (Description . "") (DisplayText . "DOEnumObjectStatus()") (RequiredNamespaceImport) (MethodHeader . "DOEnumObjectStatus()") (ReturnType) (Snippet . "DOEnumObjectStatus()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumPasswordPolicy") (Description . "") (DisplayText . "DOEnumPasswordPolicy") (RequiredNamespaceImport) (MethodHeader . "DOEnumPasswordPolicy") (ReturnType) (Snippet . "DOEnumPasswordPolicy$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumPasswordPolicy") (Description . "") (DisplayText . "DOEnumPasswordPolicy()") (RequiredNamespaceImport) (MethodHeader . "DOEnumPasswordPolicy()") (ReturnType) (Snippet . "DOEnumPasswordPolicy()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumPerfomanceRecordBaseType") (Description . "") (DisplayText . "DOEnumPerfomanceRecordBaseType") (RequiredNamespaceImport) (MethodHeader . "DOEnumPerfomanceRecordBaseType") (ReturnType) (Snippet . "DOEnumPerfomanceRecordBaseType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumPerfomanceRecordBaseType") (Description . "") (DisplayText . "DOEnumPerfomanceRecordBaseType()") (RequiredNamespaceImport) (MethodHeader . "DOEnumPerfomanceRecordBaseType()") (ReturnType) (Snippet . "DOEnumPerfomanceRecordBaseType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumPerformanceRecordStatus") (Description . "") (DisplayText . "DOEnumPerformanceRecordStatus") (RequiredNamespaceImport) (MethodHeader . "DOEnumPerformanceRecordStatus") (ReturnType) (Snippet . "DOEnumPerformanceRecordStatus$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumPerformanceRecordStatus") (Description . "") (DisplayText . "DOEnumPerformanceRecordStatus()") (RequiredNamespaceImport) (MethodHeader . "DOEnumPerformanceRecordStatus()") (ReturnType) (Snippet . "DOEnumPerformanceRecordStatus()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumProjectStatus") (Description . "") (DisplayText . "DOEnumProjectStatus") (RequiredNamespaceImport) (MethodHeader . "DOEnumProjectStatus") (ReturnType) (Snippet . "DOEnumProjectStatus$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumProjectStatus") (Description . "") (DisplayText . "DOEnumProjectStatus()") (RequiredNamespaceImport) (MethodHeader . "DOEnumProjectStatus()") (ReturnType) (Snippet . "DOEnumProjectStatus()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumTaskAddressType") (Description . "") (DisplayText . "DOEnumTaskAddressType") (RequiredNamespaceImport) (MethodHeader . "DOEnumTaskAddressType") (ReturnType) (Snippet . "DOEnumTaskAddressType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumTaskAddressType") (Description . "") (DisplayText . "DOEnumTaskAddressType()") (RequiredNamespaceImport) (MethodHeader . "DOEnumTaskAddressType()") (ReturnType) (Snippet . "DOEnumTaskAddressType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumTaskDeferralReason") (Description . "") (DisplayText . "DOEnumTaskDeferralReason") (RequiredNamespaceImport) (MethodHeader . "DOEnumTaskDeferralReason") (ReturnType) (Snippet . "DOEnumTaskDeferralReason$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumTaskDeferralReason") (Description . "") (DisplayText . "DOEnumTaskDeferralReason()") (RequiredNamespaceImport) (MethodHeader . "DOEnumTaskDeferralReason()") (ReturnType) (Snippet . "DOEnumTaskDeferralReason()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumTaskEscalationReason") (Description . "") (DisplayText . "DOEnumTaskEscalationReason") (RequiredNamespaceImport) (MethodHeader . "DOEnumTaskEscalationReason") (ReturnType) (Snippet . "DOEnumTaskEscalationReason$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumTaskEscalationReason") (Description . "") (DisplayText . "DOEnumTaskEscalationReason()") (RequiredNamespaceImport) (MethodHeader . "DOEnumTaskEscalationReason()") (ReturnType) (Snippet . "DOEnumTaskEscalationReason()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumTaskEscalationState") (Description . "") (DisplayText . "DOEnumTaskEscalationState") (RequiredNamespaceImport) (MethodHeader . "DOEnumTaskEscalationState") (ReturnType) (Snippet . "DOEnumTaskEscalationState$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumTaskEscalationState") (Description . "") (DisplayText . "DOEnumTaskEscalationState()") (RequiredNamespaceImport) (MethodHeader . "DOEnumTaskEscalationState()") (ReturnType) (Snippet . "DOEnumTaskEscalationState()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumTaskEventType") (Description . "") (DisplayText . "DOEnumTaskEventType") (RequiredNamespaceImport) (MethodHeader . "DOEnumTaskEventType") (ReturnType) (Snippet . "DOEnumTaskEventType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumTaskEventType") (Description . "") (DisplayText . "DOEnumTaskEventType()") (RequiredNamespaceImport) (MethodHeader . "DOEnumTaskEventType()") (ReturnType) (Snippet . "DOEnumTaskEventType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumTaskMainType") (Description . "") (DisplayText . "DOEnumTaskMainType") (RequiredNamespaceImport) (MethodHeader . "DOEnumTaskMainType") (ReturnType) (Snippet . "DOEnumTaskMainType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumTaskMainType") (Description . "") (DisplayText . "DOEnumTaskMainType()") (RequiredNamespaceImport) (MethodHeader . "DOEnumTaskMainType()") (ReturnType) (Snippet . "DOEnumTaskMainType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumTaskNotification") (Description . "") (DisplayText . "DOEnumTaskNotification") (RequiredNamespaceImport) (MethodHeader . "DOEnumTaskNotification") (ReturnType) (Snippet . "DOEnumTaskNotification$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumTaskNotification") (Description . "") (DisplayText . "DOEnumTaskNotification()") (RequiredNamespaceImport) (MethodHeader . "DOEnumTaskNotification()") (ReturnType) (Snippet . "DOEnumTaskNotification()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumTaskOutsourcingType") (Description . "") (DisplayText . "DOEnumTaskOutsourcingType") (RequiredNamespaceImport) (MethodHeader . "DOEnumTaskOutsourcingType") (ReturnType) (Snippet . "DOEnumTaskOutsourcingType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumTaskOutsourcingType") (Description . "") (DisplayText . "DOEnumTaskOutsourcingType()") (RequiredNamespaceImport) (MethodHeader . "DOEnumTaskOutsourcingType()") (ReturnType) (Snippet . "DOEnumTaskOutsourcingType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumTaskPriority") (Description . "") (DisplayText . "DOEnumTaskPriority") (RequiredNamespaceImport) (MethodHeader . "DOEnumTaskPriority") (ReturnType) (Snippet . "DOEnumTaskPriority$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumTaskPriority") (Description . "") (DisplayText . "DOEnumTaskPriority()") (RequiredNamespaceImport) (MethodHeader . "DOEnumTaskPriority()") (ReturnType) (Snippet . "DOEnumTaskPriority()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumTaskRelationType") (Description . "") (DisplayText . "DOEnumTaskRelationType") (RequiredNamespaceImport) (MethodHeader . "DOEnumTaskRelationType") (ReturnType) (Snippet . "DOEnumTaskRelationType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumTaskRelationType") (Description . "") (DisplayText . "DOEnumTaskRelationType()") (RequiredNamespaceImport) (MethodHeader . "DOEnumTaskRelationType()") (ReturnType) (Snippet . "DOEnumTaskRelationType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumTaskRetentionType") (Description . "") (DisplayText . "DOEnumTaskRetentionType") (RequiredNamespaceImport) (MethodHeader . "DOEnumTaskRetentionType") (ReturnType) (Snippet . "DOEnumTaskRetentionType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumTaskRetentionType") (Description . "") (DisplayText . "DOEnumTaskRetentionType()") (RequiredNamespaceImport) (MethodHeader . "DOEnumTaskRetentionType()") (ReturnType) (Snippet . "DOEnumTaskRetentionType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumTaskSequenceGroup") (Description . "") (DisplayText . "DOEnumTaskSequenceGroup") (RequiredNamespaceImport) (MethodHeader . "DOEnumTaskSequenceGroup") (ReturnType) (Snippet . "DOEnumTaskSequenceGroup$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumTaskSequenceGroup") (Description . "") (DisplayText . "DOEnumTaskSequenceGroup()") (RequiredNamespaceImport) (MethodHeader . "DOEnumTaskSequenceGroup()") (ReturnType) (Snippet . "DOEnumTaskSequenceGroup()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumTaskServiceType") (Description . "") (DisplayText . "DOEnumTaskServiceType") (RequiredNamespaceImport) (MethodHeader . "DOEnumTaskServiceType") (ReturnType) (Snippet . "DOEnumTaskServiceType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumTaskServiceType") (Description . "") (DisplayText . "DOEnumTaskServiceType()") (RequiredNamespaceImport) (MethodHeader . "DOEnumTaskServiceType()") (ReturnType) (Snippet . "DOEnumTaskServiceType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumTaskStatus") (Description . "") (DisplayText . "DOEnumTaskStatus") (RequiredNamespaceImport) (MethodHeader . "DOEnumTaskStatus") (ReturnType) (Snippet . "DOEnumTaskStatus$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumTaskStatus") (Description . "") (DisplayText . "DOEnumTaskStatus()") (RequiredNamespaceImport) (MethodHeader . "DOEnumTaskStatus()") (ReturnType) (Snippet . "DOEnumTaskStatus()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumTaskTransportType") (Description . "") (DisplayText . "DOEnumTaskTransportType") (RequiredNamespaceImport) (MethodHeader . "DOEnumTaskTransportType") (ReturnType) (Snippet . "DOEnumTaskTransportType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumTaskTransportType") (Description . "") (DisplayText . "DOEnumTaskTransportType()") (RequiredNamespaceImport) (MethodHeader . "DOEnumTaskTransportType()") (ReturnType) (Snippet . "DOEnumTaskTransportType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumTaskTypeSymbol") (Description . "") (DisplayText . "DOEnumTaskTypeSymbol") (RequiredNamespaceImport) (MethodHeader . "DOEnumTaskTypeSymbol") (ReturnType) (Snippet . "DOEnumTaskTypeSymbol$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumTaskTypeSymbol") (Description . "") (DisplayText . "DOEnumTaskTypeSymbol()") (RequiredNamespaceImport) (MethodHeader . "DOEnumTaskTypeSymbol()") (ReturnType) (Snippet . "DOEnumTaskTypeSymbol()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumTourDataAbsence") (Description . "") (DisplayText . "DOEnumTourDataAbsence") (RequiredNamespaceImport) (MethodHeader . "DOEnumTourDataAbsence") (ReturnType) (Snippet . "DOEnumTourDataAbsence$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumTourDataAbsence") (Description . "") (DisplayText . "DOEnumTourDataAbsence()") (RequiredNamespaceImport) (MethodHeader . "DOEnumTourDataAbsence()") (ReturnType) (Snippet . "DOEnumTourDataAbsence()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumTravelType") (Description . "") (DisplayText . "DOEnumTravelType") (RequiredNamespaceImport) (MethodHeader . "DOEnumTravelType") (ReturnType) (Snippet . "DOEnumTravelType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumTravelType") (Description . "") (DisplayText . "DOEnumTravelType()") (RequiredNamespaceImport) (MethodHeader . "DOEnumTravelType()") (ReturnType) (Snippet . "DOEnumTravelType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOFeedback") (Description . "") (DisplayText . "DOFeedback") (RequiredNamespaceImport) (MethodHeader . "DOFeedback") (ReturnType) (Snippet . "DOFeedback$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOFeedback") (Description . "") (DisplayText . "DOFeedback()") (RequiredNamespaceImport) (MethodHeader . "DOFeedback()") (ReturnType) (Snippet . "DOFeedback()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOLargeScaleOperation") (Description . "") (DisplayText . "DOLargeScaleOperation") (RequiredNamespaceImport) (MethodHeader . "DOLargeScaleOperation") (ReturnType) (Snippet . "DOLargeScaleOperation$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOLargeScaleOperation") (Description . "") (DisplayText . "DOLargeScaleOperation()") (RequiredNamespaceImport) (MethodHeader . "DOLargeScaleOperation()") (ReturnType) (Snippet . "DOLargeScaleOperation()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOLargeScaleOperationPc") (Description . "") (DisplayText . "DOLargeScaleOperationPc") (RequiredNamespaceImport) (MethodHeader . "DOLargeScaleOperationPc") (ReturnType) (Snippet . "DOLargeScaleOperationPc$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOLargeScaleOperationPc") (Description . "") (DisplayText . "DOLargeScaleOperationPc()") (RequiredNamespaceImport) (MethodHeader . "DOLargeScaleOperationPc()") (ReturnType) (Snippet . "DOLargeScaleOperationPc()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOListFactory") (Description . "") (DisplayText . "DOListFactory") (RequiredNamespaceImport) (MethodHeader . "DOListFactory") (ReturnType) (Snippet . "DOListFactory$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOListFactory") (Description . "") (DisplayText . "DOListFactory()") (RequiredNamespaceImport) (MethodHeader . "DOListFactory()") (ReturnType) (Snippet . "DOListFactory()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMailServer") (Description . "") (DisplayText . "DOMailServer") (RequiredNamespaceImport) (MethodHeader . "DOMailServer") (ReturnType) (Snippet . "DOMailServer$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMailServer") (Description . "") (DisplayText . "DOMailServer()") (RequiredNamespaceImport) (MethodHeader . "DOMailServer()") (ReturnType) (Snippet . "DOMailServer()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOManufacturer") (Description . "") (DisplayText . "DOManufacturer") (RequiredNamespaceImport) (MethodHeader . "DOManufacturer") (ReturnType) (Snippet . "DOManufacturer$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOManufacturer") (Description . "") (DisplayText . "DOManufacturer()") (RequiredNamespaceImport) (MethodHeader . "DOManufacturer()") (ReturnType) (Snippet . "DOManufacturer()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMasterDataLog") (Description . "") (DisplayText . "DOMasterDataLog") (RequiredNamespaceImport) (MethodHeader . "DOMasterDataLog") (ReturnType) (Snippet . "DOMasterDataLog$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMasterDataLog") (Description . "") (DisplayText . "DOMasterDataLog()") (RequiredNamespaceImport) (MethodHeader . "DOMasterDataLog()") (ReturnType) (Snippet . "DOMasterDataLog()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMasterRoute") (Description . "") (DisplayText . "DOMasterRoute") (RequiredNamespaceImport) (MethodHeader . "DOMasterRoute") (ReturnType) (Snippet . "DOMasterRoute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMasterRoute") (Description . "") (DisplayText . "DOMasterRoute()") (RequiredNamespaceImport) (MethodHeader . "DOMasterRoute()") (ReturnType) (Snippet . "DOMasterRoute()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMasterRoutePc") (Description . "") (DisplayText . "DOMasterRoutePc") (RequiredNamespaceImport) (MethodHeader . "DOMasterRoutePc") (ReturnType) (Snippet . "DOMasterRoutePc$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMasterRoutePc") (Description . "") (DisplayText . "DOMasterRoutePc()") (RequiredNamespaceImport) (MethodHeader . "DOMasterRoutePc()") (ReturnType) (Snippet . "DOMasterRoutePc()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterial") (Description . "") (DisplayText . "DOMaterial") (RequiredNamespaceImport) (MethodHeader . "DOMaterial") (ReturnType) (Snippet . "DOMaterial$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterial") (Description . "") (DisplayText . "DOMaterial()") (RequiredNamespaceImport) (MethodHeader . "DOMaterial()") (ReturnType) (Snippet . "DOMaterial()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialGroup") (Description . "") (DisplayText . "DOMaterialGroup") (RequiredNamespaceImport) (MethodHeader . "DOMaterialGroup") (ReturnType) (Snippet . "DOMaterialGroup$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialGroup") (Description . "") (DisplayText . "DOMaterialGroup()") (RequiredNamespaceImport) (MethodHeader . "DOMaterialGroup()") (ReturnType) (Snippet . "DOMaterialGroup()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialMaster") (Description . "") (DisplayText . "DOMaterialMaster") (RequiredNamespaceImport) (MethodHeader . "DOMaterialMaster") (ReturnType) (Snippet . "DOMaterialMaster$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialMaster") (Description . "") (DisplayText . "DOMaterialMaster()") (RequiredNamespaceImport) (MethodHeader . "DOMaterialMaster()") (ReturnType) (Snippet . "DOMaterialMaster()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialOrder") (Description . "") (DisplayText . "DOMaterialOrder") (RequiredNamespaceImport) (MethodHeader . "DOMaterialOrder") (ReturnType) (Snippet . "DOMaterialOrder$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialOrder") (Description . "") (DisplayText . "DOMaterialOrder()") (RequiredNamespaceImport) (MethodHeader . "DOMaterialOrder()") (ReturnType) (Snippet . "DOMaterialOrder()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialPosting") (Description . "") (DisplayText . "DOMaterialPosting") (RequiredNamespaceImport) (MethodHeader . "DOMaterialPosting") (ReturnType) (Snippet . "DOMaterialPosting$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialPosting") (Description . "") (DisplayText . "DOMaterialPosting()") (RequiredNamespaceImport) (MethodHeader . "DOMaterialPosting()") (ReturnType) (Snippet . "DOMaterialPosting()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialRelevance") (Description . "") (DisplayText . "DOMaterialRelevance") (RequiredNamespaceImport) (MethodHeader . "DOMaterialRelevance") (ReturnType) (Snippet . "DOMaterialRelevance$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialRelevance") (Description . "") (DisplayText . "DOMaterialRelevance()") (RequiredNamespaceImport) (MethodHeader . "DOMaterialRelevance()") (ReturnType) (Snippet . "DOMaterialRelevance()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialStock") (Description . "") (DisplayText . "DOMaterialStock") (RequiredNamespaceImport) (MethodHeader . "DOMaterialStock") (ReturnType) (Snippet . "DOMaterialStock$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialStock") (Description . "") (DisplayText . "DOMaterialStock()") (RequiredNamespaceImport) (MethodHeader . "DOMaterialStock()") (ReturnType) (Snippet . "DOMaterialStock()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialStockLocation") (Description . "") (DisplayText . "DOMaterialStockLocation") (RequiredNamespaceImport) (MethodHeader . "DOMaterialStockLocation") (ReturnType) (Snippet . "DOMaterialStockLocation$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialStockLocation") (Description . "") (DisplayText . "DOMaterialStockLocation()") (RequiredNamespaceImport) (MethodHeader . "DOMaterialStockLocation()") (ReturnType) (Snippet . "DOMaterialStockLocation()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialStockLocationMA") (Description . "") (DisplayText . "DOMaterialStockLocationMA") (RequiredNamespaceImport) (MethodHeader . "DOMaterialStockLocationMA") (ReturnType) (Snippet . "DOMaterialStockLocationMA$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialStockLocationMA") (Description . "") (DisplayText . "DOMaterialStockLocationMA()") (RequiredNamespaceImport) (MethodHeader . "DOMaterialStockLocationMA()") (ReturnType) (Snippet . "DOMaterialStockLocationMA()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMobileConfiguration") (Description . "") (DisplayText . "DOMobileConfiguration") (RequiredNamespaceImport) (MethodHeader . "DOMobileConfiguration") (ReturnType) (Snippet . "DOMobileConfiguration$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMobileConfiguration") (Description . "") (DisplayText . "DOMobileConfiguration()") (RequiredNamespaceImport) (MethodHeader . "DOMobileConfiguration()") (ReturnType) (Snippet . "DOMobileConfiguration()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMsdAppHeader") (Description . "") (DisplayText . "DOMsdAppHeader") (RequiredNamespaceImport) (MethodHeader . "DOMsdAppHeader") (ReturnType) (Snippet . "DOMsdAppHeader$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMsdAppHeader") (Description . "") (DisplayText . "DOMsdAppHeader()") (RequiredNamespaceImport) (MethodHeader . "DOMsdAppHeader()") (ReturnType) (Snippet . "DOMsdAppHeader()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMsdAppLine") (Description . "") (DisplayText . "DOMsdAppLine") (RequiredNamespaceImport) (MethodHeader . "DOMsdAppLine") (ReturnType) (Snippet . "DOMsdAppLine$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMsdAppLine") (Description . "") (DisplayText . "DOMsdAppLine()") (RequiredNamespaceImport) (MethodHeader . "DOMsdAppLine()") (ReturnType) (Snippet . "DOMsdAppLine()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMSDArticles") (Description . "") (DisplayText . "DOMSDArticles") (RequiredNamespaceImport) (MethodHeader . "DOMSDArticles") (ReturnType) (Snippet . "DOMSDArticles$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMSDArticles") (Description . "") (DisplayText . "DOMSDArticles()") (RequiredNamespaceImport) (MethodHeader . "DOMSDArticles()") (ReturnType) (Snippet . "DOMSDArticles()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMWITestTable") (Description . "") (DisplayText . "DOMWITestTable") (RequiredNamespaceImport) (MethodHeader . "DOMWITestTable") (ReturnType) (Snippet . "DOMWITestTable$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMWITestTable") (Description . "") (DisplayText . "DOMWITestTable()") (RequiredNamespaceImport) (MethodHeader . "DOMWITestTable()") (ReturnType) (Snippet . "DOMWITestTable()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMWITestTable2") (Description . "") (DisplayText . "DOMWITestTable2") (RequiredNamespaceImport) (MethodHeader . "DOMWITestTable2") (ReturnType) (Snippet . "DOMWITestTable2$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMWITestTable2") (Description . "") (DisplayText . "DOMWITestTable2()") (RequiredNamespaceImport) (MethodHeader . "DOMWITestTable2()") (ReturnType) (Snippet . "DOMWITestTable2()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOObjectTypeParents") (Description . "") (DisplayText . "DOObjectTypeParents") (RequiredNamespaceImport) (MethodHeader . "DOObjectTypeParents") (ReturnType) (Snippet . "DOObjectTypeParents$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOObjectTypeParents") (Description . "") (DisplayText . "DOObjectTypeParents()") (RequiredNamespaceImport) (MethodHeader . "DOObjectTypeParents()") (ReturnType) (Snippet . "DOObjectTypeParents()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOOrderPackageLocation") (Description . "") (DisplayText . "DOOrderPackageLocation") (RequiredNamespaceImport) (MethodHeader . "DOOrderPackageLocation") (ReturnType) (Snippet . "DOOrderPackageLocation$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOOrderPackageLocation") (Description . "") (DisplayText . "DOOrderPackageLocation()") (RequiredNamespaceImport) (MethodHeader . "DOOrderPackageLocation()") (ReturnType) (Snippet . "DOOrderPackageLocation()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOOrderPackageLocation2TaskType") (Description . "") (DisplayText . "DOOrderPackageLocation2TaskType") (RequiredNamespaceImport) (MethodHeader . "DOOrderPackageLocation2TaskType") (ReturnType) (Snippet . "DOOrderPackageLocation2TaskType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOOrderPackageLocation2TaskType") (Description . "") (DisplayText . "DOOrderPackageLocation2TaskType()") (RequiredNamespaceImport) (MethodHeader . "DOOrderPackageLocation2TaskType()") (ReturnType) (Snippet . "DOOrderPackageLocation2TaskType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOOrderReturnsReason") (Description . "") (DisplayText . "DOOrderReturnsReason") (RequiredNamespaceImport) (MethodHeader . "DOOrderReturnsReason") (ReturnType) (Snippet . "DOOrderReturnsReason$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOOrderReturnsReason") (Description . "") (DisplayText . "DOOrderReturnsReason()") (RequiredNamespaceImport) (MethodHeader . "DOOrderReturnsReason()") (ReturnType) (Snippet . "DOOrderReturnsReason()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOOrderVerification") (Description . "") (DisplayText . "DOOrderVerification") (RequiredNamespaceImport) (MethodHeader . "DOOrderVerification") (ReturnType) (Snippet . "DOOrderVerification$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOOrderVerification") (Description . "") (DisplayText . "DOOrderVerification()") (RequiredNamespaceImport) (MethodHeader . "DOOrderVerification()") (ReturnType) (Snippet . "DOOrderVerification()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOPortalConfiguration") (Description . "") (DisplayText . "DOPortalConfiguration") (RequiredNamespaceImport) (MethodHeader . "DOPortalConfiguration") (ReturnType) (Snippet . "DOPortalConfiguration$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOPortalConfiguration") (Description . "") (DisplayText . "DOPortalConfiguration()") (RequiredNamespaceImport) (MethodHeader . "DOPortalConfiguration()") (ReturnType) (Snippet . "DOPortalConfiguration()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOPostalCode") (Description . "") (DisplayText . "DOPostalCode") (RequiredNamespaceImport) (MethodHeader . "DOPostalCode") (ReturnType) (Snippet . "DOPostalCode$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOPostalCode") (Description . "") (DisplayText . "DOPostalCode()") (RequiredNamespaceImport) (MethodHeader . "DOPostalCode()") (ReturnType) (Snippet . "DOPostalCode()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOProjectPerformanceRecord") (Description . "") (DisplayText . "DOProjectPerformanceRecord") (RequiredNamespaceImport) (MethodHeader . "DOProjectPerformanceRecord") (ReturnType) (Snippet . "DOProjectPerformanceRecord$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOProjectPerformanceRecord") (Description . "") (DisplayText . "DOProjectPerformanceRecord()") (RequiredNamespaceImport) (MethodHeader . "DOProjectPerformanceRecord()") (ReturnType) (Snippet . "DOProjectPerformanceRecord()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOProjectPerformanceRecordType") (Description . "") (DisplayText . "DOProjectPerformanceRecordType") (RequiredNamespaceImport) (MethodHeader . "DOProjectPerformanceRecordType") (ReturnType) (Snippet . "DOProjectPerformanceRecordType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOProjectPerformanceRecordType") (Description . "") (DisplayText . "DOProjectPerformanceRecordType()") (RequiredNamespaceImport) (MethodHeader . "DOProjectPerformanceRecordType()") (ReturnType) (Snippet . "DOProjectPerformanceRecordType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOProjectRoadMap") (Description . "") (DisplayText . "DOProjectRoadMap") (RequiredNamespaceImport) (MethodHeader . "DOProjectRoadMap") (ReturnType) (Snippet . "DOProjectRoadMap$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOProjectRoadMap") (Description . "") (DisplayText . "DOProjectRoadMap()") (RequiredNamespaceImport) (MethodHeader . "DOProjectRoadMap()") (ReturnType) (Snippet . "DOProjectRoadMap()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOPurchase") (Description . "") (DisplayText . "DOPurchase") (RequiredNamespaceImport) (MethodHeader . "DOPurchase") (ReturnType) (Snippet . "DOPurchase$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOPurchase") (Description . "") (DisplayText . "DOPurchase()") (RequiredNamespaceImport) (MethodHeader . "DOPurchase()") (ReturnType) (Snippet . "DOPurchase()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOPurchasePackage") (Description . "") (DisplayText . "DOPurchasePackage") (RequiredNamespaceImport) (MethodHeader . "DOPurchasePackage") (ReturnType) (Snippet . "DOPurchasePackage$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOPurchasePackage") (Description . "") (DisplayText . "DOPurchasePackage()") (RequiredNamespaceImport) (MethodHeader . "DOPurchasePackage()") (ReturnType) (Snippet . "DOPurchasePackage()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOPurchasePackageHistory") (Description . "") (DisplayText . "DOPurchasePackageHistory") (RequiredNamespaceImport) (MethodHeader . "DOPurchasePackageHistory") (ReturnType) (Snippet . "DOPurchasePackageHistory$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOPurchasePackageHistory") (Description . "") (DisplayText . "DOPurchasePackageHistory()") (RequiredNamespaceImport) (MethodHeader . "DOPurchasePackageHistory()") (ReturnType) (Snippet . "DOPurchasePackageHistory()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOSCService2Call") (Description . "") (DisplayText . "DOSCService2Call") (RequiredNamespaceImport) (MethodHeader . "DOSCService2Call") (ReturnType) (Snippet . "DOSCService2Call$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOSCService2Call") (Description . "") (DisplayText . "DOSCService2Call()") (RequiredNamespaceImport) (MethodHeader . "DOSCService2Call()") (ReturnType) (Snippet . "DOSCService2Call()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOSCService2MaterialType") (Description . "") (DisplayText . "DOSCService2MaterialType") (RequiredNamespaceImport) (MethodHeader . "DOSCService2MaterialType") (ReturnType) (Snippet . "DOSCService2MaterialType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOSCService2MaterialType") (Description . "") (DisplayText . "DOSCService2MaterialType()") (RequiredNamespaceImport) (MethodHeader . "DOSCService2MaterialType()") (ReturnType) (Snippet . "DOSCService2MaterialType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOSCService2Purchase") (Description . "") (DisplayText . "DOSCService2Purchase") (RequiredNamespaceImport) (MethodHeader . "DOSCService2Purchase") (ReturnType) (Snippet . "DOSCService2Purchase$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOSCService2Purchase") (Description . "") (DisplayText . "DOSCService2Purchase()") (RequiredNamespaceImport) (MethodHeader . "DOSCService2Purchase()") (ReturnType) (Snippet . "DOSCService2Purchase()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOSCService2TaskType") (Description . "") (DisplayText . "DOSCService2TaskType") (RequiredNamespaceImport) (MethodHeader . "DOSCService2TaskType") (ReturnType) (Snippet . "DOSCService2TaskType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOSCService2TaskType") (Description . "") (DisplayText . "DOSCService2TaskType()") (RequiredNamespaceImport) (MethodHeader . "DOSCService2TaskType()") (ReturnType) (Snippet . "DOSCService2TaskType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOSCServiceDefault") (Description . "") (DisplayText . "DOSCServiceDefault") (RequiredNamespaceImport) (MethodHeader . "DOSCServiceDefault") (ReturnType) (Snippet . "DOSCServiceDefault$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOSCServiceDefault") (Description . "") (DisplayText . "DOSCServiceDefault()") (RequiredNamespaceImport) (MethodHeader . "DOSCServiceDefault()") (ReturnType) (Snippet . "DOSCServiceDefault()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOSCServiceHierarchy") (Description . "") (DisplayText . "DOSCServiceHierarchy") (RequiredNamespaceImport) (MethodHeader . "DOSCServiceHierarchy") (ReturnType) (Snippet . "DOSCServiceHierarchy$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOSCServiceHierarchy") (Description . "") (DisplayText . "DOSCServiceHierarchy()") (RequiredNamespaceImport) (MethodHeader . "DOSCServiceHierarchy()") (ReturnType) (Snippet . "DOSCServiceHierarchy()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOStockState") (Description . "") (DisplayText . "DOStockState") (RequiredNamespaceImport) (MethodHeader . "DOStockState") (ReturnType) (Snippet . "DOStockState$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOStockState") (Description . "") (DisplayText . "DOStockState()") (RequiredNamespaceImport) (MethodHeader . "DOStockState()") (ReturnType) (Snippet . "DOStockState()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOSubcontractor") (Description . "") (DisplayText . "DOSubcontractor") (RequiredNamespaceImport) (MethodHeader . "DOSubcontractor") (ReturnType) (Snippet . "DOSubcontractor$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOSubcontractor") (Description . "") (DisplayText . "DOSubcontractor()") (RequiredNamespaceImport) (MethodHeader . "DOSubcontractor()") (ReturnType) (Snippet . "DOSubcontractor()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOSyncData") (Description . "") (DisplayText . "DOSyncData") (RequiredNamespaceImport) (MethodHeader . "DOSyncData") (ReturnType) (Snippet . "DOSyncData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOSyncData") (Description . "") (DisplayText . "DOSyncData()") (RequiredNamespaceImport) (MethodHeader . "DOSyncData()") (ReturnType) (Snippet . "DOSyncData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTask") (Description . "") (DisplayText . "DOTask") (RequiredNamespaceImport) (MethodHeader . "DOTask") (ReturnType) (Snippet . "DOTask$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTask") (Description . "") (DisplayText . "DOTask()") (RequiredNamespaceImport) (MethodHeader . "DOTask()") (ReturnType) (Snippet . "DOTask()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTask2") (Description . "") (DisplayText . "DOTask2") (RequiredNamespaceImport) (MethodHeader . "DOTask2") (ReturnType) (Snippet . "DOTask2$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTask2") (Description . "") (DisplayText . "DOTask2()") (RequiredNamespaceImport) (MethodHeader . "DOTask2()") (ReturnType) (Snippet . "DOTask2()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTask2Purchase") (Description . "") (DisplayText . "DOTask2Purchase") (RequiredNamespaceImport) (MethodHeader . "DOTask2Purchase") (ReturnType) (Snippet . "DOTask2Purchase$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTask2Purchase") (Description . "") (DisplayText . "DOTask2Purchase()") (RequiredNamespaceImport) (MethodHeader . "DOTask2Purchase()") (ReturnType) (Snippet . "DOTask2Purchase()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTaskHistory") (Description . "") (DisplayText . "DOTaskHistory") (RequiredNamespaceImport) (MethodHeader . "DOTaskHistory") (ReturnType) (Snippet . "DOTaskHistory$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTaskHistory") (Description . "") (DisplayText . "DOTaskHistory()") (RequiredNamespaceImport) (MethodHeader . "DOTaskHistory()") (ReturnType) (Snippet . "DOTaskHistory()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTaskTimeFrames") (Description . "") (DisplayText . "DOTaskTimeFrames") (RequiredNamespaceImport) (MethodHeader . "DOTaskTimeFrames") (ReturnType) (Snippet . "DOTaskTimeFrames$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTaskTimeFrames") (Description . "") (DisplayText . "DOTaskTimeFrames()") (RequiredNamespaceImport) (MethodHeader . "DOTaskTimeFrames()") (ReturnType) (Snippet . "DOTaskTimeFrames()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTaskType") (Description . "") (DisplayText . "DOTaskType") (RequiredNamespaceImport) (MethodHeader . "DOTaskType") (ReturnType) (Snippet . "DOTaskType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTaskType") (Description . "") (DisplayText . "DOTaskType()") (RequiredNamespaceImport) (MethodHeader . "DOTaskType()") (ReturnType) (Snippet . "DOTaskType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTeam") (Description . "") (DisplayText . "DOTeam") (RequiredNamespaceImport) (MethodHeader . "DOTeam") (ReturnType) (Snippet . "DOTeam$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTeam") (Description . "") (DisplayText . "DOTeam()") (RequiredNamespaceImport) (MethodHeader . "DOTeam()") (ReturnType) (Snippet . "DOTeam()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTeamStat") (Description . "") (DisplayText . "DOTeamStat") (RequiredNamespaceImport) (MethodHeader . "DOTeamStat") (ReturnType) (Snippet . "DOTeamStat$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTeamStat") (Description . "") (DisplayText . "DOTeamStat()") (RequiredNamespaceImport) (MethodHeader . "DOTeamStat()") (ReturnType) (Snippet . "DOTeamStat()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTNTStatus") (Description . "") (DisplayText . "DOTNTStatus") (RequiredNamespaceImport) (MethodHeader . "DOTNTStatus") (ReturnType) (Snippet . "DOTNTStatus$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTNTStatus") (Description . "") (DisplayText . "DOTNTStatus()") (RequiredNamespaceImport) (MethodHeader . "DOTNTStatus()") (ReturnType) (Snippet . "DOTNTStatus()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTNTStatusToTask") (Description . "") (DisplayText . "DOTNTStatusToTask") (RequiredNamespaceImport) (MethodHeader . "DOTNTStatusToTask") (ReturnType) (Snippet . "DOTNTStatusToTask$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTNTStatusToTask") (Description . "") (DisplayText . "DOTNTStatusToTask()") (RequiredNamespaceImport) (MethodHeader . "DOTNTStatusToTask()") (ReturnType) (Snippet . "DOTNTStatusToTask()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOToolTourData") (Description . "") (DisplayText . "DOToolTourData") (RequiredNamespaceImport) (MethodHeader . "DOToolTourData") (ReturnType) (Snippet . "DOToolTourData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOToolTourData") (Description . "") (DisplayText . "DOToolTourData()") (RequiredNamespaceImport) (MethodHeader . "DOToolTourData()") (ReturnType) (Snippet . "DOToolTourData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTourAddress") (Description . "") (DisplayText . "DOTourAddress") (RequiredNamespaceImport) (MethodHeader . "DOTourAddress") (ReturnType) (Snippet . "DOTourAddress$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTourAddress") (Description . "") (DisplayText . "DOTourAddress()") (RequiredNamespaceImport) (MethodHeader . "DOTourAddress()") (ReturnType) (Snippet . "DOTourAddress()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTourData") (Description . "") (DisplayText . "DOTourData") (RequiredNamespaceImport) (MethodHeader . "DOTourData") (ReturnType) (Snippet . "DOTourData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTourData") (Description . "") (DisplayText . "DOTourData()") (RequiredNamespaceImport) (MethodHeader . "DOTourData()") (ReturnType) (Snippet . "DOTourData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTourLabel") (Description . "") (DisplayText . "DOTourLabel") (RequiredNamespaceImport) (MethodHeader . "DOTourLabel") (ReturnType) (Snippet . "DOTourLabel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTourLabel") (Description . "") (DisplayText . "DOTourLabel()") (RequiredNamespaceImport) (MethodHeader . "DOTourLabel()") (ReturnType) (Snippet . "DOTourLabel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTracking") (Description . "") (DisplayText . "DOTracking") (RequiredNamespaceImport) (MethodHeader . "DOTracking") (ReturnType) (Snippet . "DOTracking$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTracking") (Description . "") (DisplayText . "DOTracking()") (RequiredNamespaceImport) (MethodHeader . "DOTracking()") (ReturnType) (Snippet . "DOTracking()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTrackingDevice") (Description . "") (DisplayText . "DOTrackingDevice") (RequiredNamespaceImport) (MethodHeader . "DOTrackingDevice") (ReturnType) (Snippet . "DOTrackingDevice$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTrackingDevice") (Description . "") (DisplayText . "DOTrackingDevice()") (RequiredNamespaceImport) (MethodHeader . "DOTrackingDevice()") (ReturnType) (Snippet . "DOTrackingDevice()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTrackingEngineer") (Description . "") (DisplayText . "DOTrackingEngineer") (RequiredNamespaceImport) (MethodHeader . "DOTrackingEngineer") (ReturnType) (Snippet . "DOTrackingEngineer$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTrackingEngineer") (Description . "") (DisplayText . "DOTrackingEngineer()") (RequiredNamespaceImport) (MethodHeader . "DOTrackingEngineer()") (ReturnType) (Snippet . "DOTrackingEngineer()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTrackingPosition") (Description . "") (DisplayText . "DOTrackingPosition") (RequiredNamespaceImport) (MethodHeader . "DOTrackingPosition") (ReturnType) (Snippet . "DOTrackingPosition$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTrackingPosition") (Description . "") (DisplayText . "DOTrackingPosition()") (RequiredNamespaceImport) (MethodHeader . "DOTrackingPosition()") (ReturnType) (Snippet . "DOTrackingPosition()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTrackingReport") (Description . "") (DisplayText . "DOTrackingReport") (RequiredNamespaceImport) (MethodHeader . "DOTrackingReport") (ReturnType) (Snippet . "DOTrackingReport$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTrackingReport") (Description . "") (DisplayText . "DOTrackingReport()") (RequiredNamespaceImport) (MethodHeader . "DOTrackingReport()") (ReturnType) (Snippet . "DOTrackingReport()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTrackingVehicle") (Description . "") (DisplayText . "DOTrackingVehicle") (RequiredNamespaceImport) (MethodHeader . "DOTrackingVehicle") (ReturnType) (Snippet . "DOTrackingVehicle$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTrackingVehicle") (Description . "") (DisplayText . "DOTrackingVehicle()") (RequiredNamespaceImport) (MethodHeader . "DOTrackingVehicle()") (ReturnType) (Snippet . "DOTrackingVehicle()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTransferPoint") (Description . "") (DisplayText . "DOTransferPoint") (RequiredNamespaceImport) (MethodHeader . "DOTransferPoint") (ReturnType) (Snippet . "DOTransferPoint$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTransferPoint") (Description . "") (DisplayText . "DOTransferPoint()") (RequiredNamespaceImport) (MethodHeader . "DOTransferPoint()") (ReturnType) (Snippet . "DOTransferPoint()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DoubleValue") (Description . "Implements a model for double value.
") (DisplayText . "DoubleValue") (RequiredNamespaceImport) (MethodHeader . "DoubleValue") (ReturnType) (Snippet . "DoubleValue$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DoubleValue") (Description . "Initializes a new instance of the Fls.Base.DoubleValue class.
") (DisplayText . "DoubleValue()") (RequiredNamespaceImport) (MethodHeader . "DoubleValue()") (ReturnType) (Snippet . "DoubleValue()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DoubleValue") (Description . "Initializes a new instance of the Fls.Base.DoubleValue class.

value: The start value.") (DisplayText . "DoubleValue(double value)") (RequiredNamespaceImport) (MethodHeader . "DoubleValue(double value)") (ReturnType) (Snippet . "DoubleValue(${1:double value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOWasteType") (Description . "") (DisplayText . "DOWasteType") (RequiredNamespaceImport) (MethodHeader . "DOWasteType") (ReturnType) (Snippet . "DOWasteType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOWasteType") (Description . "") (DisplayText . "DOWasteType()") (RequiredNamespaceImport) (MethodHeader . "DOWasteType()") (ReturnType) (Snippet . "DOWasteType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DownloadWorkFlowRequest") (Description . "") (DisplayText . "DownloadWorkFlowRequest") (RequiredNamespaceImport) (MethodHeader . "DownloadWorkFlowRequest") (ReturnType) (Snippet . "DownloadWorkFlowRequest$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DownloadWorkFlowRequest") (Description . "") (DisplayText . "DownloadWorkFlowRequest()") (RequiredNamespaceImport) (MethodHeader . "DownloadWorkFlowRequest()") (ReturnType) (Snippet . "DownloadWorkFlowRequest()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DownloadWorkFlowResponse") (Description . "") (DisplayText . "DownloadWorkFlowResponse") (RequiredNamespaceImport) (MethodHeader . "DownloadWorkFlowResponse") (ReturnType) (Snippet . "DownloadWorkFlowResponse$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DownloadWorkFlowResponse") (Description . "") (DisplayText . "DownloadWorkFlowResponse()") (RequiredNamespaceImport) (MethodHeader . "DownloadWorkFlowResponse()") (ReturnType) (Snippet . "DownloadWorkFlowResponse()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOWorkerJournal") (Description . "") (DisplayText . "DOWorkerJournal") (RequiredNamespaceImport) (MethodHeader . "DOWorkerJournal") (ReturnType) (Snippet . "DOWorkerJournal$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOWorkerJournal") (Description . "") (DisplayText . "DOWorkerJournal()") (RequiredNamespaceImport) (MethodHeader . "DOWorkerJournal()") (ReturnType) (Snippet . "DOWorkerJournal()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DoWorkEventArgs") (Description . "") (DisplayText . "DoWorkEventArgs") (RequiredNamespaceImport) (MethodHeader . "DoWorkEventArgs") (ReturnType) (Snippet . "DoWorkEventArgs$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DoWorkEventArgs") (Description . "") (DisplayText . "DoWorkEventArgs(object argument)") (RequiredNamespaceImport) (MethodHeader . "DoWorkEventArgs(object argument)") (ReturnType) (Snippet . "DoWorkEventArgs(${1:object argument})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DoWorkEventHandler") (Description . "") (DisplayText . "DoWorkEventHandler") (RequiredNamespaceImport) (MethodHeader . "DoWorkEventHandler") (ReturnType) (Snippet . "DoWorkEventHandler$0") (Kind . "Delegate") (IsSuggestionMode . :json-false)) ((CompletionText . "DoWorkEventHandler") (Description . "") (DisplayText . "DoWorkEventHandler(object @object, IntPtr method)") (RequiredNamespaceImport) (MethodHeader . "DoWorkEventHandler(object @object, IntPtr method)") (ReturnType) (Snippet . "DoWorkEventHandler(${1:object @object}, ${2:IntPtr method})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOWorkingTimeTemplate") (Description . "") (DisplayText . "DOWorkingTimeTemplate") (RequiredNamespaceImport) (MethodHeader . "DOWorkingTimeTemplate") (ReturnType) (Snippet . "DOWorkingTimeTemplate$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOWorkingTimeTemplate") (Description . "") (DisplayText . "DOWorkingTimeTemplate()") (RequiredNamespaceImport) (MethodHeader . "DOWorkingTimeTemplate()") (ReturnType) (Snippet . "DOWorkingTimeTemplate()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DPacket") (Description . "") (DisplayText . "DPacket") (RequiredNamespaceImport) (MethodHeader . "DPacket") (ReturnType) (Snippet . "DPacket$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DQueryBase") (Description . "") (DisplayText . "DQueryBase") (RequiredNamespaceImport) (MethodHeader . "DQueryBase") (ReturnType) (Snippet . "DQueryBase$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DQueryBase") (Description . "") (DisplayText . "DQueryBase()") (RequiredNamespaceImport) (MethodHeader . "DQueryBase()") (ReturnType) (Snippet . "DQueryBase()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DragDropHelper") (Description . "Implements a helper class fro drag drop between WPF and forms.
") (DisplayText . "DragDropHelper") (RequiredNamespaceImport) (MethodHeader . "DragDropHelper") (ReturnType) (Snippet . "DragDropHelper$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DragDropHelper") (Description . "Initializes a new instance of the DragDropHelper class.

objToDrag: The object to drag.") (DisplayText . "DragDropHelper(object objToDrag)") (RequiredNamespaceImport) (MethodHeader . "DragDropHelper(object objToDrag)") (ReturnType) (Snippet . "DragDropHelper(${1:object objToDrag})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DragDropHelper") (Description . "Initializes a new instance of the DragDropHelper class.

objToDrag: The object to drag.") (DisplayText . "DragDropHelper(string sourceId, object source, object objToDrag, object dragHandler, bool isControlPressed)") (RequiredNamespaceImport) (MethodHeader . "DragDropHelper(string sourceId, object source, object objToDrag, object dragHandler, bool isControlPressed)") (ReturnType) (Snippet . "DragDropHelper(${1:string sourceId}, ${2:object source}, ${3:object objToDrag}, ${4:object dragHandler}, ${5:bool isControlPressed})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DragHandler") (Description . "Implements a model for a drag helper. 
") (DisplayText . "DragHandler") (RequiredNamespaceImport) (MethodHeader . "DragHandler") (ReturnType) (Snippet . "DragHandler$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DragHandler") (Description . "Initializes a new instance of the Fls.Controls.Forms.DevExpressBase.DragHandler class. 

source: The source control. 
getAllowedDragEffects: A delegate which returns the allowed drag effects. 
getDragObject: A delegate which returns the drag object. 
handleDragDropEffects: A delegate which handles the drag results. ") (DisplayText . "DragHandler(Control source, Func<object, DragDropEffects> getAllowedDragEffects, Func<object, MouseEventArgs, object> getDragObject, Action<object, DragDropEffects> handleDragDropEffects)") (RequiredNamespaceImport) (MethodHeader . "DragHandler(Control source, Func<object, DragDropEffects> getAllowedDragEffects, Func<object, MouseEventArgs, object> getDragObject, Action<object, DragDropEffects> handleDragDropEffects)") (ReturnType) (Snippet . "DragHandler(${1:Control source}, ${2:Func<object, DragDropEffects> getAllowedDragEffects}, ${3:Func<object, MouseEventArgs, object> getDragObject}, ${4:Action<object, DragDropEffects> handleDragDropEffects})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DragHandlerEventArgs") (Description . "Implements a model for drag event arguments.
") (DisplayText . "DragHandlerEventArgs") (RequiredNamespaceImport) (MethodHeader . "DragHandlerEventArgs") (ReturnType) (Snippet . "DragHandlerEventArgs$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DragHandlerEventArgs") (Description . "Initializes a new instance of the Fls.Controls.Forms.DevExpressBase.DragHandlerEventArgs class.

state: The drag state.") (DisplayText . "DragHandlerEventArgs(DragState state)") (RequiredNamespaceImport) (MethodHeader . "DragHandlerEventArgs(DragState state)") (ReturnType) (Snippet . "DragHandlerEventArgs(${1:DragState state})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DragHelperEventArgs") (Description . "Implements a model for 
") (DisplayText . "DragHelperEventArgs") (RequiredNamespaceImport) (MethodHeader . "DragHelperEventArgs") (ReturnType) (Snippet . "DragHelperEventArgs$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DragHelperEventArgs") (Description . "") (DisplayText . "DragHelperEventArgs()") (RequiredNamespaceImport) (MethodHeader . "DragHelperEventArgs()") (ReturnType) (Snippet . "DragHelperEventArgs()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DragHelperEventArgs") (Description . "") (DisplayText . "DragHelperEventArgs(DragDropHelper helper)") (RequiredNamespaceImport) (MethodHeader . "DragHelperEventArgs(DragDropHelper helper)") (ReturnType) (Snippet . "DragHelperEventArgs(${1:DragDropHelper helper})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DragState") (Description . "The different states with in a drag and drop. 
") (DisplayText . "DragState") (RequiredNamespaceImport) (MethodHeader . "DragState") (ReturnType) (Snippet . "DragState$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DriverManagementViewModel") (Description . "") (DisplayText . "DriverManagementViewModel") (RequiredNamespaceImport) (MethodHeader . "DriverManagementViewModel") (ReturnType) (Snippet . "DriverManagementViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DriverManagementViewModel") (Description . "") (DisplayText . "DriverManagementViewModel()") (RequiredNamespaceImport) (MethodHeader . "DriverManagementViewModel()") (ReturnType) (Snippet . "DriverManagementViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DropHandler") (Description . "Implements a model for handling the dropping of an item.
") (DisplayText . "DropHandler") (RequiredNamespaceImport) (MethodHeader . "DropHandler") (ReturnType) (Snippet . "DropHandler$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DropHandler") (Description . "Initializes a new instance of the Fls.Controls.Forms.DevExpressBase.DropHandler class.
") (DisplayText . "DropHandler()") (RequiredNamespaceImport) (MethodHeader . "DropHandler()") (ReturnType) (Snippet . "DropHandler()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DropHandler") (Description . "Initializes a new instance of the Fls.Controls.Forms.DevExpressBase.DropHandler class.

control: The control which allows droppings
getAllowedEffects: The allowed effects handler.
allowedTypes: The allowed types.
dropAction: The drop action handler.") (DisplayText . "DropHandler(Control control, Func<object, VectorBase, DragDropEffects> getAllowedEffects, Type[] allowedTypes, Action<object, DragDropEffects, VectorBase, DragDropHelper> dropAction)") (RequiredNamespaceImport) (MethodHeader . "DropHandler(Control control, Func<object, VectorBase, DragDropEffects> getAllowedEffects, Type[] allowedTypes, Action<object, DragDropEffects, VectorBase, DragDropHelper> dropAction)") (ReturnType) (Snippet . "DropHandler(${1:Control control}, ${2:Func<object, VectorBase, DragDropEffects> getAllowedEffects}, ${3:Type[] allowedTypes}, ${4:Action<object, DragDropEffects, VectorBase, DragDropHelper> dropAction})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DSearchType") (Description . "") (DisplayText . "DSearchType") (RequiredNamespaceImport) (MethodHeader . "DSearchType") (ReturnType) (Snippet . "DSearchType$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DState") (Description . "") (DisplayText . "DState") (RequiredNamespaceImport) (MethodHeader . "DState") (ReturnType) (Snippet . "DState$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DuplicateWaitObjectException") (Description . "") (DisplayText . "DuplicateWaitObjectException") (RequiredNamespaceImport) (MethodHeader . "DuplicateWaitObjectException") (ReturnType) (Snippet . "DuplicateWaitObjectException$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DuplicateWaitObjectException") (Description . "") (DisplayText . "DuplicateWaitObjectException()") (RequiredNamespaceImport) (MethodHeader . "DuplicateWaitObjectException()") (ReturnType) (Snippet . "DuplicateWaitObjectException()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DuplicateWaitObjectException") (Description . "") (DisplayText . "DuplicateWaitObjectException(SerializationInfo info, StreamingContext context)") (RequiredNamespaceImport) (MethodHeader . "DuplicateWaitObjectException(SerializationInfo info, StreamingContext context)") (ReturnType) (Snippet . "DuplicateWaitObjectException(${1:SerializationInfo info}, ${2:StreamingContext context})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DuplicateWaitObjectException") (Description . "") (DisplayText . "DuplicateWaitObjectException(string message, Exception innerException)") (RequiredNamespaceImport) (MethodHeader . "DuplicateWaitObjectException(string message, Exception innerException)") (ReturnType) (Snippet . "DuplicateWaitObjectException(${1:string message}, ${2:Exception innerException})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DuplicateWaitObjectException") (Description . "") (DisplayText . "DuplicateWaitObjectException(string parameterName)") (RequiredNamespaceImport) (MethodHeader . "DuplicateWaitObjectException(string parameterName)") (ReturnType) (Snippet . "DuplicateWaitObjectException(${1:string parameterName})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DuplicateWaitObjectException") (Description . "") (DisplayText . "DuplicateWaitObjectException(string parameterName, string message)") (RequiredNamespaceImport) (MethodHeader . "DuplicateWaitObjectException(string parameterName, string message)") (ReturnType) (Snippet . "DuplicateWaitObjectException(${1:string parameterName}, ${2:string message})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DurationView") (Description . "") (DisplayText . "DurationView") (RequiredNamespaceImport) (MethodHeader . "DurationView") (ReturnType) (Snippet . "DurationView$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DurationView") (Description . "") (DisplayText . "DurationView(DurationViewModel viewModel)") (RequiredNamespaceImport) (MethodHeader . "DurationView(DurationViewModel viewModel)") (ReturnType) (Snippet . "DurationView(${1:DurationViewModel viewModel})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DurationViewModel") (Description . "TODO: Update summary.
") (DisplayText . "DurationViewModel") (RequiredNamespaceImport) (MethodHeader . "DurationViewModel") (ReturnType) (Snippet . "DurationViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DurationViewModel") (Description . "") (DisplayText . "DurationViewModel()") (RequiredNamespaceImport) (MethodHeader . "DurationViewModel()") (ReturnType) (Snippet . "DurationViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DXDescriptionAttribute") (Description . "") (DisplayText . "DXDescriptionAttribute") (RequiredNamespaceImport) (MethodHeader . "DXDescriptionAttribute") (ReturnType) (Snippet . "DXDescriptionAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DXDescriptionAttribute") (Description . "") (DisplayText . "DXDescriptionAttribute()") (RequiredNamespaceImport) (MethodHeader . "DXDescriptionAttribute()") (ReturnType) (Snippet . "DXDescriptionAttribute()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DXDescriptionAttribute") (Description . "") (DisplayText . "DXDescriptionAttribute(string description)") (RequiredNamespaceImport) (MethodHeader . "DXDescriptionAttribute(string description)") (ReturnType) (Snippet . "DXDescriptionAttribute(${1:string description})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DXDisplayNameAttribute") (Description . "") (DisplayText . "DXDisplayNameAttribute") (RequiredNamespaceImport) (MethodHeader . "DXDisplayNameAttribute") (ReturnType) (Snippet . "DXDisplayNameAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DXDisplayNameAttribute") (Description . "") (DisplayText . "DXDisplayNameAttribute(Type resourceFinder, string resourceFile, string resourceName)") (RequiredNamespaceImport) (MethodHeader . "DXDisplayNameAttribute(Type resourceFinder, string resourceFile, string resourceName)") (ReturnType) (Snippet . "DXDisplayNameAttribute(${1:Type resourceFinder}, ${2:string resourceFile}, ${3:string resourceName})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DXDisplayNameAttribute") (Description . "") (DisplayText . "DXDisplayNameAttribute(Type resourceFinder, string resourceFile, string resourceName, string defaultDisplayName)") (RequiredNamespaceImport) (MethodHeader . "DXDisplayNameAttribute(Type resourceFinder, string resourceFile, string resourceName, string defaultDisplayName)") (ReturnType) (Snippet . "DXDisplayNameAttribute(${1:Type resourceFinder}, ${2:string resourceFile}, ${3:string resourceName}, ${4:string defaultDisplayName})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DXDisplayNameAttribute") (Description . "") (DisplayText . "DXDisplayNameAttribute(Type resourceFinder, string resourceName)") (RequiredNamespaceImport) (MethodHeader . "DXDisplayNameAttribute(Type resourceFinder, string resourceName)") (ReturnType) (Snippet . "DXDisplayNameAttribute(${1:Type resourceFinder}, ${2:string resourceName})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DXDisplayNameIgnoreAttribute") (Description . "") (DisplayText . "DXDisplayNameIgnoreAttribute") (RequiredNamespaceImport) (MethodHeader . "DXDisplayNameIgnoreAttribute") (ReturnType) (Snippet . "DXDisplayNameIgnoreAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DXDisplayNameIgnoreAttribute") (Description . "") (DisplayText . "DXDisplayNameIgnoreAttribute()") (RequiredNamespaceImport) (MethodHeader . "DXDisplayNameIgnoreAttribute()") (ReturnType) (Snippet . "DXDisplayNameIgnoreAttribute()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DXHelpExcludeAttribute") (Description . "") (DisplayText . "DXHelpExcludeAttribute") (RequiredNamespaceImport) (MethodHeader . "DXHelpExcludeAttribute") (ReturnType) (Snippet . "DXHelpExcludeAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DXHelpExcludeAttribute") (Description . "") (DisplayText . "DXHelpExcludeAttribute(bool exclude)") (RequiredNamespaceImport) (MethodHeader . "DXHelpExcludeAttribute(bool exclude)") (ReturnType) (Snippet . "DXHelpExcludeAttribute(${1:bool exclude})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DXToolboxItemAttribute") (Description . "") (DisplayText . "DXToolboxItemAttribute") (RequiredNamespaceImport) (MethodHeader . "DXToolboxItemAttribute") (ReturnType) (Snippet . "DXToolboxItemAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DXToolboxItemAttribute") (Description . "") (DisplayText . "DXToolboxItemAttribute(bool defaultType)") (RequiredNamespaceImport) (MethodHeader . "DXToolboxItemAttribute(bool defaultType)") (ReturnType) (Snippet . "DXToolboxItemAttribute(${1:bool defaultType})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DXToolboxItemAttribute") (Description . "") (DisplayText . "DXToolboxItemAttribute(DXToolboxItemKind kind)") (RequiredNamespaceImport) (MethodHeader . "DXToolboxItemAttribute(DXToolboxItemKind kind)") (ReturnType) (Snippet . "DXToolboxItemAttribute(${1:DXToolboxItemKind kind})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DXToolboxItemAttribute") (Description . "") (DisplayText . "DXToolboxItemAttribute(DXToolboxItemKind kind, string toolboxTypeName)") (RequiredNamespaceImport) (MethodHeader . "DXToolboxItemAttribute(DXToolboxItemKind kind, string toolboxTypeName)") (ReturnType) (Snippet . "DXToolboxItemAttribute(${1:DXToolboxItemKind kind}, ${2:string toolboxTypeName})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DXWebToolboxItemAttribute") (Description . "") (DisplayText . "DXWebToolboxItemAttribute") (RequiredNamespaceImport) (MethodHeader . "DXWebToolboxItemAttribute") (ReturnType) (Snippet . "DXWebToolboxItemAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DXWebToolboxItemAttribute") (Description . "") (DisplayText . "DXWebToolboxItemAttribute(bool defaultType)") (RequiredNamespaceImport) (MethodHeader . "DXWebToolboxItemAttribute(bool defaultType)") (ReturnType) (Snippet . "DXWebToolboxItemAttribute(${1:bool defaultType})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DXWebToolboxItemAttribute") (Description . "") (DisplayText . "DXWebToolboxItemAttribute(DXToolboxItemKind kind)") (RequiredNamespaceImport) (MethodHeader . "DXWebToolboxItemAttribute(DXToolboxItemKind kind)") (ReturnType) (Snippet . "DXWebToolboxItemAttribute(${1:DXToolboxItemKind kind})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "dynamic") (Description) (DisplayText . "dynamic") (RequiredNamespaceImport) (MethodHeader) (ReturnType) (Snippet . "dynamic") (Kind . "Keyword") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicChangeModel") (Description . "Implements a model for 
") (DisplayText . "DynamicChangeModel") (RequiredNamespaceImport) (MethodHeader . "DynamicChangeModel") (ReturnType) (Snippet . "DynamicChangeModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicChangeModel") (Description . "") (DisplayText . "DynamicChangeModel()") (RequiredNamespaceImport) (MethodHeader . "DynamicChangeModel()") (ReturnType) (Snippet . "DynamicChangeModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicChangeViewModel") (Description . "Implements a model for Appointments overview. 
") (DisplayText . "DynamicChangeViewModel") (RequiredNamespaceImport) (MethodHeader . "DynamicChangeViewModel") (ReturnType) (Snippet . "DynamicChangeViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicChangeViewModel") (Description . "Initializes a new instance of the Fls.VisiTourClient.ViewModel.AppointmentSchedulerViewModel class. 
") (DisplayText . "DynamicChangeViewModel()") (RequiredNamespaceImport) (MethodHeader . "DynamicChangeViewModel()") (ReturnType) (Snippet . "DynamicChangeViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicData") (Description . "") (DisplayText . "DynamicData") (RequiredNamespaceImport) (MethodHeader . "DynamicData") (ReturnType) (Snippet . "DynamicData$0") (Kind . "Namespace") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicDataFactory") (Description . "") (DisplayText . "DynamicDataFactory") (RequiredNamespaceImport) (MethodHeader . "DynamicDataFactory") (ReturnType) (Snippet . "DynamicDataFactory$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicDataFactory") (Description . "") (DisplayText . "DynamicDataFactory()") (RequiredNamespaceImport) (MethodHeader . "DynamicDataFactory()") (ReturnType) (Snippet . "DynamicDataFactory()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicDataInputViewModel") (Description . "Implements only methods to create view models form dynamic data.
") (DisplayText . "DynamicDataInputViewModel") (RequiredNamespaceImport) (MethodHeader . "DynamicDataInputViewModel") (ReturnType) (Snippet . "DynamicDataInputViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicFunction") (Description . "Implements a model for 
") (DisplayText . "DynamicFunction") (RequiredNamespaceImport) (MethodHeader . "DynamicFunction") (ReturnType) (Snippet . "DynamicFunction$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicFunction") (Description . "") (DisplayText . "DynamicFunction()") (RequiredNamespaceImport) (MethodHeader . "DynamicFunction()") (ReturnType) (Snippet . "DynamicFunction()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicTreeTableView") (Description . "Implements a forms user control based on a view model. This control 
") (DisplayText . "DynamicTreeTableView") (RequiredNamespaceImport) (MethodHeader . "DynamicTreeTableView") (ReturnType) (Snippet . "DynamicTreeTableView$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicTreeTableView") (Description . "Initializes a new instance of the FormatedTableView class. 
") (DisplayText . "DynamicTreeTableView()") (RequiredNamespaceImport) (MethodHeader . "DynamicTreeTableView()") (ReturnType) (Snippet . "DynamicTreeTableView()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicTreeTableView") (Description . "Initializes a new instance of the FormatedTableView class. 

viewModel: The used view model ") (DisplayText . "DynamicTreeTableView(IDataTableSourceViewModel viewModel)") (RequiredNamespaceImport) (MethodHeader . "DynamicTreeTableView(IDataTableSourceViewModel viewModel)") (ReturnType) (Snippet . "DynamicTreeTableView(${1:IDataTableSourceViewModel viewModel})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicXmlHeader") (Description . "
Remarks:
") (DisplayText . "DynamicXmlHeader") (RequiredNamespaceImport) (MethodHeader . "DynamicXmlHeader") (ReturnType) (Snippet . "DynamicXmlHeader$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicXmlHeader") (Description . "") (DisplayText . "DynamicXmlHeader()") (RequiredNamespaceImport) (MethodHeader . "DynamicXmlHeader()") (ReturnType) (Snippet . "DynamicXmlHeader()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicXmlRow") (Description . "") (DisplayText . "DynamicXmlRow") (RequiredNamespaceImport) (MethodHeader . "DynamicXmlRow") (ReturnType) (Snippet . "DynamicXmlRow$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicXmlRow") (Description . "") (DisplayText . "DynamicXmlRow()") (RequiredNamespaceImport) (MethodHeader . "DynamicXmlRow()") (ReturnType) (Snippet . "DynamicXmlRow()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicXmlRow") (Description . "Initilize a row with a given start capacity of cells.

count: ") (DisplayText . "DynamicXmlRow(int count)") (RequiredNamespaceImport) (MethodHeader . "DynamicXmlRow(int count)") (ReturnType) (Snippet . "DynamicXmlRow(${1:int count})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicXmlRowData") (Description . "
Remarks:
") (DisplayText . "DynamicXmlRowData") (RequiredNamespaceImport) (MethodHeader . "DynamicXmlRowData") (ReturnType) (Snippet . "DynamicXmlRowData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicXmlRowData") (Description . "") (DisplayText . "DynamicXmlRowData()") (RequiredNamespaceImport) (MethodHeader . "DynamicXmlRowData()") (ReturnType) (Snippet . "DynamicXmlRowData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicXmlTable") (Description . "
Remarks:
") (DisplayText . "DynamicXmlTable") (RequiredNamespaceImport) (MethodHeader . "DynamicXmlTable") (ReturnType) (Snippet . "DynamicXmlTable$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicXmlTable") (Description . "") (DisplayText . "DynamicXmlTable()") (RequiredNamespaceImport) (MethodHeader . "DynamicXmlTable()") (ReturnType) (Snippet . "DynamicXmlTable()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DynmicDataAttribute") (Description . "Implements an attribute for a subversion version.
") (DisplayText . "DynmicDataAttribute") (RequiredNamespaceImport) (MethodHeader . "DynmicDataAttribute") (ReturnType) (Snippet . "DynmicDataAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DynmicDataAttribute") (Description . "Initializes a new instance of the Fls.Base.SvnRevisionAttribute class.

svnRevision: The subversion version.") (DisplayText . "DynmicDataAttribute(string name)") (RequiredNamespaceImport) (MethodHeader . "DynmicDataAttribute(string name)") (ReturnType) (Snippet . "DynmicDataAttribute(${1:string name})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "EncryptedData") (Description . "") (DisplayText . "EncryptedData") (RequiredNamespaceImport) (MethodHeader . "EncryptedData") (ReturnType) (Snippet . "EncryptedData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "EncryptedData") (Description . "") (DisplayText . "EncryptedData()") (RequiredNamespaceImport) (MethodHeader . "EncryptedData()") (ReturnType) (Snippet . "EncryptedData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "EncryptedData") (Description . "") (DisplayText . "EncryptedData(byte[] data, byte[] vector)") (RequiredNamespaceImport) (MethodHeader . "EncryptedData(byte[] data, byte[] vector)") (ReturnType) (Snippet . "EncryptedData(${1:byte[] data}, ${2:byte[] vector})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "EntityUpdateHandler") (Description . "") (DisplayText . "EntityUpdateHandler") (RequiredNamespaceImport) (MethodHeader . "EntityUpdateHandler") (ReturnType) (Snippet . "EntityUpdateHandler$0") (Kind . "Delegate") (IsSuggestionMode . :json-false)) ((CompletionText . "EntityUpdateHandler") (Description . "") (DisplayText . "EntityUpdateHandler(object @object, IntPtr method)") (RequiredNamespaceImport) (MethodHeader . "EntityUpdateHandler(object @object, IntPtr method)") (ReturnType) (Snippet . "EntityUpdateHandler(${1:object @object}, ${2:IntPtr method})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "EntityUpdateType") (Description . "") (DisplayText . "EntityUpdateType") (RequiredNamespaceImport) (MethodHeader . "EntityUpdateType") (ReturnType) (Snippet . "EntityUpdateType$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "EscalatedActivitiesFormViewModel") (Description . "TODO: Update summary.
") (DisplayText . "EscalatedActivitiesFormViewModel") (RequiredNamespaceImport) (MethodHeader . "EscalatedActivitiesFormViewModel") (ReturnType) (Snippet . "EscalatedActivitiesFormViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "EscalatedActivitiesFormViewModel") (Description . "") (DisplayText . "EscalatedActivitiesFormViewModel()") (RequiredNamespaceImport) (MethodHeader . "EscalatedActivitiesFormViewModel()") (ReturnType) (Snippet . "EscalatedActivitiesFormViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "EscalatedActivitiesMetaData") (Description . "") (DisplayText . "EscalatedActivitiesMetaData") (RequiredNamespaceImport) (MethodHeader . "EscalatedActivitiesMetaData") (ReturnType) (Snippet . "EscalatedActivitiesMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "EscalatedActivitiesMetaData") (Description . "") (DisplayText . "EscalatedActivitiesMetaData()") (RequiredNamespaceImport) (MethodHeader . "EscalatedActivitiesMetaData()") (ReturnType) (Snippet . "EscalatedActivitiesMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ExpandableObjectConverter") (Description . "") (DisplayText . "ExpandableObjectConverter") (RequiredNamespaceImport) (MethodHeader . "ExpandableObjectConverter") (ReturnType) (Snippet . "ExpandableObjectConverter$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ExpandableObjectConverter") (Description . "") (DisplayText . "ExpandableObjectConverter()") (RequiredNamespaceImport) (MethodHeader . "ExpandableObjectConverter()") (ReturnType) (Snippet . "ExpandableObjectConverter()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ExtendableDataTable") (Description . "") (DisplayText . "ExtendableDataTable<T>") (RequiredNamespaceImport) (MethodHeader . "ExtendableDataTable<T>") (ReturnType) (Snippet . "ExtendableDataTable<${1:T}>$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ExtendableDataTable") (Description . "") (DisplayText . "ExtendableDataTable<T>()") (RequiredNamespaceImport) (MethodHeader . "ExtendableDataTable<T>()") (ReturnType) (Snippet . "ExtendableDataTable<${1:T}>()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ExtendableDataTable") (Description . "") (DisplayText . "ExtendableDataTable<T>(SerializationInfo info, StreamingContext context)") (RequiredNamespaceImport) (MethodHeader . "ExtendableDataTable<T>(SerializationInfo info, StreamingContext context)") (ReturnType) (Snippet . "ExtendableDataTable<${1:T}>(${2:SerializationInfo info}, ${3:StreamingContext context})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ExtendableDataTable") (Description . "") (DisplayText . "ExtendableDataTable<T>(string tableName)") (RequiredNamespaceImport) (MethodHeader . "ExtendableDataTable<T>(string tableName)") (ReturnType) (Snippet . "ExtendableDataTable<${1:T}>(${2:string tableName})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ExtendableDataTable") (Description . "") (DisplayText . "ExtendableDataTable<T>(string tableName, string tableNamespace)") (RequiredNamespaceImport) (MethodHeader . "ExtendableDataTable<T>(string tableName, string tableNamespace)") (ReturnType) (Snippet . "ExtendableDataTable<${1:T}>(${2:string tableName}, ${3:string tableNamespace})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "FieldAccessException") (Description . "") (DisplayText . "FieldAccessException") (RequiredNamespaceImport) (MethodHeader . "FieldAccessException") (ReturnType) (Snippet . "FieldAccessException$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "FieldAccessException") (Description . "") (DisplayText . "FieldAccessException()") (RequiredNamespaceImport) (MethodHeader . "FieldAccessException()") (ReturnType) (Snippet . "FieldAccessException()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "FieldAccessException") (Description . "") (DisplayText . "FieldAccessException(SerializationInfo info, StreamingContext context)") (RequiredNamespaceImport) (MethodHeader . "FieldAccessException(SerializationInfo info, StreamingContext context)") (ReturnType) (Snippet . "FieldAccessException(${1:SerializationInfo info}, ${2:StreamingContext context})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "FieldAccessException") (Description . "") (DisplayText . "FieldAccessException(string message)") (RequiredNamespaceImport) (MethodHeader . "FieldAccessException(string message)") (ReturnType) (Snippet . "FieldAccessException(${1:string message})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "FieldAccessException") (Description . "") (DisplayText . "FieldAccessException(string message, Exception inner)") (RequiredNamespaceImport) (MethodHeader . "FieldAccessException(string message, Exception inner)") (ReturnType) (Snippet . "FieldAccessException(${1:string message}, ${2:Exception inner})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "FieldAttributes") (Description . "") (DisplayText . "FieldAttributes") (RequiredNamespaceImport) (MethodHeader . "FieldAttributes") (ReturnType) (Snippet . "FieldAttributes$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "FLSDataObjectsBase") (Description . "") (DisplayText . "FLSDataObjectsBase") (RequiredNamespaceImport) (MethodHeader . "FLSDataObjectsBase") (ReturnType) (Snippet . "FLSDataObjectsBase$0") (Kind . "Namespace") (IsSuggestionMode . :json-false)) ((CompletionText . "FLSDateEdit") (Description . "TODO: Update summary.
") (DisplayText . "FLSDateEdit") (RequiredNamespaceImport) (MethodHeader . "FLSDateEdit") (ReturnType) (Snippet . "FLSDateEdit$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "FLSDateEdit") (Description . "") (DisplayText . "FLSDateEdit()") (RequiredNamespaceImport) (MethodHeader . "FLSDateEdit()") (ReturnType) (Snippet . "FLSDateEdit()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "FormatControlMetaData") (Description . "") (DisplayText . "FormatControlMetaData") (RequiredNamespaceImport) (MethodHeader . "FormatControlMetaData") (ReturnType) (Snippet . "FormatControlMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "FormatControlMetaData") (Description . "") (DisplayText . "FormatControlMetaData()") (RequiredNamespaceImport) (MethodHeader . "FormatControlMetaData()") (ReturnType) (Snippet . "FormatControlMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "GlobalFiltersChangedArgs") (Description . "") (DisplayText . "GlobalFiltersChangedArgs") (RequiredNamespaceImport) (MethodHeader . "GlobalFiltersChangedArgs") (ReturnType) (Snippet . "GlobalFiltersChangedArgs$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "GlobalFiltersChangedArgs") (Description . "") (DisplayText . "GlobalFiltersChangedArgs(GlobalFilters globalFilter)") (RequiredNamespaceImport) (MethodHeader . "GlobalFiltersChangedArgs(GlobalFilters globalFilter)") (ReturnType) (Snippet . "GlobalFiltersChangedArgs(${1:GlobalFilters globalFilter})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "GlobalFilterSourceChangedArgs") (Description . "") (DisplayText . "GlobalFilterSourceChangedArgs") (RequiredNamespaceImport) (MethodHeader . "GlobalFilterSourceChangedArgs") (ReturnType) (Snippet . "GlobalFilterSourceChangedArgs$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "GlobalFilterSourceChangedArgs") (Description . "") (DisplayText . "GlobalFilterSourceChangedArgs()") (RequiredNamespaceImport) (MethodHeader . "GlobalFilterSourceChangedArgs()") (ReturnType) (Snippet . "GlobalFilterSourceChangedArgs()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "IAuthentificateData") (Description . "") (DisplayText . "IAuthentificateData") (RequiredNamespaceImport) (MethodHeader . "IAuthentificateData") (ReturnType) (Snippet . "IAuthentificateData$0") (Kind . "Interface") (IsSuggestionMode . :json-false)) ((CompletionText . "IDataErrorInfo") (Description . "") (DisplayText . "IDataErrorInfo") (RequiredNamespaceImport) (MethodHeader . "IDataErrorInfo") (ReturnType) (Snippet . "IDataErrorInfo$0") (Kind . "Interface") (IsSuggestionMode . :json-false)) ((CompletionText . "IDataSourceProvider") (Description . "") (DisplayText . "IDataSourceProvider") (RequiredNamespaceImport) (MethodHeader . "IDataSourceProvider") (ReturnType) (Snippet . "IDataSourceProvider$0") (Kind . "Interface") (IsSuggestionMode . :json-false)) ((CompletionText . "IDataTableSourceViewModel") (Description . "") (DisplayText . "IDataTableSourceViewModel") (RequiredNamespaceImport) (MethodHeader . "IDataTableSourceViewModel") (ReturnType) (Snippet . "IDataTableSourceViewModel$0") (Kind . "Interface") (IsSuggestionMode . :json-false)) ((CompletionText . "IDateTimeInputViewModel") (Description . "Implements an interface for date time object which may use only date or only time or both or nothing.
") (DisplayText . "IDateTimeInputViewModel") (RequiredNamespaceImport) (MethodHeader . "IDateTimeInputViewModel") (ReturnType) (Snippet . "IDateTimeInputViewModel$0") (Kind . "Interface") (IsSuggestionMode . :json-false)) ((CompletionText . "IDEntityDataBase") (Description . "") (DisplayText . "IDEntityDataBase") (RequiredNamespaceImport) (MethodHeader . "IDEntityDataBase") (ReturnType) (Snippet . "IDEntityDataBase$0") (Kind . "Interface") (IsSuggestionMode . :json-false)) ((CompletionText . "IEntityValidation") (Description . "Interface for DODataSource validators
") (DisplayText . "IEntityValidation") (RequiredNamespaceImport) (MethodHeader . "IEntityValidation") (ReturnType) (Snippet . "IEntityValidation$0") (Kind . "Interface") (IsSuggestionMode . :json-false)) ((CompletionText . "ILookUpDataGetter") (Description . "An interface for look up data getter.
") (DisplayText . "ILookUpDataGetter") (RequiredNamespaceImport) (MethodHeader . "ILookUpDataGetter") (ReturnType) (Snippet . "ILookUpDataGetter$0") (Kind . "Interface") (IsSuggestionMode . :json-false)) ((CompletionText . "ILookUpDataManager") (Description . "") (DisplayText . "ILookUpDataManager") (RequiredNamespaceImport) (MethodHeader . "ILookUpDataManager") (ReturnType) (Snippet . "ILookUpDataManager$0") (Kind . "Interface") (IsSuggestionMode . :json-false)) ((CompletionText . "IMaxMinDateTime") (Description . "Implements an interface for minimum and maximum date time classes.
") (DisplayText . "IMaxMinDateTime") (RequiredNamespaceImport) (MethodHeader . "IMaxMinDateTime") (ReturnType) (Snippet . "IMaxMinDateTime$0") (Kind . "Interface") (IsSuggestionMode . :json-false)) ((CompletionText . "INotifyDataErrorInfo") (Description . "") (DisplayText . "INotifyDataErrorInfo") (RequiredNamespaceImport) (MethodHeader . "INotifyDataErrorInfo") (ReturnType) (Snippet . "INotifyDataErrorInfo$0") (Kind . "Interface") (IsSuggestionMode . :json-false)) ((CompletionText . "InvalidAsynchronousStateException") (Description . "") (DisplayText . "InvalidAsynchronousStateException") (RequiredNamespaceImport) (MethodHeader . "InvalidAsynchronousStateException") (ReturnType) (Snippet . "InvalidAsynchronousStateException$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "InvalidAsynchronousStateException") (Description . "") (DisplayText . "InvalidAsynchronousStateException()") (RequiredNamespaceImport) (MethodHeader . "InvalidAsynchronousStateException()") (ReturnType) (Snippet . "InvalidAsynchronousStateException()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "InvalidAsynchronousStateException") (Description . "") (DisplayText . "InvalidAsynchronousStateException(SerializationInfo info, StreamingContext context)") (RequiredNamespaceImport) (MethodHeader . "InvalidAsynchronousStateException(SerializationInfo info, StreamingContext context)") (ReturnType) (Snippet . "InvalidAsynchronousStateException(${1:SerializationInfo info}, ${2:StreamingContext context})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "InvalidAsynchronousStateException") (Description . "") (DisplayText . "InvalidAsynchronousStateException(string message)") (RequiredNamespaceImport) (MethodHeader . "InvalidAsynchronousStateException(string message)") (ReturnType) (Snippet . "InvalidAsynchronousStateException(${1:string message})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "InvalidAsynchronousStateException") (Description . "") (DisplayText . "InvalidAsynchronousStateException(string message, Exception innerException)") (RequiredNamespaceImport) (MethodHeader . "InvalidAsynchronousStateException(string message, Exception innerException)") (ReturnType) (Snippet . "InvalidAsynchronousStateException(${1:string message}, ${2:Exception innerException})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "InvalidDataException") (Description . "") (DisplayText . "InvalidDataException") (RequiredNamespaceImport) (MethodHeader . "InvalidDataException") (ReturnType) (Snippet . "InvalidDataException$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "InvalidDataException") (Description . "") (DisplayText . "InvalidDataException()") (RequiredNamespaceImport) (MethodHeader . "InvalidDataException()") (ReturnType) (Snippet . "InvalidDataException()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "InvalidDataException") (Description . "") (DisplayText . "InvalidDataException(string message)") (RequiredNamespaceImport) (MethodHeader . "InvalidDataException(string message)") (ReturnType) (Snippet . "InvalidDataException(${1:string message})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "InvalidDataException") (Description . "") (DisplayText . "InvalidDataException(string message, Exception innerException)") (RequiredNamespaceImport) (MethodHeader . "InvalidDataException(string message, Exception innerException)") (ReturnType) (Snippet . "InvalidDataException(${1:string message}, ${2:Exception innerException})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "IProvideToday") (Description . "") (DisplayText . "IProvideToday") (RequiredNamespaceImport) (MethodHeader . "IProvideToday") (ReturnType) (Snippet . "IProvideToday$0") (Kind . "Interface") (IsSuggestionMode . :json-false)) ((CompletionText . "ISearchLookUpData") (Description . "") (DisplayText . "ISearchLookUpData") (RequiredNamespaceImport) (MethodHeader . "ISearchLookUpData") (ReturnType) (Snippet . "ISearchLookUpData$0") (Kind . "Interface") (IsSuggestionMode . :json-false)) ((CompletionText . "ITempDataModel") (Description . "") (DisplayText . "ITempDataModel") (RequiredNamespaceImport) (MethodHeader . "ITempDataModel") (ReturnType) (Snippet . "ITempDataModel$0") (Kind . "Interface") (IsSuggestionMode . :json-false)) ((CompletionText . "IValidatable") (Description . "Implements an interface for 
") (DisplayText . "IValidatable") (RequiredNamespaceImport) (MethodHeader . "IValidatable") (ReturnType) (Snippet . "IValidatable$0") (Kind . "Interface") (IsSuggestionMode . :json-false)) ((CompletionText . "IValidatableValue") (Description . "Implements an interface for validating values.
The type of the valid value.") (DisplayText . "IValidatableValue<T>") (RequiredNamespaceImport) (MethodHeader . "IValidatableValue<T>") (ReturnType) (Snippet . "IValidatableValue<${1:T}>$0") (Kind . "Interface") (IsSuggestionMode . :json-false)) ((CompletionText . "IValidationRule") (Description . "Implements an interface for validation rules.
The type of the value which is validated with these rules.") (DisplayText . "IValidationRule<T>") (RequiredNamespaceImport) (MethodHeader . "IValidationRule<T>") (ReturnType) (Snippet . "IValidationRule<${1:T}>$0") (Kind . "Interface") (IsSuggestionMode . :json-false)) ((CompletionText . "LayoutDbData") (Description . "") (DisplayText . "LayoutDbData") (RequiredNamespaceImport) (MethodHeader . "LayoutDbData") (ReturnType) (Snippet . "LayoutDbData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "LayoutDbData") (Description . "") (DisplayText . "LayoutDbData(DOClientLayout data)") (RequiredNamespaceImport) (MethodHeader . "LayoutDbData(DOClientLayout data)") (ReturnType) (Snippet . "LayoutDbData(${1:DOClientLayout data})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "LayoutMetaData") (Description . "Implements a model for meta data of forms.
") (DisplayText . "LayoutMetaData") (RequiredNamespaceImport) (MethodHeader . "LayoutMetaData") (ReturnType) (Snippet . "LayoutMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "LayoutMetaData") (Description . "") (DisplayText . "LayoutMetaData()") (RequiredNamespaceImport) (MethodHeader . "LayoutMetaData()") (ReturnType) (Snippet . "LayoutMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "LdapStyleUriParser") (Description . "") (DisplayText . "LdapStyleUriParser") (RequiredNamespaceImport) (MethodHeader . "LdapStyleUriParser") (ReturnType) (Snippet . "LdapStyleUriParser$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "LdapStyleUriParser") (Description . "") (DisplayText . "LdapStyleUriParser()") (RequiredNamespaceImport) (MethodHeader . "LdapStyleUriParser()") (ReturnType) (Snippet . "LdapStyleUriParser()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "LinkMetaData") (Description . "Implements a model for link data.
") (DisplayText . "LinkMetaData") (RequiredNamespaceImport) (MethodHeader . "LinkMetaData") (ReturnType) (Snippet . "LinkMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "LinkMetaData") (Description . "Initializes a new instance of the Fls.VisiTourClient.MetaData.LinkMetaData class.
") (DisplayText . "LinkMetaData()") (RequiredNamespaceImport) (MethodHeader . "LinkMetaData()") (ReturnType) (Snippet . "LinkMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ListBindableAttribute") (Description . "") (DisplayText . "ListBindableAttribute") (RequiredNamespaceImport) (MethodHeader . "ListBindableAttribute") (ReturnType) (Snippet . "ListBindableAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ListBindableAttribute") (Description . "") (DisplayText . "ListBindableAttribute(BindableSupport flags)") (RequiredNamespaceImport) (MethodHeader . "ListBindableAttribute(BindableSupport flags)") (ReturnType) (Snippet . "ListBindableAttribute(${1:BindableSupport flags})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ListBindableAttribute") (Description . "") (DisplayText . "ListBindableAttribute(bool listBindable)") (RequiredNamespaceImport) (MethodHeader . "ListBindableAttribute(bool listBindable)") (ReturnType) (Snippet . "ListBindableAttribute(${1:bool listBindable})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "LocalDataStoreSlot") (Description . "") (DisplayText . "LocalDataStoreSlot") (RequiredNamespaceImport) (MethodHeader . "LocalDataStoreSlot") (ReturnType) (Snippet . "LocalDataStoreSlot$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "LocalizedNameCtrlMetaData") (Description . "") (DisplayText . "LocalizedNameCtrlMetaData") (RequiredNamespaceImport) (MethodHeader . "LocalizedNameCtrlMetaData") (ReturnType) (Snippet . "LocalizedNameCtrlMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "LocalizedNameCtrlMetaData") (Description . "") (DisplayText . "LocalizedNameCtrlMetaData()") (RequiredNamespaceImport) (MethodHeader . "LocalizedNameCtrlMetaData()") (ReturnType) (Snippet . "LocalizedNameCtrlMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "LoginData") (Description . "") (DisplayText . "LoginData") (RequiredNamespaceImport) (MethodHeader . "LoginData") (ReturnType) (Snippet . "LoginData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "LoginData") (Description . "") (DisplayText . "LoginData()") (RequiredNamespaceImport) (MethodHeader . "LoginData()") (ReturnType) (Snippet . "LoginData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "LookUpDataEntry") (Description . "") (DisplayText . "LookUpDataEntry") (RequiredNamespaceImport) (MethodHeader . "LookUpDataEntry") (ReturnType) (Snippet . "LookUpDataEntry$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "LookUpDataEntry") (Description . "") (DisplayText . "LookUpDataEntry()") (RequiredNamespaceImport) (MethodHeader . "LookUpDataEntry()") (ReturnType) (Snippet . "LookUpDataEntry()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "LookUpDataGetter") (Description . "Implements a lookup value getter.
") (DisplayText . "LookUpDataGetter") (RequiredNamespaceImport) (MethodHeader . "LookUpDataGetter") (ReturnType) (Snippet . "LookUpDataGetter$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "LookUpDataGetter") (Description . "Initializes a new instance of the Fls.VisiTour.Client3.RuntimeDataBuilder.LookUpDataGetter class. 

entityName: The entity name.
loadData: The action to fill up the lookup data.") (DisplayText . "LookUpDataGetter(string entityName, Action<string, ConcurrentDictionary<string, byte>, ConcurrentDictionary<IComparable, byte>, ConcurrentDictionary<IComparable, object>, ConcurrentDictionary<string, TempLookUpDataModel>> loadData)") (RequiredNamespaceImport) (MethodHeader . "LookUpDataGetter(string entityName, Action<string, ConcurrentDictionary<string, byte>, ConcurrentDictionary<IComparable, byte>, ConcurrentDictionary<IComparable, object>, ConcurrentDictionary<string, TempLookUpDataModel>> loadData)") (ReturnType) (Snippet . "LookUpDataGetter(${1:string entityName}, ${2:Action<string, ConcurrentDictionary<string, byte>, ConcurrentDictionary<IComparable, byte>, ConcurrentDictionary<IComparable, object>, ConcurrentDictionary<string, TempLookUpDataModel>> loadData})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "LookUpDataList") (Description . "Implements a look up data list. 
") (DisplayText . "LookUpDataList") (RequiredNamespaceImport) (MethodHeader . "LookUpDataList") (ReturnType) (Snippet . "LookUpDataList$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "LookUpDataList") (Description . "Initializes a new instance of the LookUpDataList class. 

repo: The data repository. 
loadDataAction: The load data method. ") (DisplayText . "LookUpDataList(IDOBaseRepository repo, Action<string, ConcurrentDictionary<string, byte>, ConcurrentDictionary<IComparable, byte>, ConcurrentDictionary<IComparable, object>, ConcurrentDictionary<string, TempLookUpDataModel>> loadDataAction)") (RequiredNamespaceImport) (MethodHeader . "LookUpDataList(IDOBaseRepository repo, Action<string, ConcurrentDictionary<string, byte>, ConcurrentDictionary<IComparable, byte>, ConcurrentDictionary<IComparable, object>, ConcurrentDictionary<string, TempLookUpDataModel>> loadDataAction)") (ReturnType) (Snippet . "LookUpDataList(${1:IDOBaseRepository repo}, ${2:Action<string, ConcurrentDictionary<string, byte>, ConcurrentDictionary<IComparable, byte>, ConcurrentDictionary<IComparable, object>, ConcurrentDictionary<string, TempLookUpDataModel>> loadDataAction})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "MasterDataLogViewModel") (Description . "") (DisplayText . "MasterDataLogViewModel") (RequiredNamespaceImport) (MethodHeader . "MasterDataLogViewModel") (ReturnType) (Snippet . "MasterDataLogViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "MasterDataLogViewModel") (Description . "") (DisplayText . "MasterDataLogViewModel()") (RequiredNamespaceImport) (MethodHeader . "MasterDataLogViewModel()") (ReturnType) (Snippet . "MasterDataLogViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "MetaData") (Description . "") (DisplayText . "MetaData") (RequiredNamespaceImport) (MethodHeader . "MetaData") (ReturnType) (Snippet . "MetaData$0") (Kind . "Namespace") (IsSuggestionMode . :json-false)) ((CompletionText . "MethodAccessException") (Description . "") (DisplayText . "MethodAccessException") (RequiredNamespaceImport) (MethodHeader . "MethodAccessException") (ReturnType) (Snippet . "MethodAccessException$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "MethodAccessException") (Description . "") (DisplayText . "MethodAccessException()") (RequiredNamespaceImport) (MethodHeader . "MethodAccessException()") (ReturnType) (Snippet . "MethodAccessException()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "MethodAccessException") (Description . "") (DisplayText . "MethodAccessException(SerializationInfo info, StreamingContext context)") (RequiredNamespaceImport) (MethodHeader . "MethodAccessException(SerializationInfo info, StreamingContext context)") (ReturnType) (Snippet . "MethodAccessException(${1:SerializationInfo info}, ${2:StreamingContext context})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "MethodAccessException") (Description . "") (DisplayText . "MethodAccessException(string message)") (RequiredNamespaceImport) (MethodHeader . "MethodAccessException(string message)") (ReturnType) (Snippet . "MethodAccessException(${1:string message})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "MethodAccessException") (Description . "") (DisplayText . "MethodAccessException(string message, Exception inner)") (RequiredNamespaceImport) (MethodHeader . "MethodAccessException(string message, Exception inner)") (ReturnType) (Snippet . "MethodAccessException(${1:string message}, ${2:Exception inner})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "MethodAttributes") (Description . "") (DisplayText . "MethodAttributes") (RequiredNamespaceImport) (MethodHeader . "MethodAttributes") (ReturnType) (Snippet . "MethodAttributes$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "MTAThreadAttribute") (Description . "") (DisplayText . "MTAThreadAttribute") (RequiredNamespaceImport) (MethodHeader . "MTAThreadAttribute") (ReturnType) (Snippet . "MTAThreadAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "MTAThreadAttribute") (Description . "") (DisplayText . "MTAThreadAttribute()") (RequiredNamespaceImport) (MethodHeader . "MTAThreadAttribute()") (ReturnType) (Snippet . "MTAThreadAttribute()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "NavBarGroupMetaData") (Description . "Implements a model for 
") (DisplayText . "NavBarGroupMetaData") (RequiredNamespaceImport) (MethodHeader . "NavBarGroupMetaData") (ReturnType) (Snippet . "NavBarGroupMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "NavBarGroupMetaData") (Description . "Initializes a new instance of the Fls.VisiTourClient.MetaData.NavBarGroupMetaData class.
") (DisplayText . "NavBarGroupMetaData(string name, string toolTip, string defaultEntry, bool isExpanded)") (RequiredNamespaceImport) (MethodHeader . "NavBarGroupMetaData(string name, string toolTip, string defaultEntry, bool isExpanded)") (ReturnType) (Snippet . "NavBarGroupMetaData(${1:string name}, ${2:string toolTip}, ${3:string defaultEntry}, ${4:bool isExpanded})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "NonSerializedAttribute") (Description . "") (DisplayText . "NonSerializedAttribute") (RequiredNamespaceImport) (MethodHeader . "NonSerializedAttribute") (ReturnType) (Snippet . "NonSerializedAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "NonSerializedAttribute") (Description . "") (DisplayText . "NonSerializedAttribute()") (RequiredNamespaceImport) (MethodHeader . "NonSerializedAttribute()") (ReturnType) (Snippet . "NonSerializedAttribute()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "NotifyCollectionChangedAction") (Description . "") (DisplayText . "NotifyCollectionChangedAction") (RequiredNamespaceImport) (MethodHeader . "NotifyCollectionChangedAction") (ReturnType) (Snippet . "NotifyCollectionChangedAction$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "ObjectDataCtrlMetaData") (Description . "") (DisplayText . "ObjectDataCtrlMetaData") (RequiredNamespaceImport) (MethodHeader . "ObjectDataCtrlMetaData") (ReturnType) (Snippet . "ObjectDataCtrlMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ObjectDataCtrlMetaData") (Description . "") (DisplayText . "ObjectDataCtrlMetaData()") (RequiredNamespaceImport) (MethodHeader . "ObjectDataCtrlMetaData()") (ReturnType) (Snippet . "ObjectDataCtrlMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ObjectDataCtrlType") (Description . "") (DisplayText . "ObjectDataCtrlType") (RequiredNamespaceImport) (MethodHeader . "ObjectDataCtrlType") (ReturnType) (Snippet . "ObjectDataCtrlType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ObjectDataCtrlType") (Description . "") (DisplayText . "ObjectDataCtrlType()") (RequiredNamespaceImport) (MethodHeader . "ObjectDataCtrlType()") (ReturnType) (Snippet . "ObjectDataCtrlType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ObjectDataView") (Description . "") (DisplayText . "ObjectDataView") (RequiredNamespaceImport) (MethodHeader . "ObjectDataView") (ReturnType) (Snippet . "ObjectDataView$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ObjectDataView") (Description . "") (DisplayText . "ObjectDataView()") (RequiredNamespaceImport) (MethodHeader . "ObjectDataView()") (ReturnType) (Snippet . "ObjectDataView()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ObjectDataView") (Description . "") (DisplayText . "ObjectDataView(ObjectDataViewModel vm, Func<INameViewModel, Control> convert)") (RequiredNamespaceImport) (MethodHeader . "ObjectDataView(ObjectDataViewModel vm, Func<INameViewModel, Control> convert)") (ReturnType) (Snippet . "ObjectDataView(${1:ObjectDataViewModel vm}, ${2:Func<INameViewModel, Control> convert})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ObjectDataViewModel") (Description . "") (DisplayText . "ObjectDataViewModel") (RequiredNamespaceImport) (MethodHeader . "ObjectDataViewModel") (ReturnType) (Snippet . "ObjectDataViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ObjectDataViewModel") (Description . "") (DisplayText . "ObjectDataViewModel()") (RequiredNamespaceImport) (MethodHeader . "ObjectDataViewModel()") (ReturnType) (Snippet . "ObjectDataViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "OneToManyMetaData") (Description . "") (DisplayText . "OneToManyMetaData") (RequiredNamespaceImport) (MethodHeader . "OneToManyMetaData") (ReturnType) (Snippet . "OneToManyMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "OneToManyMetaData") (Description . "") (DisplayText . "OneToManyMetaData()") (RequiredNamespaceImport) (MethodHeader . "OneToManyMetaData()") (ReturnType) (Snippet . "OneToManyMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "OneWayBindingConditionData") (Description . "") (DisplayText . "OneWayBindingConditionData") (RequiredNamespaceImport) (MethodHeader . "OneWayBindingConditionData") (ReturnType) (Snippet . "OneWayBindingConditionData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "OneWayBindingConditionData") (Description . "") (DisplayText . "OneWayBindingConditionData()") (RequiredNamespaceImport) (MethodHeader . "OneWayBindingConditionData()") (ReturnType) (Snippet . "OneWayBindingConditionData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "OutputDateFrameSelectionType") (Description . "") (DisplayText . "OutputDateFrameSelectionType") (RequiredNamespaceImport) (MethodHeader . "OutputDateFrameSelectionType") (ReturnType) (Snippet . "OutputDateFrameSelectionType$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "ProcessData") (Description . "") (DisplayText . "ProcessData") (RequiredNamespaceImport) (MethodHeader . "ProcessData") (ReturnType) (Snippet . "ProcessData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ProcessData") (Description . "") (DisplayText . "ProcessData()") (RequiredNamespaceImport) (MethodHeader . "ProcessData()") (ReturnType) (Snippet . "ProcessData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "PropertyChangedArgsExtension") (Description . "Implements a model for an extended PropertyChangeArguments which includes old and new value.
") (DisplayText . "PropertyChangedArgsExtension") (RequiredNamespaceImport) (MethodHeader . "PropertyChangedArgsExtension") (ReturnType) (Snippet . "PropertyChangedArgsExtension$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "PropertyChangedArgsExtension") (Description . "Initializes a new instance of the Fls.Base.PropertyChangedArgsExtension class.

name: The properties name.") (DisplayText . "PropertyChangedArgsExtension(string name)") (RequiredNamespaceImport) (MethodHeader . "PropertyChangedArgsExtension(string name)") (ReturnType) (Snippet . "PropertyChangedArgsExtension(${1:string name})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "PropertyChangedArgsExtension") (Description . "Initializes a new instance of the Fls.Base.PropertyChangedArgsExtension class.

name: The properties name.
oldValue: The properties old value.
newValue: The properties new value.") (DisplayText . "PropertyChangedArgsExtension(string name, object oldValue, object newValue)") (RequiredNamespaceImport) (MethodHeader . "PropertyChangedArgsExtension(string name, object oldValue, object newValue)") (ReturnType) (Snippet . "PropertyChangedArgsExtension(${1:string name}, ${2:object oldValue}, ${3:object newValue})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "RecommendedAsConfigurableAttribute") (Description . "") (DisplayText . "RecommendedAsConfigurableAttribute") (RequiredNamespaceImport) (MethodHeader . "RecommendedAsConfigurableAttribute") (ReturnType) (Snippet . "RecommendedAsConfigurableAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "RecommendedAsConfigurableAttribute") (Description . "") (DisplayText . "RecommendedAsConfigurableAttribute(bool recommendedAsConfigurable)") (RequiredNamespaceImport) (MethodHeader . "RecommendedAsConfigurableAttribute(bool recommendedAsConfigurable)") (ReturnType) (Snippet . "RecommendedAsConfigurableAttribute(${1:bool recommendedAsConfigurable})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ReConvertDateTimesEventArgs") (Description . "") (DisplayText . "ReConvertDateTimesEventArgs") (RequiredNamespaceImport) (MethodHeader . "ReConvertDateTimesEventArgs") (ReturnType) (Snippet . "ReConvertDateTimesEventArgs$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ReConvertDateTimesEventArgs") (Description . "") (DisplayText . "ReConvertDateTimesEventArgs(ITimeConverter converter, IProvideToday dateForTimeOfDayConversion)") (RequiredNamespaceImport) (MethodHeader . "ReConvertDateTimesEventArgs(ITimeConverter converter, IProvideToday dateForTimeOfDayConversion)") (ReturnType) (Snippet . "ReConvertDateTimesEventArgs(${1:ITimeConverter converter}, ${2:IProvideToday dateForTimeOfDayConversion})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "RepositoryItemDateEdit") (Description . "
A repository item storing settings specific to a DevExpress.XtraEditors.DateEdit control.") (DisplayText . "RepositoryItemDateEdit") (RequiredNamespaceImport) (MethodHeader . "RepositoryItemDateEdit") (ReturnType) (Snippet . "RepositoryItemDateEdit$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "RepositoryItemDateEdit") (Description . "
Initializes a new DevExpress.XtraEditors.Repository.RepositoryItemDateEdit class instance with default settings. ") (DisplayText . "RepositoryItemDateEdit()") (RequiredNamespaceImport) (MethodHeader . "RepositoryItemDateEdit()") (ReturnType) (Snippet . "RepositoryItemDateEdit()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "RepositoryItemFLSDateEdit") (Description . "TODO: Update summary.
") (DisplayText . "RepositoryItemFLSDateEdit") (RequiredNamespaceImport) (MethodHeader . "RepositoryItemFLSDateEdit") (ReturnType) (Snippet . "RepositoryItemFLSDateEdit$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "RepositoryItemFLSDateEdit") (Description . "") (DisplayText . "RepositoryItemFLSDateEdit()") (RequiredNamespaceImport) (MethodHeader . "RepositoryItemFLSDateEdit()") (ReturnType) (Snippet . "RepositoryItemFLSDateEdit()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ResourceData") (Description . "Contains the resource data.
") (DisplayText . "ResourceData") (RequiredNamespaceImport) (MethodHeader . "ResourceData") (ReturnType) (Snippet . "ResourceData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ResourceData") (Description . "The resource data.

key: The resource key.
value: The resource grid view.") (DisplayText . "ResourceData(int key, string value)") (RequiredNamespaceImport) (MethodHeader . "ResourceData(int key, string value)") (ReturnType) (Snippet . "ResourceData(${1:int key}, ${2:string value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ResourceSchedulerDataModel") (Description . "Implements a class for a resource data model.
") (DisplayText . "ResourceSchedulerDataModel") (RequiredNamespaceImport) (MethodHeader . "ResourceSchedulerDataModel") (ReturnType) (Snippet . "ResourceSchedulerDataModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ResourceSchedulerDataModel") (Description . "") (DisplayText . "ResourceSchedulerDataModel(AppointmentSchedulerViewModel datamodel)") (RequiredNamespaceImport) (MethodHeader . "ResourceSchedulerDataModel(AppointmentSchedulerViewModel datamodel)") (ReturnType) (Snippet . "ResourceSchedulerDataModel(${1:AppointmentSchedulerViewModel datamodel})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ResourceSchedulerDateComparer") (Description . "Implements a model for 
") (DisplayText . "ResourceSchedulerDateComparer") (RequiredNamespaceImport) (MethodHeader . "ResourceSchedulerDateComparer") (ReturnType) (Snippet . "ResourceSchedulerDateComparer$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ResourceSchedulerDateComparer") (Description . "Initializes a new instance of the Fls.VisiTourClient.ViewModel.Scheduler.ResourceSchedulerDateComparer class. 
") (DisplayText . "ResourceSchedulerDateComparer()") (RequiredNamespaceImport) (MethodHeader . "ResourceSchedulerDateComparer()") (ReturnType) (Snippet . "ResourceSchedulerDateComparer()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "RibbonButtonGroupMetaData") (Description . "") (DisplayText . "RibbonButtonGroupMetaData") (RequiredNamespaceImport) (MethodHeader . "RibbonButtonGroupMetaData") (ReturnType) (Snippet . "RibbonButtonGroupMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "RibbonButtonGroupMetaData") (Description . "") (DisplayText . "RibbonButtonGroupMetaData()") (RequiredNamespaceImport) (MethodHeader . "RibbonButtonGroupMetaData()") (ReturnType) (Snippet . "RibbonButtonGroupMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "RibbonCategoryMetaData") (Description . "Implements a model for ribbon group meta data.
") (DisplayText . "RibbonCategoryMetaData") (RequiredNamespaceImport) (MethodHeader . "RibbonCategoryMetaData") (ReturnType) (Snippet . "RibbonCategoryMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "RibbonCategoryMetaData") (Description . "Initializes a new instance of the Fls.VisiTourClient.MetaData.RibbonGroupMetaData class.
") (DisplayText . "RibbonCategoryMetaData()") (RequiredNamespaceImport) (MethodHeader . "RibbonCategoryMetaData()") (ReturnType) (Snippet . "RibbonCategoryMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "RibbonGroupMetaData") (Description . "Implements a model for ribbon group meta data.
") (DisplayText . "RibbonGroupMetaData") (RequiredNamespaceImport) (MethodHeader . "RibbonGroupMetaData") (ReturnType) (Snippet . "RibbonGroupMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "RibbonGroupMetaData") (Description . "Initializes a new instance of the Fls.VisiTourClient.MetaData.RibbonGroupMetaData class.
") (DisplayText . "RibbonGroupMetaData()") (RequiredNamespaceImport) (MethodHeader . "RibbonGroupMetaData()") (ReturnType) (Snippet . "RibbonGroupMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "RibbonIconItemMetaData") (Description . "Implements a model for ribbon item with an icon.
") (DisplayText . "RibbonIconItemMetaData") (RequiredNamespaceImport) (MethodHeader . "RibbonIconItemMetaData") (ReturnType) (Snippet . "RibbonIconItemMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "RibbonIconItemMetaData") (Description . "Initializes a new instance of the Fls.VisiTourClient.MetaData.RibbonIconItemMetaData class.
") (DisplayText . "RibbonIconItemMetaData()") (RequiredNamespaceImport) (MethodHeader . "RibbonIconItemMetaData()") (ReturnType) (Snippet . "RibbonIconItemMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "RibbonItemsMetaData") (Description . "Implements a model for a ribbon item. 
") (DisplayText . "RibbonItemsMetaData") (RequiredNamespaceImport) (MethodHeader . "RibbonItemsMetaData") (ReturnType) (Snippet . "RibbonItemsMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "RibbonItemsMetaData") (Description . "Initializes a new instance of the Fls.VisiTourClient.MetaData.RibbonItemsMetaData class.
") (DisplayText . "RibbonItemsMetaData()") (RequiredNamespaceImport) (MethodHeader . "RibbonItemsMetaData()") (ReturnType) (Snippet . "RibbonItemsMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "RibbonPageMetaData") (Description . "Implements a model for ribbon group meta data.
") (DisplayText . "RibbonPageMetaData") (RequiredNamespaceImport) (MethodHeader . "RibbonPageMetaData") (ReturnType) (Snippet . "RibbonPageMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "RibbonPageMetaData") (Description . "Initializes a new instance of the Fls.VisiTourClient.MetaData.RibbonGroupMetaData class.
") (DisplayText . "RibbonPageMetaData()") (RequiredNamespaceImport) (MethodHeader . "RibbonPageMetaData()") (ReturnType) (Snippet . "RibbonPageMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "RibbonSubMenuItemMetadata") (Description . "Implements a model for ribbon or context menu items which have sub items.
") (DisplayText . "RibbonSubMenuItemMetadata") (RequiredNamespaceImport) (MethodHeader . "RibbonSubMenuItemMetadata") (ReturnType) (Snippet . "RibbonSubMenuItemMetadata$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "RibbonSubMenuItemMetadata") (Description . "Initializes a new instance of the Fls.VisiTourClient.MetaData.RibbonSubMenuItemMetadata class.
") (DisplayText . "RibbonSubMenuItemMetadata()") (RequiredNamespaceImport) (MethodHeader . "RibbonSubMenuItemMetadata()") (ReturnType) (Snippet . "RibbonSubMenuItemMetadata()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "RoleDependantRightsVMCache") (Description . "") (DisplayText . "RoleDependantRightsVMCache") (RequiredNamespaceImport) (MethodHeader . "RoleDependantRightsVMCache") (ReturnType) (Snippet . "RoleDependantRightsVMCache$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "RoleDependantRightsVMCache") (Description . "") (DisplayText . "RoleDependantRightsVMCache()") (RequiredNamespaceImport) (MethodHeader . "RoleDependantRightsVMCache()") (ReturnType) (Snippet . "RoleDependantRightsVMCache()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "RoleDependantRightsVMCacheEntry") (Description . "") (DisplayText . "RoleDependantRightsVMCacheEntry") (RequiredNamespaceImport) (MethodHeader . "RoleDependantRightsVMCacheEntry") (ReturnType) (Snippet . "RoleDependantRightsVMCacheEntry$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "RoleDependantRightsVMCacheEntry") (Description . "") (DisplayText . "RoleDependantRightsVMCacheEntry()") (RequiredNamespaceImport) (MethodHeader . "RoleDependantRightsVMCacheEntry()") (ReturnType) (Snippet . "RoleDependantRightsVMCacheEntry()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "RowMetaData") (Description . "") (DisplayText . "RowMetaData") (RequiredNamespaceImport) (MethodHeader . "RowMetaData") (ReturnType) (Snippet . "RowMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "RowMetaData") (Description . "") (DisplayText . "RowMetaData()") (RequiredNamespaceImport) (MethodHeader . "RowMetaData()") (ReturnType) (Snippet . "RowMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "RuntimeDataBuilder") (Description . "Implements static methods for the run time building of data. 
") (DisplayText . "RuntimeDataBuilder") (RequiredNamespaceImport) (MethodHeader . "RuntimeDataBuilder") (ReturnType) (Snippet . "RuntimeDataBuilder$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ScheduleDataModel") (Description . "Implements a model for scheduler tourData. 
") (DisplayText . "ScheduleDataModel") (RequiredNamespaceImport) (MethodHeader . "ScheduleDataModel") (ReturnType) (Snippet . "ScheduleDataModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ScheduleDataModel") (Description . "") (DisplayText . "ScheduleDataModel(IDOBaseRepository repository, SchedulerItemLabelBuilders itemLabelBuilder, IRunTimeBuildingContext buildingContext)") (RequiredNamespaceImport) (MethodHeader . "ScheduleDataModel(IDOBaseRepository repository, SchedulerItemLabelBuilders itemLabelBuilder, IRunTimeBuildingContext buildingContext)") (ReturnType) (Snippet . "ScheduleDataModel(${1:IDOBaseRepository repository}, ${2:SchedulerItemLabelBuilders itemLabelBuilder}, ${3:IRunTimeBuildingContext buildingContext})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ScheduleDataModel") (Description . "Initializes a new instance of the Fls.VisiTourClient.ViewModel.Scheduler.ScheduleDataModel class. 

repository: The repository. ") (DisplayText . "ScheduleDataModel(IDOBaseRepository repository, SchedulerItemLabelBuilders itemLabelBuilder, IRunTimeBuildingContext buildingContext, EscalationFilterModel escalationFilterModel)") (RequiredNamespaceImport) (MethodHeader . "ScheduleDataModel(IDOBaseRepository repository, SchedulerItemLabelBuilders itemLabelBuilder, IRunTimeBuildingContext buildingContext, EscalationFilterModel escalationFilterModel)") (ReturnType) (Snippet . "ScheduleDataModel(${1:IDOBaseRepository repository}, ${2:SchedulerItemLabelBuilders itemLabelBuilder}, ${3:IRunTimeBuildingContext buildingContext}, ${4:EscalationFilterModel escalationFilterModel})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "SchedulerControlMetaData") (Description . "Implements a model for 
") (DisplayText . "SchedulerControlMetaData") (RequiredNamespaceImport) (MethodHeader . "SchedulerControlMetaData") (ReturnType) (Snippet . "SchedulerControlMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "SchedulerControlMetaData") (Description . "Initializes a new instance of the Fls.VisiTourClient.MetaData.SchedulerControlMetaData class.
") (DisplayText . "SchedulerControlMetaData()") (RequiredNamespaceImport) (MethodHeader . "SchedulerControlMetaData()") (ReturnType) (Snippet . "SchedulerControlMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "SchedulerViewDateTimeSlotModel") (Description . "Implements a model for scheduler view scheduleTable column header.
") (DisplayText . "SchedulerViewDateTimeSlotModel") (RequiredNamespaceImport) (MethodHeader . "SchedulerViewDateTimeSlotModel") (ReturnType) (Snippet . "SchedulerViewDateTimeSlotModel$0") (Kind . "Struct") (IsSuggestionMode . :json-false)) ((CompletionText . "SchedulerViewDateTimeSlotModel") (Description . "") (DisplayText . "SchedulerViewDateTimeSlotModel()") (RequiredNamespaceImport) (MethodHeader . "SchedulerViewDateTimeSlotModel()") (ReturnType) (Snippet . "SchedulerViewDateTimeSlotModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "SchedulerViewDateTimeSlotModel") (Description . "Initializes a new instance of the Fls.VisiTourClient.ViewModel.Scheduler.SchedulerViewDateTimeSlotModel struct.

slot: The date time slot.
isZombieTime: Indicates that slot is a zombie.
width: The slots width.") (DisplayText . "SchedulerViewDateTimeSlotModel(DateTimeSlot slot, bool isZombieTime, double width)") (RequiredNamespaceImport) (MethodHeader . "SchedulerViewDateTimeSlotModel(DateTimeSlot slot, bool isZombieTime, double width)") (ReturnType) (Snippet . "SchedulerViewDateTimeSlotModel(${1:DateTimeSlot slot}, ${2:bool isZombieTime}, ${3:double width})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "SearchLookUpData") (Description . "") (DisplayText . "SearchLookUpData") (RequiredNamespaceImport) (MethodHeader . "SearchLookUpData") (ReturnType) (Snippet . "SearchLookUpData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "SearchLookUpData") (Description . "") (DisplayText . "SearchLookUpData()") (RequiredNamespaceImport) (MethodHeader . "SearchLookUpData()") (ReturnType) (Snippet . "SearchLookUpData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "SearchResultDataOutputType") (Description . "") (DisplayText . "SearchResultDataOutputType") (RequiredNamespaceImport) (MethodHeader . "SearchResultDataOutputType") (ReturnType) (Snippet . "SearchResultDataOutputType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "SearchResultDataOutputType") (Description . "SearchResultDataOutputType class constructor
") (DisplayText . "SearchResultDataOutputType()") (RequiredNamespaceImport) (MethodHeader . "SearchResultDataOutputType()") (ReturnType) (Snippet . "SearchResultDataOutputType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "SelectRefTablesCtrlMetaData") (Description . "") (DisplayText . "SelectRefTablesCtrlMetaData") (RequiredNamespaceImport) (MethodHeader . "SelectRefTablesCtrlMetaData") (ReturnType) (Snippet . "SelectRefTablesCtrlMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "SelectRefTablesCtrlMetaData") (Description . "") (DisplayText . "SelectRefTablesCtrlMetaData()") (RequiredNamespaceImport) (MethodHeader . "SelectRefTablesCtrlMetaData()") (ReturnType) (Snippet . "SelectRefTablesCtrlMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ServerTimeData") (Description . "") (DisplayText . "ServerTimeData") (RequiredNamespaceImport) (MethodHeader . "ServerTimeData") (ReturnType) (Snippet . "ServerTimeData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ServerTimeData") (Description . "") (DisplayText . "ServerTimeData()") (RequiredNamespaceImport) (MethodHeader . "ServerTimeData()") (ReturnType) (Snippet . "ServerTimeData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "SettingsBindableAttribute") (Description . "") (DisplayText . "SettingsBindableAttribute") (RequiredNamespaceImport) (MethodHeader . "SettingsBindableAttribute") (ReturnType) (Snippet . "SettingsBindableAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "SettingsBindableAttribute") (Description . "") (DisplayText . "SettingsBindableAttribute(bool bindable)") (RequiredNamespaceImport) (MethodHeader . "SettingsBindableAttribute(bool bindable)") (ReturnType) (Snippet . "SettingsBindableAttribute(${1:bool bindable})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "SetValueMetaData") (Description . "Implements a model for 
") (DisplayText . "SetValueMetaData") (RequiredNamespaceImport) (MethodHeader . "SetValueMetaData") (ReturnType) (Snippet . "SetValueMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "SetValueMetaData") (Description . "Initializes a new instance of the Fls.VisiTourClient.MetaData.SetValueMetaData class.
") (DisplayText . "SetValueMetaData()") (RequiredNamespaceImport) (MethodHeader . "SetValueMetaData()") (ReturnType) (Snippet . "SetValueMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "SignedData") (Description . "") (DisplayText . "SignedData") (RequiredNamespaceImport) (MethodHeader . "SignedData") (ReturnType) (Snippet . "SignedData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "SignedData") (Description . "") (DisplayText . "SignedData()") (RequiredNamespaceImport) (MethodHeader . "SignedData()") (ReturnType) (Snippet . "SignedData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "SignedData") (Description . "") (DisplayText . "SignedData(IChipher cipher)") (RequiredNamespaceImport) (MethodHeader . "SignedData(IChipher cipher)") (ReturnType) (Snippet . "SignedData(${1:IChipher cipher})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "SimpleDataTableView") (Description . "Implements a forms user control based on a view model.
This control 
") (DisplayText . "SimpleDataTableView") (RequiredNamespaceImport) (MethodHeader . "SimpleDataTableView") (ReturnType) (Snippet . "SimpleDataTableView$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "SimpleDataTableView") (Description . "Initializes a new instance of the Fls.Controls.Forms.DevExpressBase.TableGridView class.
") (DisplayText . "SimpleDataTableView()") (RequiredNamespaceImport) (MethodHeader . "SimpleDataTableView()") (ReturnType) (Snippet . "SimpleDataTableView()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "SimpleDataTableView") (Description . "Initializes a new instance of the Fls.Controls.Forms.DevExpressBase.TableGridView class.

viewModel: The used view model ") (DisplayText . "SimpleDataTableView(SimpleDataTableViewModel viewModel)") (RequiredNamespaceImport) (MethodHeader . "SimpleDataTableView(SimpleDataTableViewModel viewModel)") (ReturnType) (Snippet . "SimpleDataTableView(${1:SimpleDataTableViewModel viewModel})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "SimpleDataTableViewModel") (Description . "Implements a model for data table.
") (DisplayText . "SimpleDataTableViewModel") (RequiredNamespaceImport) (MethodHeader . "SimpleDataTableViewModel") (ReturnType) (Snippet . "SimpleDataTableViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "SimpleDataTableViewModel") (Description . "Initializes a new instance of the Fls.UI.Base.DataTableViewModel class.
") (DisplayText . "SimpleDataTableViewModel()") (RequiredNamespaceImport) (MethodHeader . "SimpleDataTableViewModel()") (ReturnType) (Snippet . "SimpleDataTableViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "SimpleTableCtrlMetaData") (Description . "") (DisplayText . "SimpleTableCtrlMetaData") (RequiredNamespaceImport) (MethodHeader . "SimpleTableCtrlMetaData") (ReturnType) (Snippet . "SimpleTableCtrlMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "SimpleTableCtrlMetaData") (Description . "") (DisplayText . "SimpleTableCtrlMetaData()") (RequiredNamespaceImport) (MethodHeader . "SimpleTableCtrlMetaData()") (ReturnType) (Snippet . "SimpleTableCtrlMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "StandaloneBarDockControl") (Description . "
The control that can accommodate bars and display them at any position within the form.") (DisplayText . "StandaloneBarDockControl") (RequiredNamespaceImport) (MethodHeader . "StandaloneBarDockControl") (ReturnType) (Snippet . "StandaloneBarDockControl$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "StandaloneBarDockControl") (Description . "
Initializes a new instance of the StandaloneBarDockControl class.") (DisplayText . "StandaloneBarDockControl()") (RequiredNamespaceImport) (MethodHeader . "StandaloneBarDockControl()") (ReturnType) (Snippet . "StandaloneBarDockControl()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "STAThreadAttribute") (Description . "") (DisplayText . "STAThreadAttribute") (RequiredNamespaceImport) (MethodHeader . "STAThreadAttribute") (ReturnType) (Snippet . "STAThreadAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "STAThreadAttribute") (Description . "") (DisplayText . "STAThreadAttribute()") (RequiredNamespaceImport) (MethodHeader . "STAThreadAttribute()") (ReturnType) (Snippet . "STAThreadAttribute()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "StaticTodayProvider") (Description . "") (DisplayText . "StaticTodayProvider") (RequiredNamespaceImport) (MethodHeader . "StaticTodayProvider") (ReturnType) (Snippet . "StaticTodayProvider$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "StaticTodayProvider") (Description . "") (DisplayText . "StaticTodayProvider(DateTime today)") (RequiredNamespaceImport) (MethodHeader . "StaticTodayProvider(DateTime today)") (ReturnType) (Snippet . "StaticTodayProvider(${1:DateTime today})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "StreamAsyncData") (Description . "Implements a model for 
") (DisplayText . "StreamAsyncData") (RequiredNamespaceImport) (MethodHeader . "StreamAsyncData") (ReturnType) (Snippet . "StreamAsyncData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "StreamAsyncData") (Description . "") (DisplayText . "StreamAsyncData(Stream stream, object data, Action<object> action)") (RequiredNamespaceImport) (MethodHeader . "StreamAsyncData(Stream stream, object data, Action<object> action)") (ReturnType) (Snippet . "StreamAsyncData(${1:Stream stream}, ${2:object data}, ${3:Action<object> action})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "TableDataItemType") (Description . "") (DisplayText . "TableDataItemType") (RequiredNamespaceImport) (MethodHeader . "TableDataItemType") (ReturnType) (Snippet . "TableDataItemType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "TableDataItemType") (Description . "TableDataItemType class constructor
") (DisplayText . "TableDataItemType()") (RequiredNamespaceImport) (MethodHeader . "TableDataItemType()") (ReturnType) (Snippet . "TableDataItemType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "TableDataType") (Description . "") (DisplayText . "TableDataType") (RequiredNamespaceImport) (MethodHeader . "TableDataType") (ReturnType) (Snippet . "TableDataType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "TableDataType") (Description . "") (DisplayText . "TableDataType()") (RequiredNamespaceImport) (MethodHeader . "TableDataType()") (ReturnType) (Snippet . "TableDataType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "TaggedDataRow") (Description . "") (DisplayText . "TaggedDataRow") (RequiredNamespaceImport) (MethodHeader . "TaggedDataRow") (ReturnType) (Snippet . "TaggedDataRow$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "TaggedDataRow") (Description . "") (DisplayText . "TaggedDataRow()") (RequiredNamespaceImport) (MethodHeader . "TaggedDataRow()") (ReturnType) (Snippet . "TaggedDataRow()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "TaggedDataRow") (Description . "") (DisplayText . "TaggedDataRow(DataRowBuilder builder)") (RequiredNamespaceImport) (MethodHeader . "TaggedDataRow(DataRowBuilder builder)") (ReturnType) (Snippet . "TaggedDataRow(${1:DataRowBuilder builder})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "TaskdataFormViewModel") (Description . "") (DisplayText . "TaskdataFormViewModel") (RequiredNamespaceImport) (MethodHeader . "TaskdataFormViewModel") (ReturnType) (Snippet . "TaskdataFormViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "TaskdataFormViewModel") (Description . "") (DisplayText . "TaskdataFormViewModel()") (RequiredNamespaceImport) (MethodHeader . "TaskdataFormViewModel()") (ReturnType) (Snippet . "TaskdataFormViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "TasksEscalatedAndUnscheduled") (Description . "Implements a model for 
") (DisplayText . "TasksEscalatedAndUnscheduled") (RequiredNamespaceImport) (MethodHeader . "TasksEscalatedAndUnscheduled") (ReturnType) (Snippet . "TasksEscalatedAndUnscheduled$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "TasksEscalatedAndUnscheduled") (Description . "") (DisplayText . "TasksEscalatedAndUnscheduled()") (RequiredNamespaceImport) (MethodHeader . "TasksEscalatedAndUnscheduled()") (ReturnType) (Snippet . "TasksEscalatedAndUnscheduled()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "TechWriterDataViewModel") (Description . "Implements a model for 
") (DisplayText . "TechWriterDataViewModel") (RequiredNamespaceImport) (MethodHeader . "TechWriterDataViewModel") (ReturnType) (Snippet . "TechWriterDataViewModel$0") (Kind . "Struct") (IsSuggestionMode . :json-false)) ((CompletionText . "TechWriterDataViewModel") (Description . "") (DisplayText . "TechWriterDataViewModel()") (RequiredNamespaceImport) (MethodHeader . "TechWriterDataViewModel()") (ReturnType) (Snippet . "TechWriterDataViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "TechWriterDataViewModel") (Description . "Initializes a new instance of the Fls.Base.TechWriterDataViewModel class.
") (DisplayText . "TechWriterDataViewModel(string controlId, string type, string transId, string transText)") (RequiredNamespaceImport) (MethodHeader . "TechWriterDataViewModel(string controlId, string type, string transId, string transText)") (ReturnType) (Snippet . "TechWriterDataViewModel(${1:string controlId}, ${2:string type}, ${3:string transId}, ${4:string transText})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "TempLookUpDataModel") (Description . "Implements a model for 
") (DisplayText . "TempLookUpDataModel") (RequiredNamespaceImport) (MethodHeader . "TempLookUpDataModel") (ReturnType) (Snippet . "TempLookUpDataModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "TempLookUpDataModel") (Description . "Initializes a new instance of the Fls.Base.TempLookUpDataModel class.
") (DisplayText . "TempLookUpDataModel(string entityName, IComparable index, ConcurrentDictionary<string, byte> properties, object data)") (RequiredNamespaceImport) (MethodHeader . "TempLookUpDataModel(string entityName, IComparable index, ConcurrentDictionary<string, byte> properties, object data)") (ReturnType) (Snippet . "TempLookUpDataModel(${1:string entityName}, ${2:IComparable index}, ${3:ConcurrentDictionary<string, byte> properties}, ${4:object data})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "TextFunctionMetaData") (Description . "") (DisplayText . "TextFunctionMetaData") (RequiredNamespaceImport) (MethodHeader . "TextFunctionMetaData") (ReturnType) (Snippet . "TextFunctionMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "TextFunctionMetaData") (Description . "") (DisplayText . "TextFunctionMetaData()") (RequiredNamespaceImport) (MethodHeader . "TextFunctionMetaData()") (ReturnType) (Snippet . "TextFunctionMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "TourDataTimeConversionHelper") (Description . "Helper class for converting a DOTourDate TourDate, Begin and End between frontend and backend time zone.
") (DisplayText . "TourDataTimeConversionHelper") (RequiredNamespaceImport) (MethodHeader . "TourDataTimeConversionHelper") (ReturnType) (Snippet . "TourDataTimeConversionHelper$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "TourDataTimeConversionHelper") (Description . "") (DisplayText . "TourDataTimeConversionHelper()") (RequiredNamespaceImport) (MethodHeader . "TourDataTimeConversionHelper()") (ReturnType) (Snippet . "TourDataTimeConversionHelper()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "TourModelTourDayTripComparer") (Description . "") (DisplayText . "TourModelTourDayTripComparer") (RequiredNamespaceImport) (MethodHeader . "TourModelTourDayTripComparer") (ReturnType) (Snippet . "TourModelTourDayTripComparer$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "TourModelTourDayTripComparer") (Description . "") (DisplayText . "TourModelTourDayTripComparer()") (RequiredNamespaceImport) (MethodHeader . "TourModelTourDayTripComparer()") (ReturnType) (Snippet . "TourModelTourDayTripComparer()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "UIActionMetaData") (Description . "Implements a model for 
") (DisplayText . "UIActionMetaData") (RequiredNamespaceImport) (MethodHeader . "UIActionMetaData") (ReturnType) (Snippet . "UIActionMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "UIActionMetaData") (Description . "Initializes a new instance of the Fls.VisiTourClient.MetaData.UIActionMetaData class.

name: The action name.
parameters: The action default parameters.
trigger: The action trigger.") (DisplayText . "UIActionMetaData(string name, Parameters parameters, EventType trigger)") (RequiredNamespaceImport) (MethodHeader . "UIActionMetaData(string name, Parameters parameters, EventType trigger)") (ReturnType) (Snippet . "UIActionMetaData(${1:string name}, ${2:Parameters parameters}, ${3:EventType trigger})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "UnauthorizedAccessException") (Description . "") (DisplayText . "UnauthorizedAccessException") (RequiredNamespaceImport) (MethodHeader . "UnauthorizedAccessException") (ReturnType) (Snippet . "UnauthorizedAccessException$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "UnauthorizedAccessException") (Description . "") (DisplayText . "UnauthorizedAccessException()") (RequiredNamespaceImport) (MethodHeader . "UnauthorizedAccessException()") (ReturnType) (Snippet . "UnauthorizedAccessException()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "UnauthorizedAccessException") (Description . "") (DisplayText . "UnauthorizedAccessException(SerializationInfo info, StreamingContext context)") (RequiredNamespaceImport) (MethodHeader . "UnauthorizedAccessException(SerializationInfo info, StreamingContext context)") (ReturnType) (Snippet . "UnauthorizedAccessException(${1:SerializationInfo info}, ${2:StreamingContext context})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "UnauthorizedAccessException") (Description . "") (DisplayText . "UnauthorizedAccessException(string message)") (RequiredNamespaceImport) (MethodHeader . "UnauthorizedAccessException(string message)") (ReturnType) (Snippet . "UnauthorizedAccessException(${1:string message})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "UnauthorizedAccessException") (Description . "") (DisplayText . "UnauthorizedAccessException(string message, Exception inner)") (RequiredNamespaceImport) (MethodHeader . "UnauthorizedAccessException(string message, Exception inner)") (ReturnType) (Snippet . "UnauthorizedAccessException(${1:string message}, ${2:Exception inner})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateLists") (Description . "Implements a model for 
") (DisplayText . "UpdateLists<TKey, TData>") (RequiredNamespaceImport) (MethodHeader . "UpdateLists<TKey, TData>") (ReturnType) (Snippet . "UpdateLists<${1:TKey}, ${2:TData}>$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateLists") (Description . "Initializes a new instance of the UpdateLists class.
") (DisplayText . "UpdateLists<TKey, TData>(string primaryKeyPropertyName, string modificationDatePropertyName)") (RequiredNamespaceImport) (MethodHeader . "UpdateLists<TKey, TData>(string primaryKeyPropertyName, string modificationDatePropertyName)") (ReturnType) (Snippet . "UpdateLists<${1:TKey}, ${2:TData}>(${3:string primaryKeyPropertyName}, ${4:string modificationDatePropertyName})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateVersion") (Description . "") (DisplayText . "UpdateVersion") (RequiredNamespaceImport) (MethodHeader . "UpdateVersion") (ReturnType) (Snippet . "UpdateVersion$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateVersion") (Description . "") (DisplayText . "UpdateVersion()") (RequiredNamespaceImport) (MethodHeader . "UpdateVersion()") (ReturnType) (Snippet . "UpdateVersion()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateVersion") (Description . "") (DisplayText . "UpdateVersion(FileVersionInfo fv)") (RequiredNamespaceImport) (MethodHeader . "UpdateVersion(FileVersionInfo fv)") (ReturnType) (Snippet . "UpdateVersion(${1:FileVersionInfo fv})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateVersion") (Description . "") (DisplayText . "UpdateVersion(string version)") (RequiredNamespaceImport) (MethodHeader . "UpdateVersion(string version)") (ReturnType) (Snippet . "UpdateVersion(${1:string version})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateWorkflowRequest") (Description . "") (DisplayText . "UpdateWorkflowRequest") (RequiredNamespaceImport) (MethodHeader . "UpdateWorkflowRequest") (ReturnType) (Snippet . "UpdateWorkflowRequest$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateWorkflowRequest") (Description . "") (DisplayText . "UpdateWorkflowRequest()") (RequiredNamespaceImport) (MethodHeader . "UpdateWorkflowRequest()") (ReturnType) (Snippet . "UpdateWorkflowRequest()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateWorkflowResponse") (Description . "") (DisplayText . "UpdateWorkflowResponse") (RequiredNamespaceImport) (MethodHeader . "UpdateWorkflowResponse") (ReturnType) (Snippet . "UpdateWorkflowResponse$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateWorkflowResponse") (Description . "") (DisplayText . "UpdateWorkflowResponse()") (RequiredNamespaceImport) (MethodHeader . "UpdateWorkflowResponse()") (ReturnType) (Snippet . "UpdateWorkflowResponse()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ValidatableValue") (Description . "Implements a model for a valid value.
The value type.") (DisplayText . "ValidatableValue<T>") (RequiredNamespaceImport) (MethodHeader . "ValidatableValue<T>") (ReturnType) (Snippet . "ValidatableValue<${1:T}>$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ValidatableValue") (Description . "Initializes a new instance of the ValidatableValue class.
") (DisplayText . "ValidatableValue<T>()") (RequiredNamespaceImport) (MethodHeader . "ValidatableValue<T>()") (ReturnType) (Snippet . "ValidatableValue<${1:T}>()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ValidateableObject") (Description . "Implements a model for validate objects. The validation methods have to be names like 
\"ValidatableObject.ValidationMethodNamePrefix\"\"PropertyName\" or \"ValidateDisplayName\".
The full declaration has to be: protected string ValidateDisplayName(). 
The validate methods are found automatically.
") (DisplayText . "ValidateableObject") (RequiredNamespaceImport) (MethodHeader . "ValidateableObject") (ReturnType) (Snippet . "ValidateableObject$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ValidateableObject") (Description . "Initializes a new instance of the Fls.Base.ValidateableObject class.
") (DisplayText . "ValidateableObject()") (RequiredNamespaceImport) (MethodHeader . "ValidateableObject()") (ReturnType) (Snippet . "ValidateableObject()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ValidateEventArgs") (Description . "") (DisplayText . "ValidateEventArgs") (RequiredNamespaceImport) (MethodHeader . "ValidateEventArgs") (ReturnType) (Snippet . "ValidateEventArgs$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ValidateEventArgs") (Description . "") (DisplayText . "ValidateEventArgs(DOBase data, string field)") (RequiredNamespaceImport) (MethodHeader . "ValidateEventArgs(DOBase data, string field)") (ReturnType) (Snippet . "ValidateEventArgs(${1:DOBase data}, ${2:string field})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ValidationEvent") (Description . "container for validation error results.
holds translationid of errormessage and
properties related to validation error.
") (DisplayText . "ValidationEvent") (RequiredNamespaceImport) (MethodHeader . "ValidationEvent") (ReturnType) (Snippet . "ValidationEvent$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ValidationEvent") (Description . "") (DisplayText . "ValidationEvent(IEnumerable<DProperty> errorProps, string validErrorTextID, ValidationEventType type = Error)") (RequiredNamespaceImport) (MethodHeader . "ValidationEvent(IEnumerable<DProperty> errorProps, string validErrorTextID, ValidationEventType type = Error)") (ReturnType) (Snippet . "ValidationEvent(${1:IEnumerable<DProperty> errorProps}, ${2:string validErrorTextID}, ${3:ValidationEventType type = Error})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ValidationResult") (Description . "Container for multiple validation errors.    
") (DisplayText . "ValidationResult") (RequiredNamespaceImport) (MethodHeader . "ValidationResult") (ReturnType) (Snippet . "ValidationResult$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ValidationResult") (Description . "") (DisplayText . "ValidationResult()") (RequiredNamespaceImport) (MethodHeader . "ValidationResult()") (ReturnType) (Snippet . "ValidationResult()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ValidationStatus") (Description . "") (DisplayText . "ValidationStatus") (RequiredNamespaceImport) (MethodHeader . "ValidationStatus") (ReturnType) (Snippet . "ValidationStatus$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "ValidationType") (Description . "") (DisplayText . "ValidationType") (RequiredNamespaceImport) (MethodHeader . "ValidationType") (ReturnType) (Snippet . "ValidationType$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "ValidatorBase") (Description . "Base class for DOBase validators containing usefull methods.
But it's not necessary for a validator class to inherit from this class.
") (DisplayText . "ValidatorBase") (RequiredNamespaceImport) (MethodHeader . "ValidatorBase") (ReturnType) (Snippet . "ValidatorBase$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ValidatorBase") (Description . "") (DisplayText . "ValidatorBase()") (RequiredNamespaceImport) (MethodHeader . "ValidatorBase()") (ReturnType) (Snippet . "ValidatorBase()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "Validators") (Description . "") (DisplayText . "Validators") (RequiredNamespaceImport) (MethodHeader . "Validators") (ReturnType) (Snippet . "Validators$0") (Kind . "Namespace") (IsSuggestionMode . :json-false)) ((CompletionText . "ValueBuilderData") (Description . "Implements value builder date.
") (DisplayText . "ValueBuilderData") (RequiredNamespaceImport) (MethodHeader . "ValueBuilderData") (ReturnType) (Snippet . "ValueBuilderData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ValueBuilderData") (Description . "") (DisplayText . "ValueBuilderData()") (RequiredNamespaceImport) (MethodHeader . "ValueBuilderData()") (ReturnType) (Snippet . "ValueBuilderData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "VTSDataObjects") (Description . "") (DisplayText . "VTSDataObjects") (RequiredNamespaceImport) (MethodHeader . "VTSDataObjects") (ReturnType) (Snippet . "VTSDataObjects$0") (Kind . "Namespace") (IsSuggestionMode . :json-false)) ((CompletionText . "WeekDays") (Description . "A flag enumeration to declare different weekdays and their combination. 
") (DisplayText . "WeekDays") (RequiredNamespaceImport) (MethodHeader . "WeekDays") (ReturnType) (Snippet . "WeekDays$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "WeekDaysType") (Description . "") (DisplayText . "WeekDaysType") (RequiredNamespaceImport) (MethodHeader . "WeekDaysType") (ReturnType) (Snippet . "WeekDaysType$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "WSDataAccess") (Description . "") (DisplayText . "WSDataAccess") (RequiredNamespaceImport) (MethodHeader . "WSDataAccess") (ReturnType) (Snippet . "WSDataAccess$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "WSDataAccess") (Description . "") (DisplayText . "WSDataAccess()") (RequiredNamespaceImport) (MethodHeader . "WSDataAccess()") (ReturnType) (Snippet . "WSDataAccess()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "XmlCDataSection") (Description . "") (DisplayText . "XmlCDataSection") (RequiredNamespaceImport) (MethodHeader . "XmlCDataSection") (ReturnType) (Snippet . "XmlCDataSection$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "XmlCDataSection") (Description . "") (DisplayText . "XmlCDataSection(string data, XmlDocument doc)") (RequiredNamespaceImport) (MethodHeader . "XmlCDataSection(string data, XmlDocument doc)") (ReturnType) (Snippet . "XmlCDataSection(${1:string data}, ${2:XmlDocument doc})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "XmlCharacterData") (Description . "") (DisplayText . "XmlCharacterData") (RequiredNamespaceImport) (MethodHeader . "XmlCharacterData") (ReturnType) (Snippet . "XmlCharacterData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "XmlCharacterData") (Description . "") (DisplayText . "XmlCharacterData(string data, XmlDocument doc)") (RequiredNamespaceImport) (MethodHeader . "XmlCharacterData(string data, XmlDocument doc)") (ReturnType) (Snippet . "XmlCharacterData(${1:string data}, ${2:XmlDocument doc})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "XmlDataDocument") (Description . "") (DisplayText . "XmlDataDocument") (RequiredNamespaceImport) (MethodHeader . "XmlDataDocument") (ReturnType) (Snippet . "XmlDataDocument$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "XmlDataDocument") (Description . "") (DisplayText . "XmlDataDocument()") (RequiredNamespaceImport) (MethodHeader . "XmlDataDocument()") (ReturnType) (Snippet . "XmlDataDocument()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "XmlDataDocument") (Description . "") (DisplayText . "XmlDataDocument(DataSet dataset)") (RequiredNamespaceImport) (MethodHeader . "XmlDataDocument(DataSet dataset)") (ReturnType) (Snippet . "XmlDataDocument(${1:DataSet dataset})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "XmlDateTimeSerializationMode") (Description . "") (DisplayText . "XmlDateTimeSerializationMode") (RequiredNamespaceImport) (MethodHeader . "XmlDateTimeSerializationMode") (ReturnType) (Snippet . "XmlDateTimeSerializationMode$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "XmlNodeChangedAction") (Description . "") (DisplayText . "XmlNodeChangedAction") (RequiredNamespaceImport) (MethodHeader . "XmlNodeChangedAction") (ReturnType) (Snippet . "XmlNodeChangedAction$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "XmlValidatingReader") (Description . "") (DisplayText . "XmlValidatingReader") (RequiredNamespaceImport) (MethodHeader . "XmlValidatingReader") (ReturnType) (Snippet . "XmlValidatingReader$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "XmlValidatingReader") (Description . "") (DisplayText . "XmlValidatingReader(Stream xmlFragment, XmlNodeType fragType, XmlParserContext context)") (RequiredNamespaceImport) (MethodHeader . "XmlValidatingReader(Stream xmlFragment, XmlNodeType fragType, XmlParserContext context)") (ReturnType) (Snippet . "XmlValidatingReader(${1:Stream xmlFragment}, ${2:XmlNodeType fragType}, ${3:XmlParserContext context})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "XmlValidatingReader") (Description . "") (DisplayText . "XmlValidatingReader(string xmlFragment, XmlNodeType fragType, XmlParserContext context)") (RequiredNamespaceImport) (MethodHeader . "XmlValidatingReader(string xmlFragment, XmlNodeType fragType, XmlParserContext context)") (ReturnType) (Snippet . "XmlValidatingReader(${1:string xmlFragment}, ${2:XmlNodeType fragType}, ${3:XmlParserContext context})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "XmlValidatingReader") (Description . "") (DisplayText . "XmlValidatingReader(XmlReader reader)") (RequiredNamespaceImport) (MethodHeader . "XmlValidatingReader(XmlReader reader)") (ReturnType) (Snippet . "XmlValidatingReader(${1:XmlReader reader})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "YearOverviewCtrlMetaData") (Description . "") (DisplayText . "YearOverviewCtrlMetaData") (RequiredNamespaceImport) (MethodHeader . "YearOverviewCtrlMetaData") (ReturnType) (Snippet . "YearOverviewCtrlMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "YearOverviewCtrlMetaData") (Description . "") (DisplayText . "YearOverviewCtrlMetaData()") (RequiredNamespaceImport) (MethodHeader . "YearOverviewCtrlMetaData()") (ReturnType) (Snippet . "YearOverviewCtrlMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false))]
[10:17:23] <-- 41 /autocomplete: [((CompletionText . "DataAccess") (Description . "") (DisplayText . "DataAccess") (RequiredNamespaceImport) (MethodHeader . "DataAccess") (ReturnType) (Snippet . "DataAccess$0") (Kind . "Namespace") (IsSuggestionMode . :json-false)) ((CompletionText . "DataBaseRequiredPropertiesType") (Description . "") (DisplayText . "DataBaseRequiredPropertiesType") (RequiredNamespaceImport) (MethodHeader . "DataBaseRequiredPropertiesType") (ReturnType) (Snippet . "DataBaseRequiredPropertiesType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataBaseRequiredPropertiesType") (Description . "DataBaseRequiredPropertiesType class constructor
") (DisplayText . "DataBaseRequiredPropertiesType()") (RequiredNamespaceImport) (MethodHeader . "DataBaseRequiredPropertiesType()") (ReturnType) (Snippet . "DataBaseRequiredPropertiesType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataConnection") (Description . "TODO: Update summary.
") (DisplayText . "DataConnection") (RequiredNamespaceImport) (MethodHeader . "DataConnection") (ReturnType) (Snippet . "DataConnection$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataConnection") (Description . "") (DisplayText . "DataConnection()") (RequiredNamespaceImport) (MethodHeader . "DataConnection()") (ReturnType) (Snippet . "DataConnection()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataConnection") (Description . "") (DisplayText . "DataConnection(DOBindingSource lookupBindingSource, DProperty propertyName, string summary, DProperty lookedUpProperty)") (RequiredNamespaceImport) (MethodHeader . "DataConnection(DOBindingSource lookupBindingSource, DProperty propertyName, string summary, DProperty lookedUpProperty)") (ReturnType) (Snippet . "DataConnection(${1:DOBindingSource lookupBindingSource}, ${2:DProperty propertyName}, ${3:string summary}, ${4:DProperty lookedUpProperty})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataConnection") (Description . "") (DisplayText . "DataConnection(DODataView lookupBindingSource, DProperty propertyName, string summary, DProperty lookedUpProperty)") (RequiredNamespaceImport) (MethodHeader . "DataConnection(DODataView lookupBindingSource, DProperty propertyName, string summary, DProperty lookedUpProperty)") (ReturnType) (Snippet . "DataConnection(${1:DODataView lookupBindingSource}, ${2:DProperty propertyName}, ${3:string summary}, ${4:DProperty lookedUpProperty})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataDependencyEventArgs") (Description . "Implements a model for request event arguments.
") (DisplayText . "DataDependencyEventArgs") (RequiredNamespaceImport) (MethodHeader . "DataDependencyEventArgs") (ReturnType) (Snippet . "DataDependencyEventArgs$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataDependencyEventArgs") (Description . "Initializes a new instance of the Fls.UI.Base.UserInformationEventArgs class.

request: An user request.") (DisplayText . "DataDependencyEventArgs(DataDependencyViewModel infoViewModel)") (RequiredNamespaceImport) (MethodHeader . "DataDependencyEventArgs(DataDependencyViewModel infoViewModel)") (ReturnType) (Snippet . "DataDependencyEventArgs(${1:DataDependencyViewModel infoViewModel})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataDependencyViewModel") (Description . "") (DisplayText . "DataDependencyViewModel") (RequiredNamespaceImport) (MethodHeader . "DataDependencyViewModel") (ReturnType) (Snippet . "DataDependencyViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataDependencyViewModel") (Description . "") (DisplayText . "DataDependencyViewModel(DOBindingSource source, IEnumerable<string> ignoreEntitiesList)") (RequiredNamespaceImport) (MethodHeader . "DataDependencyViewModel(DOBindingSource source, IEnumerable<string> ignoreEntitiesList)") (ReturnType) (Snippet . "DataDependencyViewModel(${1:DOBindingSource source}, ${2:IEnumerable<string> ignoreEntitiesList})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataErrorsChangedEventArgs") (Description . "") (DisplayText . "DataErrorsChangedEventArgs") (RequiredNamespaceImport) (MethodHeader . "DataErrorsChangedEventArgs") (ReturnType) (Snippet . "DataErrorsChangedEventArgs$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataErrorsChangedEventArgs") (Description . "") (DisplayText . "DataErrorsChangedEventArgs(string propertyName)") (RequiredNamespaceImport) (MethodHeader . "DataErrorsChangedEventArgs(string propertyName)") (ReturnType) (Snippet . "DataErrorsChangedEventArgs(${1:string propertyName})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataGroupType") (Description . "") (DisplayText . "DataGroupType") (RequiredNamespaceImport) (MethodHeader . "DataGroupType") (ReturnType) (Snippet . "DataGroupType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataGroupType") (Description . "DataGroupType class constructor
") (DisplayText . "DataGroupType()") (RequiredNamespaceImport) (MethodHeader . "DataGroupType()") (ReturnType) (Snippet . "DataGroupType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataItemType") (Description . "") (DisplayText . "DataItemType") (RequiredNamespaceImport) (MethodHeader . "DataItemType") (ReturnType) (Snippet . "DataItemType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataItemType") (Description . "") (DisplayText . "DataItemType()") (RequiredNamespaceImport) (MethodHeader . "DataItemType()") (ReturnType) (Snippet . "DataItemType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataItemTypeCreateStyle") (Description . "") (DisplayText . "DataItemTypeCreateStyle") (RequiredNamespaceImport) (MethodHeader . "DataItemTypeCreateStyle") (ReturnType) (Snippet . "DataItemTypeCreateStyle$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DataItemTypeEntityViewSourceMode") (Description . "") (DisplayText . "DataItemTypeEntityViewSourceMode") (RequiredNamespaceImport) (MethodHeader . "DataItemTypeEntityViewSourceMode") (ReturnType) (Snippet . "DataItemTypeEntityViewSourceMode$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DataItemTypeInitAction") (Description . "") (DisplayText . "DataItemTypeInitAction") (RequiredNamespaceImport) (MethodHeader . "DataItemTypeInitAction") (ReturnType) (Snippet . "DataItemTypeInitAction$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DataMisalignedException") (Description . "") (DisplayText . "DataMisalignedException") (RequiredNamespaceImport) (MethodHeader . "DataMisalignedException") (ReturnType) (Snippet . "DataMisalignedException$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataMisalignedException") (Description . "") (DisplayText . "DataMisalignedException()") (RequiredNamespaceImport) (MethodHeader . "DataMisalignedException()") (ReturnType) (Snippet . "DataMisalignedException()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataMisalignedException") (Description . "") (DisplayText . "DataMisalignedException(string message)") (RequiredNamespaceImport) (MethodHeader . "DataMisalignedException(string message)") (ReturnType) (Snippet . "DataMisalignedException(${1:string message})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataMisalignedException") (Description . "") (DisplayText . "DataMisalignedException(string message, Exception innerException)") (RequiredNamespaceImport) (MethodHeader . "DataMisalignedException(string message, Exception innerException)") (ReturnType) (Snippet . "DataMisalignedException(${1:string message}, ${2:Exception innerException})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataModel") (Description . "Implements a model for 
") (DisplayText . "DataModel") (RequiredNamespaceImport) (MethodHeader . "DataModel") (ReturnType) (Snippet . "DataModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataModel") (Description . "") (DisplayText . "DataModel()") (RequiredNamespaceImport) (MethodHeader . "DataModel()") (ReturnType) (Snippet . "DataModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObject") (Description . "") (DisplayText . "DataObject") (RequiredNamespaceImport) (MethodHeader . "DataObject") (ReturnType) (Snippet . "DataObject$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObject") (Description . "") (DisplayText . "DataObject()") (RequiredNamespaceImport) (MethodHeader . "DataObject()") (ReturnType) (Snippet . "DataObject()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectAttribute") (Description . "") (DisplayText . "DataObjectAttribute") (RequiredNamespaceImport) (MethodHeader . "DataObjectAttribute") (ReturnType) (Snippet . "DataObjectAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectAttribute") (Description . "") (DisplayText . "DataObjectAttribute()") (RequiredNamespaceImport) (MethodHeader . "DataObjectAttribute()") (ReturnType) (Snippet . "DataObjectAttribute()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectAttribute") (Description . "") (DisplayText . "DataObjectAttribute(bool isDataObject)") (RequiredNamespaceImport) (MethodHeader . "DataObjectAttribute(bool isDataObject)") (ReturnType) (Snippet . "DataObjectAttribute(${1:bool isDataObject})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectClock") (Description . "") (DisplayText . "DataObjectClock<T>") (RequiredNamespaceImport) (MethodHeader . "DataObjectClock<T>") (ReturnType) (Snippet . "DataObjectClock<${1:T}>$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectClock") (Description . "") (DisplayText . "DataObjectClock<T>(T doObject, ITimeExtractor extractor, IZonedClock unbiasedLocalTime)") (RequiredNamespaceImport) (MethodHeader . "DataObjectClock<T>(T doObject, ITimeExtractor extractor, IZonedClock unbiasedLocalTime)") (ReturnType) (Snippet . "DataObjectClock<${1:T}>(${2:T doObject}, ${3:ITimeExtractor extractor}, ${4:IZonedClock unbiasedLocalTime})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectFieldAttribute") (Description . "") (DisplayText . "DataObjectFieldAttribute") (RequiredNamespaceImport) (MethodHeader . "DataObjectFieldAttribute") (ReturnType) (Snippet . "DataObjectFieldAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectFieldAttribute") (Description . "") (DisplayText . "DataObjectFieldAttribute(bool primaryKey)") (RequiredNamespaceImport) (MethodHeader . "DataObjectFieldAttribute(bool primaryKey)") (ReturnType) (Snippet . "DataObjectFieldAttribute(${1:bool primaryKey})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectFieldAttribute") (Description . "") (DisplayText . "DataObjectFieldAttribute(bool primaryKey, bool isIdentity)") (RequiredNamespaceImport) (MethodHeader . "DataObjectFieldAttribute(bool primaryKey, bool isIdentity)") (ReturnType) (Snippet . "DataObjectFieldAttribute(${1:bool primaryKey}, ${2:bool isIdentity})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectFieldAttribute") (Description . "") (DisplayText . "DataObjectFieldAttribute(bool primaryKey, bool isIdentity, bool isNullable)") (RequiredNamespaceImport) (MethodHeader . "DataObjectFieldAttribute(bool primaryKey, bool isIdentity, bool isNullable)") (ReturnType) (Snippet . "DataObjectFieldAttribute(${1:bool primaryKey}, ${2:bool isIdentity}, ${3:bool isNullable})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectFieldAttribute") (Description . "") (DisplayText . "DataObjectFieldAttribute(bool primaryKey, bool isIdentity, bool isNullable, int length)") (RequiredNamespaceImport) (MethodHeader . "DataObjectFieldAttribute(bool primaryKey, bool isIdentity, bool isNullable, int length)") (ReturnType) (Snippet . "DataObjectFieldAttribute(${1:bool primaryKey}, ${2:bool isIdentity}, ${3:bool isNullable}, ${4:int length})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectMethodAttribute") (Description . "") (DisplayText . "DataObjectMethodAttribute") (RequiredNamespaceImport) (MethodHeader . "DataObjectMethodAttribute") (ReturnType) (Snippet . "DataObjectMethodAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectMethodAttribute") (Description . "") (DisplayText . "DataObjectMethodAttribute(DataObjectMethodType methodType)") (RequiredNamespaceImport) (MethodHeader . "DataObjectMethodAttribute(DataObjectMethodType methodType)") (ReturnType) (Snippet . "DataObjectMethodAttribute(${1:DataObjectMethodType methodType})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectMethodAttribute") (Description . "") (DisplayText . "DataObjectMethodAttribute(DataObjectMethodType methodType, bool isDefault)") (RequiredNamespaceImport) (MethodHeader . "DataObjectMethodAttribute(DataObjectMethodType methodType, bool isDefault)") (ReturnType) (Snippet . "DataObjectMethodAttribute(${1:DataObjectMethodType methodType}, ${2:bool isDefault})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectMethodType") (Description . "") (DisplayText . "DataObjectMethodType") (RequiredNamespaceImport) (MethodHeader . "DataObjectMethodType") (ReturnType) (Snippet . "DataObjectMethodType$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectTimeInformation") (Description . "") (DisplayText . "DataObjectTimeInformation") (RequiredNamespaceImport) (MethodHeader . "DataObjectTimeInformation") (ReturnType) (Snippet . "DataObjectTimeInformation$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectTimeInformation") (Description . "") (DisplayText . "DataObjectTimeInformation(TimeZoneInfo timeZone, IProvideToday dateForTimeOfDayConversion, TimeZoneAlias alias)") (RequiredNamespaceImport) (MethodHeader . "DataObjectTimeInformation(TimeZoneInfo timeZone, IProvideToday dateForTimeOfDayConversion, TimeZoneAlias alias)") (ReturnType) (Snippet . "DataObjectTimeInformation(${1:TimeZoneInfo timeZone}, ${2:IProvideToday dateForTimeOfDayConversion}, ${3:TimeZoneAlias alias})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectTimeInformationExtractor") (Description . "") (DisplayText . "DataObjectTimeInformationExtractor") (RequiredNamespaceImport) (MethodHeader . "DataObjectTimeInformationExtractor") (ReturnType) (Snippet . "DataObjectTimeInformationExtractor$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectTimeInformationExtractor") (Description . "") (DisplayText . "DataObjectTimeInformationExtractor(TimeZoneInfo fallBackTimeZone, IProvideToday fallBackDateForTimeOfDayConversion)") (RequiredNamespaceImport) (MethodHeader . "DataObjectTimeInformationExtractor(TimeZoneInfo fallBackTimeZone, IProvideToday fallBackDateForTimeOfDayConversion)") (ReturnType) (Snippet . "DataObjectTimeInformationExtractor(${1:TimeZoneInfo fallBackTimeZone}, ${2:IProvideToday fallBackDateForTimeOfDayConversion})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectToDateMapper") (Description . "") (DisplayText . "DataObjectToDateMapper") (RequiredNamespaceImport) (MethodHeader . "DataObjectToDateMapper") (ReturnType) (Snippet . "DataObjectToDateMapper$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectToDateMapper") (Description . "") (DisplayText . "DataObjectToDateMapper(IProvideToday fallBackToday)") (RequiredNamespaceImport) (MethodHeader . "DataObjectToDateMapper(IProvideToday fallBackToday)") (ReturnType) (Snippet . "DataObjectToDateMapper(${1:IProvideToday fallBackToday})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataOutputType") (Description . "") (DisplayText . "DataOutputType") (RequiredNamespaceImport) (MethodHeader . "DataOutputType") (ReturnType) (Snippet . "DataOutputType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataOutputType") (Description . "DataOutputType class constructor
") (DisplayText . "DataOutputType()") (RequiredNamespaceImport) (MethodHeader . "DataOutputType()") (ReturnType) (Snippet . "DataOutputType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataRequestModel") (Description . "") (DisplayText . "DataRequestModel<Index, Data>") (RequiredNamespaceImport) (MethodHeader . "DataRequestModel<Index, Data>") (ReturnType) (Snippet . "DataRequestModel<${1:Index}, ${2:Data}>$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataRequestModel") (Description . "") (DisplayText . "DataRequestModel<Index, Data>()") (RequiredNamespaceImport) (MethodHeader . "DataRequestModel<Index, Data>()") (ReturnType) (Snippet . "DataRequestModel<${1:Index}, ${2:Data}>()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataSourceActionType") (Description . "") (DisplayText . "DataSourceActionType") (RequiredNamespaceImport) (MethodHeader . "DataSourceActionType") (ReturnType) (Snippet . "DataSourceActionType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataSourceActionType") (Description . "") (DisplayText . "DataSourceActionType()") (RequiredNamespaceImport) (MethodHeader . "DataSourceActionType()") (ReturnType) (Snippet . "DataSourceActionType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataSourceActionTypeType") (Description . "") (DisplayText . "DataSourceActionTypeType") (RequiredNamespaceImport) (MethodHeader . "DataSourceActionTypeType") (ReturnType) (Snippet . "DataSourceActionTypeType$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DataSourceErrorEventArgs") (Description . "") (DisplayText . "DataSourceErrorEventArgs") (RequiredNamespaceImport) (MethodHeader . "DataSourceErrorEventArgs") (ReturnType) (Snippet . "DataSourceErrorEventArgs$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataSourceErrorEventArgs") (Description . "") (DisplayText . "DataSourceErrorEventArgs(string textId)") (RequiredNamespaceImport) (MethodHeader . "DataSourceErrorEventArgs(string textId)") (ReturnType) (Snippet . "DataSourceErrorEventArgs(${1:string textId})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataSourceErrorEventArgs") (Description . "") (DisplayText . "DataSourceErrorEventArgs(string textId, int code)") (RequiredNamespaceImport) (MethodHeader . "DataSourceErrorEventArgs(string textId, int code)") (ReturnType) (Snippet . "DataSourceErrorEventArgs(${1:string textId}, ${2:int code})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataSourceNameAttribute") (Description . "Implements an attribute for a subversion version.
") (DisplayText . "DataSourceNameAttribute") (RequiredNamespaceImport) (MethodHeader . "DataSourceNameAttribute") (ReturnType) (Snippet . "DataSourceNameAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataSourceNameAttribute") (Description . "Initializes a new instance of the Fls.VisiTourClient.ViewModel.DataSourceNameAttribute class.

svnRevision: The subversion version.") (DisplayText . "DataSourceNameAttribute(string name)") (RequiredNamespaceImport) (MethodHeader . "DataSourceNameAttribute(string name)") (ReturnType) (Snippet . "DataSourceNameAttribute(${1:string name})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataSources") (Description . "") (DisplayText . "DataSources") (RequiredNamespaceImport) (MethodHeader . "DataSources") (ReturnType) (Snippet . "DataSources$0") (Kind . "Namespace") (IsSuggestionMode . :json-false)) ((CompletionText . "DataTableSourceViewModel") (Description . "") (DisplayText . "DataTableSourceViewModel") (RequiredNamespaceImport) (MethodHeader . "DataTableSourceViewModel") (ReturnType) (Snippet . "DataTableSourceViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataTableSourceViewModel") (Description . "") (DisplayText . "DataTableSourceViewModel()") (RequiredNamespaceImport) (MethodHeader . "DataTableSourceViewModel()") (ReturnType) (Snippet . "DataTableSourceViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataTableViewModel") (Description . "Implements a model for data table.
") (DisplayText . "DataTableViewModel") (RequiredNamespaceImport) (MethodHeader . "DataTableViewModel") (ReturnType) (Snippet . "DataTableViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataTableViewModel") (Description . "Initializes a new instance of the Fls.UI.Base.DataTableViewModel class.
") (DisplayText . "DataTableViewModel()") (RequiredNamespaceImport) (MethodHeader . "DataTableViewModel()") (ReturnType) (Snippet . "DataTableViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataTableWithColoringViewModel") (Description . "TODO: Update summary.
") (DisplayText . "DataTableWithColoringViewModel") (RequiredNamespaceImport) (MethodHeader . "DataTableWithColoringViewModel") (ReturnType) (Snippet . "DataTableWithColoringViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataTableWithColoringViewModel") (Description . "Initializes a new instance of the Fls.UI.Base.DataTableWithColoringViewModel class.
") (DisplayText . "DataTableWithColoringViewModel()") (RequiredNamespaceImport) (MethodHeader . "DataTableWithColoringViewModel()") (ReturnType) (Snippet . "DataTableWithColoringViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataTransfersTypes") (Description . "The available data transfer types.
") (DisplayText . "DataTransfersTypes") (RequiredNamespaceImport) (MethodHeader . "DataTransfersTypes") (ReturnType) (Snippet . "DataTransfersTypes$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DateEditExtensionPainter") (Description . "Implements a model for 
") (DisplayText . "DateEditExtensionPainter") (RequiredNamespaceImport) (MethodHeader . "DateEditExtensionPainter") (ReturnType) (Snippet . "DateEditExtensionPainter$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DateEditExtensionPainter") (Description . "") (DisplayText . "DateEditExtensionPainter()") (RequiredNamespaceImport) (MethodHeader . "DateEditExtensionPainter()") (ReturnType) (Snippet . "DateEditExtensionPainter()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateEditExtensionViewInfo") (Description . "") (DisplayText . "DateEditExtensionViewInfo") (RequiredNamespaceImport) (MethodHeader . "DateEditExtensionViewInfo") (ReturnType) (Snippet . "DateEditExtensionViewInfo$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DateEditExtensionViewInfo") (Description . "") (DisplayText . "DateEditExtensionViewInfo(RepositoryItem item)") (RequiredNamespaceImport) (MethodHeader . "DateEditExtensionViewInfo(RepositoryItem item)") (ReturnType) (Snippet . "DateEditExtensionViewInfo(${1:RepositoryItem item})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateSelectorViewModel") (Description . "Implements a model for a date selector.
") (DisplayText . "DateSelectorViewModel") (RequiredNamespaceImport) (MethodHeader . "DateSelectorViewModel") (ReturnType) (Snippet . "DateSelectorViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DateSelectorViewModel") (Description . "Initializes a new instance of the Fls.VisiTourClient.ViewModel.DateSelectorViewModel class.
") (DisplayText . "DateSelectorViewModel()") (RequiredNamespaceImport) (MethodHeader . "DateSelectorViewModel()") (ReturnType) (Snippet . "DateSelectorViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateSelectorViewModel") (Description . "Initializes a new instance of the Fls.VisiTourClient.ViewModel.DateSelectorViewModel class.

startDate: The selected start date.
endDate: The selected end date.") (DisplayText . "DateSelectorViewModel(DateTimeInputViewModel startDate, DateTimeInputViewModel endDate)") (RequiredNamespaceImport) (MethodHeader . "DateSelectorViewModel(DateTimeInputViewModel startDate, DateTimeInputViewModel endDate)") (ReturnType) (Snippet . "DateSelectorViewModel(${1:DateTimeInputViewModel startDate}, ${2:DateTimeInputViewModel endDate})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateSelectorViewModel") (Description . "Initializes a new instance of the Fls.VisiTourClient.ViewModel.DateSelectorViewModel class.

elementId: The elements id.
startDate: The selected start date.
endDate: The selected end date.") (DisplayText . "DateSelectorViewModel(UIItemId elementId, DateTimeInputViewModel startDate, DateTimeInputViewModel endDate)") (RequiredNamespaceImport) (MethodHeader . "DateSelectorViewModel(UIItemId elementId, DateTimeInputViewModel startDate, DateTimeInputViewModel endDate)") (ReturnType) (Snippet . "DateSelectorViewModel(${1:UIItemId elementId}, ${2:DateTimeInputViewModel startDate}, ${3:DateTimeInputViewModel endDate})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime") (RequiredNamespaceImport) (MethodHeader . "DateTime") (ReturnType) (Snippet . "DateTime$0") (Kind . "Struct") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime()") (RequiredNamespaceImport) (MethodHeader . "DateTime()") (ReturnType) (Snippet . "DateTime()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, Calendar calendar)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, Calendar calendar)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:Calendar calendar})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, int hour, int minute, int second)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, int hour, int minute, int second)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, int hour, int minute, int second, Calendar calendar)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, int hour, int minute, int second, Calendar calendar)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:Calendar calendar})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, int hour, int minute, int second, DateTimeKind kind)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, int hour, int minute, int second, DateTimeKind kind)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:DateTimeKind kind})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:int millisecond})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, Calendar calendar)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, Calendar calendar)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:int millisecond}, ${8:Calendar calendar})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, Calendar calendar, DateTimeKind kind)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, Calendar calendar, DateTimeKind kind)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:int millisecond}, ${8:Calendar calendar}, ${9:DateTimeKind kind})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, DateTimeKind kind)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, DateTimeKind kind)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:int millisecond}, ${8:DateTimeKind kind})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(long ticks)") (RequiredNamespaceImport) (MethodHeader . "DateTime(long ticks)") (ReturnType) (Snippet . "DateTime(${1:long ticks})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(long ticks, DateTimeKind kind)") (RequiredNamespaceImport) (MethodHeader . "DateTime(long ticks, DateTimeKind kind)") (ReturnType) (Snippet . "DateTime(${1:long ticks}, ${2:DateTimeKind kind})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeConverter") (Description . "") (DisplayText . "DateTimeConverter") (RequiredNamespaceImport) (MethodHeader . "DateTimeConverter") (ReturnType) (Snippet . "DateTimeConverter$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeConverter") (Description . "") (DisplayText . "DateTimeConverter()") (RequiredNamespaceImport) (MethodHeader . "DateTimeConverter()") (ReturnType) (Snippet . "DateTimeConverter()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeEditView") (Description . "Implements a forms user control based on a view model.
This control 
") (DisplayText . "DateTimeEditView") (RequiredNamespaceImport) (MethodHeader . "DateTimeEditView") (ReturnType) (Snippet . "DateTimeEditView$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeEditView") (Description . "Initializes a new instance of the Fls.Controls.Forms.DevExpressBase.DateTimeEditView class.
") (DisplayText . "DateTimeEditView()") (RequiredNamespaceImport) (MethodHeader . "DateTimeEditView()") (ReturnType) (Snippet . "DateTimeEditView()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeEditView") (Description . "Initializes a new instance of the Fls.Controls.Forms.DevExpressBase.DateTimeEditView class.

viewModel: The used view model ") (DisplayText . "DateTimeEditView(DateTimeInputViewModel viewModel)") (RequiredNamespaceImport) (MethodHeader . "DateTimeEditView(DateTimeInputViewModel viewModel)") (ReturnType) (Snippet . "DateTimeEditView(${1:DateTimeInputViewModel viewModel})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeHelper") (Description . "") (DisplayText . "DateTimeHelper") (RequiredNamespaceImport) (MethodHeader . "DateTimeHelper") (ReturnType) (Snippet . "DateTimeHelper$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeInputViewModel") (Description . "Implements a model for date time input.
") (DisplayText . "DateTimeInputViewModel") (RequiredNamespaceImport) (MethodHeader . "DateTimeInputViewModel") (ReturnType) (Snippet . "DateTimeInputViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeInputViewModel") (Description . "Initializes a new instance of the Fls.UI.Base.DateTimeInputViewModel class.
") (DisplayText . "DateTimeInputViewModel()") (RequiredNamespaceImport) (MethodHeader . "DateTimeInputViewModel()") (ReturnType) (Snippet . "DateTimeInputViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeInputViewModel") (Description . "Initializes a new instance of the Fls.UI.Base.DateTimeInputViewModel class.

elementId: The elements id.") (DisplayText . "DateTimeInputViewModel(UIItemId elementId)") (RequiredNamespaceImport) (MethodHeader . "DateTimeInputViewModel(UIItemId elementId)") (ReturnType) (Snippet . "DateTimeInputViewModel(${1:UIItemId elementId})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeInputViewModel") (Description . "Initializes a new instance of the Fls.UI.Base.DateTimeInputViewModel class.

elementId: The elements id.
minDate: The minimum selectable date.
maxDate: The maximum selectable date.
selectedDate: The selected date.") (DisplayText . "DateTimeInputViewModel(UIItemId elementId, DateTime minDate, DateTime maxDate, DateTime selectedDate)") (RequiredNamespaceImport) (MethodHeader . "DateTimeInputViewModel(UIItemId elementId, DateTime minDate, DateTime maxDate, DateTime selectedDate)") (ReturnType) (Snippet . "DateTimeInputViewModel(${1:UIItemId elementId}, ${2:DateTime minDate}, ${3:DateTime maxDate}, ${4:DateTime selectedDate})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeInputViewModel") (Description . "Initializes a new instance of the Fls.UI.Base.DateTimeInputViewModel class.

elementId: The elements id.
selectedDate: The selected date.") (DisplayText . "DateTimeInputViewModel(UIItemId elementId, DateTime selectedDate)") (RequiredNamespaceImport) (MethodHeader . "DateTimeInputViewModel(UIItemId elementId, DateTime selectedDate)") (ReturnType) (Snippet . "DateTimeInputViewModel(${1:UIItemId elementId}, ${2:DateTime selectedDate})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeKind") (Description . "") (DisplayText . "DateTimeKind") (RequiredNamespaceImport) (MethodHeader . "DateTimeKind") (ReturnType) (Snippet . "DateTimeKind$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset") (ReturnType) (Snippet . "DateTimeOffset$0") (Kind . "Struct") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset()") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset()") (ReturnType) (Snippet . "DateTimeOffset()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset(DateTime dateTime)") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset(DateTime dateTime)") (ReturnType) (Snippet . "DateTimeOffset(${1:DateTime dateTime})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset(DateTime dateTime, TimeSpan offset)") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset(DateTime dateTime, TimeSpan offset)") (ReturnType) (Snippet . "DateTimeOffset(${1:DateTime dateTime}, ${2:TimeSpan offset})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset(int year, int month, int day, int hour, int minute, int second, int millisecond, Calendar calendar, TimeSpan offset)") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset(int year, int month, int day, int hour, int minute, int second, int millisecond, Calendar calendar, TimeSpan offset)") (ReturnType) (Snippet . "DateTimeOffset(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:int millisecond}, ${8:Calendar calendar}, ${9:TimeSpan offset})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset(int year, int month, int day, int hour, int minute, int second, int millisecond, TimeSpan offset)") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset(int year, int month, int day, int hour, int minute, int second, int millisecond, TimeSpan offset)") (ReturnType) (Snippet . "DateTimeOffset(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:int millisecond}, ${8:TimeSpan offset})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset(int year, int month, int day, int hour, int minute, int second, TimeSpan offset)") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset(int year, int month, int day, int hour, int minute, int second, TimeSpan offset)") (ReturnType) (Snippet . "DateTimeOffset(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:TimeSpan offset})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset(long ticks, TimeSpan offset)") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset(long ticks, TimeSpan offset)") (ReturnType) (Snippet . "DateTimeOffset(${1:long ticks}, ${2:TimeSpan offset})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffsetConverter") (Description . "") (DisplayText . "DateTimeOffsetConverter") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffsetConverter") (ReturnType) (Snippet . "DateTimeOffsetConverter$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffsetConverter") (Description . "") (DisplayText . "DateTimeOffsetConverter()") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffsetConverter()") (ReturnType) (Snippet . "DateTimeOffsetConverter()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeSlot") (Description . "Implements a model for time intervals. 
") (DisplayText . "DateTimeSlot") (RequiredNamespaceImport) (MethodHeader . "DateTimeSlot") (ReturnType) (Snippet . "DateTimeSlot$0") (Kind . "Struct") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeSlot") (Description . "") (DisplayText . "DateTimeSlot()") (RequiredNamespaceImport) (MethodHeader . "DateTimeSlot()") (ReturnType) (Snippet . "DateTimeSlot()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeSlot") (Description . "Initializes a new instance of the Fls.Base.DateTimeSlot structure. 

start: The start time. 
duration: The duration. ") (DisplayText . "DateTimeSlot(DateTime start, DateTime end)") (RequiredNamespaceImport) (MethodHeader . "DateTimeSlot(DateTime start, DateTime end)") (ReturnType) (Snippet . "DateTimeSlot(${1:DateTime start}, ${2:DateTime end})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeSlot") (Description . "Initializes a new instance of the Fls.Base.DateTimeSlot structure. 

start: The start time. 
duration: The duration. ") (DisplayText . "DateTimeSlot(DateTime start, TimeSpan duration)") (RequiredNamespaceImport) (MethodHeader . "DateTimeSlot(DateTime start, TimeSpan duration)") (ReturnType) (Snippet . "DateTimeSlot(${1:DateTime start}, ${2:TimeSpan duration})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "AdditionalDataRequestsType") (Description . "") (DisplayText . "AdditionalDataRequestsType") (RequiredNamespaceImport) (MethodHeader . "AdditionalDataRequestsType") (ReturnType) (Snippet . "AdditionalDataRequestsType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "AdditionalDataRequestsType") (Description . "AdditionalDataRequestsType class constructor
") (DisplayText . "AdditionalDataRequestsType()") (RequiredNamespaceImport) (MethodHeader . "AdditionalDataRequestsType()") (ReturnType) (Snippet . "AdditionalDataRequestsType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "AssemblyAlgorithmIdAttribute") (Description . "") (DisplayText . "AssemblyAlgorithmIdAttribute") (RequiredNamespaceImport) (MethodHeader . "AssemblyAlgorithmIdAttribute") (ReturnType) (Snippet . "AssemblyAlgorithmIdAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "AssemblyAlgorithmIdAttribute") (Description . "") (DisplayText . "AssemblyAlgorithmIdAttribute(AssemblyHashAlgorithm algorithmId)") (RequiredNamespaceImport) (MethodHeader . "AssemblyAlgorithmIdAttribute(AssemblyHashAlgorithm algorithmId)") (ReturnType) (Snippet . "AssemblyAlgorithmIdAttribute(${1:AssemblyHashAlgorithm algorithmId})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "AssemblyAlgorithmIdAttribute") (Description . "") (DisplayText . "AssemblyAlgorithmIdAttribute(uint algorithmId)") (RequiredNamespaceImport) (MethodHeader . "AssemblyAlgorithmIdAttribute(uint algorithmId)") (ReturnType) (Snippet . "AssemblyAlgorithmIdAttribute(${1:uint algorithmId})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "AssemblyMetadataAttribute") (Description . "") (DisplayText . "AssemblyMetadataAttribute") (RequiredNamespaceImport) (MethodHeader . "AssemblyMetadataAttribute") (ReturnType) (Snippet . "AssemblyMetadataAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "AssemblyMetadataAttribute") (Description . "") (DisplayText . "AssemblyMetadataAttribute(string key, string value)") (RequiredNamespaceImport) (MethodHeader . "AssemblyMetadataAttribute(string key, string value)") (ReturnType) (Snippet . "AssemblyMetadataAttribute(${1:string key}, ${2:string value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "AutoSearchCtrlMetaData") (Description . "") (DisplayText . "AutoSearchCtrlMetaData") (RequiredNamespaceImport) (MethodHeader . "AutoSearchCtrlMetaData") (ReturnType) (Snippet . "AutoSearchCtrlMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "AutoSearchCtrlMetaData") (Description . "") (DisplayText . "AutoSearchCtrlMetaData()") (RequiredNamespaceImport) (MethodHeader . "AutoSearchCtrlMetaData()") (ReturnType) (Snippet . "AutoSearchCtrlMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "BaseData") (Description . "") (DisplayText . "BaseData") (RequiredNamespaceImport) (MethodHeader . "BaseData") (ReturnType) (Snippet . "BaseData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "BaseData") (Description . "") (DisplayText . "BaseData()") (RequiredNamespaceImport) (MethodHeader . "BaseData()") (ReturnType) (Snippet . "BaseData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "BaseMetaData") (Description . "Implements a model for meta data of forms.
") (DisplayText . "BaseMetaData") (RequiredNamespaceImport) (MethodHeader . "BaseMetaData") (ReturnType) (Snippet . "BaseMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "BaseMetaData") (Description . "Initializes a new instance of the Fls.VisiTourClient.MetaData.BaseMetaData class.
") (DisplayText . "BaseMetaData()") (RequiredNamespaceImport) (MethodHeader . "BaseMetaData()") (ReturnType) (Snippet . "BaseMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "BindingSourceMetaData") (Description . "") (DisplayText . "BindingSourceMetaData") (RequiredNamespaceImport) (MethodHeader . "BindingSourceMetaData") (ReturnType) (Snippet . "BindingSourceMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "BindingSourceMetaData") (Description . "") (DisplayText . "BindingSourceMetaData(string id, string entity, string parentFormName, string connector, string connectorTarget, string validatorId, string clientFilter, IEnumerable<string> fieldNames = null, bool autoSave = false, bool doGeoCoding = true, bool targetZeroAsNull = false)") (RequiredNamespaceImport) (MethodHeader . "BindingSourceMetaData(string id, string entity, string parentFormName, string connector, string connectorTarget, string validatorId, string clientFilter, IEnumerable<string> fieldNames = null, bool autoSave = false, bool doGeoCoding = true, bool targetZeroAsNull = false)") (ReturnType) (Snippet . "BindingSourceMetaData(${1:string id}, ${2:string entity}, ${3:string parentFormName}, ${4:string connector}, ${5:string connectorTarget}, ${6:string validatorId}, ${7:string clientFilter}, ${8:IEnumerable<string> fieldNames = null}, ${9:bool autoSave = false}, ${10:bool doGeoCoding = true}, ${11:bool targetZeroAsNull = false})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "BookResourceInDateFrameViewModel") (Description . "") (DisplayText . "BookResourceInDateFrameViewModel") (RequiredNamespaceImport) (MethodHeader . "BookResourceInDateFrameViewModel") (ReturnType) (Snippet . "BookResourceInDateFrameViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "BookResourceInDateFrameViewModel") (Description . "") (DisplayText . "BookResourceInDateFrameViewModel(TourModel mainTour, ConcurrentDictionary<int, DOEngineer> availableEngineeres, DateTime startDate, DateTime endDate, DOEngineer changeEngineer)") (RequiredNamespaceImport) (MethodHeader . "BookResourceInDateFrameViewModel(TourModel mainTour, ConcurrentDictionary<int, DOEngineer> availableEngineeres, DateTime startDate, DateTime endDate, DOEngineer changeEngineer)") (ReturnType) (Snippet . "BookResourceInDateFrameViewModel(${1:TourModel mainTour}, ${2:ConcurrentDictionary<int, DOEngineer> availableEngineeres}, ${3:DateTime startDate}, ${4:DateTime endDate}, ${5:DOEngineer changeEngineer})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ChartControlMetaData") (Description . "") (DisplayText . "ChartControlMetaData") (RequiredNamespaceImport) (MethodHeader . "ChartControlMetaData") (ReturnType) (Snippet . "ChartControlMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ChartControlMetaData") (Description . "") (DisplayText . "ChartControlMetaData()") (RequiredNamespaceImport) (MethodHeader . "ChartControlMetaData()") (ReturnType) (Snippet . "ChartControlMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ChartDataValuesType") (Description . "") (DisplayText . "ChartDataValuesType") (RequiredNamespaceImport) (MethodHeader . "ChartDataValuesType") (ReturnType) (Snippet . "ChartDataValuesType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ChartDataValuesType") (Description . "ChartDataValuesType class constructor
") (DisplayText . "ChartDataValuesType()") (RequiredNamespaceImport) (MethodHeader . "ChartDataValuesType()") (ReturnType) (Snippet . "ChartDataValuesType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "CheckedComboBoxFromRefMetaData") (Description . "") (DisplayText . "CheckedComboBoxFromRefMetaData") (RequiredNamespaceImport) (MethodHeader . "CheckedComboBoxFromRefMetaData") (ReturnType) (Snippet . "CheckedComboBoxFromRefMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "CheckedComboBoxFromRefMetaData") (Description . "") (DisplayText . "CheckedComboBoxFromRefMetaData()") (RequiredNamespaceImport) (MethodHeader . "CheckedComboBoxFromRefMetaData()") (ReturnType) (Snippet . "CheckedComboBoxFromRefMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ClientFormElementMetaData") (Description . "Implements a model for form elements meta data.
") (DisplayText . "ClientFormElementMetaData") (RequiredNamespaceImport) (MethodHeader . "ClientFormElementMetaData") (ReturnType) (Snippet . "ClientFormElementMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ClientFormElementMetaData") (Description . "Initializes a new instance of the Fls.VisiTourClient.MetaData.ClientFormElementMetaData class.
") (DisplayText . "ClientFormElementMetaData()") (RequiredNamespaceImport) (MethodHeader . "ClientFormElementMetaData()") (ReturnType) (Snippet . "ClientFormElementMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ClientFormGroupMetaData") (Description . "TODO: Update summary.
") (DisplayText . "ClientFormGroupMetaData") (RequiredNamespaceImport) (MethodHeader . "ClientFormGroupMetaData") (ReturnType) (Snippet . "ClientFormGroupMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ClientFormGroupMetaData") (Description . "") (DisplayText . "ClientFormGroupMetaData(string id, Rights rightsName, string module, ClientFormGroupMetaData parentGroupMeta)") (RequiredNamespaceImport) (MethodHeader . "ClientFormGroupMetaData(string id, Rights rightsName, string module, ClientFormGroupMetaData parentGroupMeta)") (ReturnType) (Snippet . "ClientFormGroupMetaData(${1:string id}, ${2:Rights rightsName}, ${3:string module}, ${4:ClientFormGroupMetaData parentGroupMeta})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ClientFormMetaData") (Description . "Implements a model for client form meta data.
") (DisplayText . "ClientFormMetaData") (RequiredNamespaceImport) (MethodHeader . "ClientFormMetaData") (ReturnType) (Snippet . "ClientFormMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ClientFormMetaData") (Description . "Initializes a new instance of the Fls.VisiTourClient.MetaData.ClientFormMetaData class.
") (DisplayText . "ClientFormMetaData()") (RequiredNamespaceImport) (MethodHeader . "ClientFormMetaData()") (ReturnType) (Snippet . "ClientFormMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ClientMetaData") (Description . "") (DisplayText . "ClientMetaData") (RequiredNamespaceImport) (MethodHeader . "ClientMetaData") (ReturnType) (Snippet . "ClientMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ClientMetaData") (Description . "") (DisplayText . "ClientMetaData()") (RequiredNamespaceImport) (MethodHeader . "ClientMetaData()") (ReturnType) (Snippet . "ClientMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ClientUpdater") (Description . "") (DisplayText . "ClientUpdater") (RequiredNamespaceImport) (MethodHeader . "ClientUpdater") (ReturnType) (Snippet . "ClientUpdater$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ClientUpdater") (Description . "") (DisplayText . "ClientUpdater(string[] cmdArgs)") (RequiredNamespaceImport) (MethodHeader . "ClientUpdater(string[] cmdArgs)") (ReturnType) (Snippet . "ClientUpdater(${1:string[] cmdArgs})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ColumnMetaDataModel") (Description . "Implements a model for 
") (DisplayText . "ColumnMetaDataModel") (RequiredNamespaceImport) (MethodHeader . "ColumnMetaDataModel") (ReturnType) (Snippet . "ColumnMetaDataModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ColumnMetaDataModel") (Description . "Initializes a new instance of the Fls.Base.ColumnMetaDataModel class.
") (DisplayText . "ColumnMetaDataModel()") (RequiredNamespaceImport) (MethodHeader . "ColumnMetaDataModel()") (ReturnType) (Snippet . "ColumnMetaDataModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ColumnMetaDataType") (Description . "") (DisplayText . "ColumnMetaDataType") (RequiredNamespaceImport) (MethodHeader . "ColumnMetaDataType") (ReturnType) (Snippet . "ColumnMetaDataType$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "ConnectionMetaData") (Description . "this class is used to concentrate the data used to create a proper datasource to bind in the controls
") (DisplayText . "ConnectionMetaData") (RequiredNamespaceImport) (MethodHeader . "ConnectionMetaData") (ReturnType) (Snippet . "ConnectionMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ConnectionMetaData") (Description . "Initializes a new instance of the Fls.VisiTourClient.MetaData.ConnectionMetaData class.
") (DisplayText . "ConnectionMetaData()") (RequiredNamespaceImport) (MethodHeader . "ConnectionMetaData()") (ReturnType) (Snippet . "ConnectionMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ConnectionMetaData") (Description . "Initializes a new instance of the Fls.VisiTourClient.MetaData.ConnectionMetaData class.

tableName: name of the table
propertyName: name of the property
cellType: type of property") (DisplayText . "ConnectionMetaData(string tableName, string propertyName, eControlType cellType)") (RequiredNamespaceImport) (MethodHeader . "ConnectionMetaData(string tableName, string propertyName, eControlType cellType)") (ReturnType) (Snippet . "ConnectionMetaData(${1:string tableName}, ${2:string propertyName}, ${3:eControlType cellType})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "CustomAttributeData") (Description . "") (DisplayText . "CustomAttributeData") (RequiredNamespaceImport) (MethodHeader . "CustomAttributeData") (ReturnType) (Snippet . "CustomAttributeData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "CustomAttributeData") (Description . "") (DisplayText . "CustomAttributeData()") (RequiredNamespaceImport) (MethodHeader . "CustomAttributeData()") (ReturnType) (Snippet . "CustomAttributeData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "CustomDataSourceBase") (Description . "") (DisplayText . "CustomDataSourceBase") (RequiredNamespaceImport) (MethodHeader . "CustomDataSourceBase") (ReturnType) (Snippet . "CustomDataSourceBase$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "CustomDataSourceBase") (Description . "") (DisplayText . "CustomDataSourceBase()") (RequiredNamespaceImport) (MethodHeader . "CustomDataSourceBase()") (ReturnType) (Snippet . "CustomDataSourceBase()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "CustomerMetaData") (Description . "Implements a model for meta data of forms.
") (DisplayText . "CustomerMetaData") (RequiredNamespaceImport) (MethodHeader . "CustomerMetaData") (ReturnType) (Snippet . "CustomerMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "CustomerMetaData") (Description . "") (DisplayText . "CustomerMetaData()") (RequiredNamespaceImport) (MethodHeader . "CustomerMetaData()") (ReturnType) (Snippet . "CustomerMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "CustomizeableDataOutputType") (Description . "") (DisplayText . "CustomizeableDataOutputType") (RequiredNamespaceImport) (MethodHeader . "CustomizeableDataOutputType") (ReturnType) (Snippet . "CustomizeableDataOutputType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "CustomizeableDataOutputType") (Description . "CustomizeableDataOutputType class constructor
") (DisplayText . "CustomizeableDataOutputType()") (RequiredNamespaceImport) (MethodHeader . "CustomizeableDataOutputType()") (ReturnType) (Snippet . "CustomizeableDataOutputType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DayChangeParameters") (Description . "") (DisplayText . "DayChangeParameters") (RequiredNamespaceImport) (MethodHeader . "DayChangeParameters") (ReturnType) (Snippet . "DayChangeParameters$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DayChangeParameters") (Description . "") (DisplayText . "DayChangeParameters(DateTime date, ILabelColor labelColor, bool isDisabled, string additionalInfo)") (RequiredNamespaceImport) (MethodHeader . "DayChangeParameters(DateTime date, ILabelColor labelColor, bool isDisabled, string additionalInfo)") (ReturnType) (Snippet . "DayChangeParameters(${1:DateTime date}, ${2:ILabelColor labelColor}, ${3:bool isDisabled}, ${4:string additionalInfo})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DaySelectionType") (Description . "") (DisplayText . "DaySelectionType") (RequiredNamespaceImport) (MethodHeader . "DaySelectionType") (ReturnType) (Snippet . "DaySelectionType$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DDataBase") (Description . "") (DisplayText . "DDataBase") (RequiredNamespaceImport) (MethodHeader . "DDataBase") (ReturnType) (Snippet . "DDataBase$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DDataBase") (Description . "") (DisplayText . "DDataBase()") (RequiredNamespaceImport) (MethodHeader . "DDataBase()") (ReturnType) (Snippet . "DDataBase()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DecimalBarInputItemViewModel") (Description . "") (DisplayText . "DecimalBarInputItemViewModel") (RequiredNamespaceImport) (MethodHeader . "DecimalBarInputItemViewModel") (ReturnType) (Snippet . "DecimalBarInputItemViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DecimalBarInputItemViewModel") (Description . "") (DisplayText . "DecimalBarInputItemViewModel()") (RequiredNamespaceImport) (MethodHeader . "DecimalBarInputItemViewModel()") (ReturnType) (Snippet . "DecimalBarInputItemViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DecimalConverter") (Description . "") (DisplayText . "DecimalConverter") (RequiredNamespaceImport) (MethodHeader . "DecimalConverter") (ReturnType) (Snippet . "DecimalConverter$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DecimalConverter") (Description . "") (DisplayText . "DecimalConverter()") (RequiredNamespaceImport) (MethodHeader . "DecimalConverter()") (ReturnType) (Snippet . "DecimalConverter()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultBarAndDockingController") (Description . "") (DisplayText . "DefaultBarAndDockingController") (RequiredNamespaceImport) (MethodHeader . "DefaultBarAndDockingController") (ReturnType) (Snippet . "DefaultBarAndDockingController$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultBarAndDockingController") (Description . "") (DisplayText . "DefaultBarAndDockingController()") (RequiredNamespaceImport) (MethodHeader . "DefaultBarAndDockingController()") (ReturnType) (Snippet . "DefaultBarAndDockingController()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultBarAndDockingController") (Description . "") (DisplayText . "DefaultBarAndDockingController(IContainer container)") (RequiredNamespaceImport) (MethodHeader . "DefaultBarAndDockingController(IContainer container)") (ReturnType) (Snippet . "DefaultBarAndDockingController(${1:IContainer container})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultBindingPropertyAttribute") (Description . "") (DisplayText . "DefaultBindingPropertyAttribute") (RequiredNamespaceImport) (MethodHeader . "DefaultBindingPropertyAttribute") (ReturnType) (Snippet . "DefaultBindingPropertyAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultBindingPropertyAttribute") (Description . "") (DisplayText . "DefaultBindingPropertyAttribute()") (RequiredNamespaceImport) (MethodHeader . "DefaultBindingPropertyAttribute()") (ReturnType) (Snippet . "DefaultBindingPropertyAttribute()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultBindingPropertyAttribute") (Description . "") (DisplayText . "DefaultBindingPropertyAttribute(string name)") (RequiredNamespaceImport) (MethodHeader . "DefaultBindingPropertyAttribute(string name)") (ReturnType) (Snippet . "DefaultBindingPropertyAttribute(${1:string name})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultComparer") (Description . "Implements a model for a default comparer.
A comparable class.") (DisplayText . "DefaultComparer<T>") (RequiredNamespaceImport) (MethodHeader . "DefaultComparer<T>") (ReturnType) (Snippet . "DefaultComparer<${1:T}>$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultComparer") (Description . "Initializes a new instance of the T class.
") (DisplayText . "DefaultComparer<T>()") (RequiredNamespaceImport) (MethodHeader . "DefaultComparer<T>()") (ReturnType) (Snippet . "DefaultComparer<${1:T}>()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultEditorsRepository") (Description . "") (DisplayText . "DefaultEditorsRepository") (RequiredNamespaceImport) (MethodHeader . "DefaultEditorsRepository") (ReturnType) (Snippet . "DefaultEditorsRepository$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultEditorsRepository") (Description . "") (DisplayText . "DefaultEditorsRepository()") (RequiredNamespaceImport) (MethodHeader . "DefaultEditorsRepository()") (ReturnType) (Snippet . "DefaultEditorsRepository()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultEventAttribute") (Description . "") (DisplayText . "DefaultEventAttribute") (RequiredNamespaceImport) (MethodHeader . "DefaultEventAttribute") (ReturnType) (Snippet . "DefaultEventAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultEventAttribute") (Description . "") (DisplayText . "DefaultEventAttribute(string name)") (RequiredNamespaceImport) (MethodHeader . "DefaultEventAttribute(string name)") (ReturnType) (Snippet . "DefaultEventAttribute(${1:string name})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultLayoutMeta") (Description . "") (DisplayText . "DefaultLayoutMeta") (RequiredNamespaceImport) (MethodHeader . "DefaultLayoutMeta") (ReturnType) (Snippet . "DefaultLayoutMeta$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultLayoutMeta") (Description . "") (DisplayText . "DefaultLayoutMeta()") (RequiredNamespaceImport) (MethodHeader . "DefaultLayoutMeta()") (ReturnType) (Snippet . "DefaultLayoutMeta()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultLayoutNameType") (Description . "") (DisplayText . "DefaultLayoutNameType") (RequiredNamespaceImport) (MethodHeader . "DefaultLayoutNameType") (ReturnType) (Snippet . "DefaultLayoutNameType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultLayoutNameType") (Description . "") (DisplayText . "DefaultLayoutNameType()") (RequiredNamespaceImport) (MethodHeader . "DefaultLayoutNameType()") (ReturnType) (Snippet . "DefaultLayoutNameType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultMemberAttribute") (Description . "") (DisplayText . "DefaultMemberAttribute") (RequiredNamespaceImport) (MethodHeader . "DefaultMemberAttribute") (ReturnType) (Snippet . "DefaultMemberAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultMemberAttribute") (Description . "") (DisplayText . "DefaultMemberAttribute(string memberName)") (RequiredNamespaceImport) (MethodHeader . "DefaultMemberAttribute(string memberName)") (ReturnType) (Snippet . "DefaultMemberAttribute(${1:string memberName})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultPropertyAttribute") (Description . "") (DisplayText . "DefaultPropertyAttribute") (RequiredNamespaceImport) (MethodHeader . "DefaultPropertyAttribute") (ReturnType) (Snippet . "DefaultPropertyAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultPropertyAttribute") (Description . "") (DisplayText . "DefaultPropertyAttribute(string name)") (RequiredNamespaceImport) (MethodHeader . "DefaultPropertyAttribute(string name)") (ReturnType) (Snippet . "DefaultPropertyAttribute(${1:string name})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultRibbonItemStyle") (Description . "") (DisplayText . "DefaultRibbonItemStyle") (RequiredNamespaceImport) (MethodHeader . "DefaultRibbonItemStyle") (ReturnType) (Snippet . "DefaultRibbonItemStyle$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultRibbonItemStyle") (Description . "") (DisplayText . "DefaultRibbonItemStyle()") (RequiredNamespaceImport) (MethodHeader . "DefaultRibbonItemStyle()") (ReturnType) (Snippet . "DefaultRibbonItemStyle()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultValueAttribute") (Description . "") (DisplayText . "DefaultValueAttribute") (RequiredNamespaceImport) (MethodHeader . "DefaultValueAttribute") (ReturnType) (Snippet . "DefaultValueAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultValueAttribute") (Description . "") (DisplayText . "DefaultValueAttribute(bool value)") (RequiredNamespaceImport) (MethodHeader . "DefaultValueAttribute(bool value)") (ReturnType) (Snippet . "DefaultValueAttribute(${1:bool value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultValueAttribute") (Description . "") (DisplayText . "DefaultValueAttribute(byte value)") (RequiredNamespaceImport) (MethodHeader . "DefaultValueAttribute(byte value)") (ReturnType) (Snippet . "DefaultValueAttribute(${1:byte value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultValueAttribute") (Description . "") (DisplayText . "DefaultValueAttribute(char value)") (RequiredNamespaceImport) (MethodHeader . "DefaultValueAttribute(char value)") (ReturnType) (Snippet . "DefaultValueAttribute(${1:char value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultValueAttribute") (Description . "") (DisplayText . "DefaultValueAttribute(double value)") (RequiredNamespaceImport) (MethodHeader . "DefaultValueAttribute(double value)") (ReturnType) (Snippet . "DefaultValueAttribute(${1:double value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultValueAttribute") (Description . "") (DisplayText . "DefaultValueAttribute(float value)") (RequiredNamespaceImport) (MethodHeader . "DefaultValueAttribute(float value)") (ReturnType) (Snippet . "DefaultValueAttribute(${1:float value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultValueAttribute") (Description . "") (DisplayText . "DefaultValueAttribute(int value)") (RequiredNamespaceImport) (MethodHeader . "DefaultValueAttribute(int value)") (ReturnType) (Snippet . "DefaultValueAttribute(${1:int value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultValueAttribute") (Description . "") (DisplayText . "DefaultValueAttribute(long value)") (RequiredNamespaceImport) (MethodHeader . "DefaultValueAttribute(long value)") (ReturnType) (Snippet . "DefaultValueAttribute(${1:long value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultValueAttribute") (Description . "") (DisplayText . "DefaultValueAttribute(object value)") (RequiredNamespaceImport) (MethodHeader . "DefaultValueAttribute(object value)") (ReturnType) (Snippet . "DefaultValueAttribute(${1:object value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultValueAttribute") (Description . "") (DisplayText . "DefaultValueAttribute(short value)") (RequiredNamespaceImport) (MethodHeader . "DefaultValueAttribute(short value)") (ReturnType) (Snippet . "DefaultValueAttribute(${1:short value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultValueAttribute") (Description . "") (DisplayText . "DefaultValueAttribute(string value)") (RequiredNamespaceImport) (MethodHeader . "DefaultValueAttribute(string value)") (ReturnType) (Snippet . "DefaultValueAttribute(${1:string value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultValueAttribute") (Description . "") (DisplayText . "DefaultValueAttribute(Type type, string value)") (RequiredNamespaceImport) (MethodHeader . "DefaultValueAttribute(Type type, string value)") (ReturnType) (Snippet . "DefaultValueAttribute(${1:Type type}, ${2:string value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "Delegate") (Description . "") (DisplayText . "Delegate") (RequiredNamespaceImport) (MethodHeader . "Delegate") (ReturnType) (Snippet . "Delegate$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "Delegate") (Description . "") (DisplayText . "Delegate(object target, string method)") (RequiredNamespaceImport) (MethodHeader . "Delegate(object target, string method)") (ReturnType) (Snippet . "Delegate(${1:object target}, ${2:string method})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "Delegate") (Description . "") (DisplayText . "Delegate(Type target, string method)") (RequiredNamespaceImport) (MethodHeader . "Delegate(Type target, string method)") (ReturnType) (Snippet . "Delegate(${1:Type target}, ${2:string method})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DependencyMappingType") (Description . "") (DisplayText . "DependencyMappingType") (RequiredNamespaceImport) (MethodHeader . "DependencyMappingType") (ReturnType) (Snippet . "DependencyMappingType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DependencyMappingType") (Description . "DependencyMappingType class constructor
") (DisplayText . "DependencyMappingType()") (RequiredNamespaceImport) (MethodHeader . "DependencyMappingType()") (ReturnType) (Snippet . "DependencyMappingType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DesignerAttribute") (Description . "") (DisplayText . "DesignerAttribute") (RequiredNamespaceImport) (MethodHeader . "DesignerAttribute") (ReturnType) (Snippet . "DesignerAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DesignerAttribute") (Description . "") (DisplayText . "DesignerAttribute(string designerTypeName)") (RequiredNamespaceImport) (MethodHeader . "DesignerAttribute(string designerTypeName)") (ReturnType) (Snippet . "DesignerAttribute(${1:string designerTypeName})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DesignerAttribute") (Description . "") (DisplayText . "DesignerAttribute(string designerTypeName, string designerBaseTypeName)") (RequiredNamespaceImport) (MethodHeader . "DesignerAttribute(string designerTypeName, string designerBaseTypeName)") (ReturnType) (Snippet . "DesignerAttribute(${1:string designerTypeName}, ${2:string designerBaseTypeName})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DesignerAttribute") (Description . "") (DisplayText . "DesignerAttribute(string designerTypeName, Type designerBaseType)") (RequiredNamespaceImport) (MethodHeader . "DesignerAttribute(string designerTypeName, Type designerBaseType)") (ReturnType) (Snippet . "DesignerAttribute(${1:string designerTypeName}, ${2:Type designerBaseType})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DesignerAttribute") (Description . "") (DisplayText . "DesignerAttribute(Type designerType)") (RequiredNamespaceImport) (MethodHeader . "DesignerAttribute(Type designerType)") (ReturnType) (Snippet . "DesignerAttribute(${1:Type designerType})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DesignerAttribute") (Description . "") (DisplayText . "DesignerAttribute(Type designerType, Type designerBaseType)") (RequiredNamespaceImport) (MethodHeader . "DesignerAttribute(Type designerType, Type designerBaseType)") (ReturnType) (Snippet . "DesignerAttribute(${1:Type designerType}, ${2:Type designerBaseType})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DesignerCategoryAttribute") (Description . "") (DisplayText . "DesignerCategoryAttribute") (RequiredNamespaceImport) (MethodHeader . "DesignerCategoryAttribute") (ReturnType) (Snippet . "DesignerCategoryAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DesignerCategoryAttribute") (Description . "") (DisplayText . "DesignerCategoryAttribute()") (RequiredNamespaceImport) (MethodHeader . "DesignerCategoryAttribute()") (ReturnType) (Snippet . "DesignerCategoryAttribute()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DesignerCategoryAttribute") (Description . "") (DisplayText . "DesignerCategoryAttribute(string category)") (RequiredNamespaceImport) (MethodHeader . "DesignerCategoryAttribute(string category)") (ReturnType) (Snippet . "DesignerCategoryAttribute(${1:string category})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DesignerSerializationVisibility") (Description . "") (DisplayText . "DesignerSerializationVisibility") (RequiredNamespaceImport) (MethodHeader . "DesignerSerializationVisibility") (ReturnType) (Snippet . "DesignerSerializationVisibility$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DesignerSerializationVisibilityAttribute") (Description . "") (DisplayText . "DesignerSerializationVisibilityAttribute") (RequiredNamespaceImport) (MethodHeader . "DesignerSerializationVisibilityAttribute") (ReturnType) (Snippet . "DesignerSerializationVisibilityAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DesignerSerializationVisibilityAttribute") (Description . "") (DisplayText . "DesignerSerializationVisibilityAttribute(DesignerSerializationVisibility visibility)") (RequiredNamespaceImport) (MethodHeader . "DesignerSerializationVisibilityAttribute(DesignerSerializationVisibility visibility)") (ReturnType) (Snippet . "DesignerSerializationVisibilityAttribute(${1:DesignerSerializationVisibility visibility})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DesignOnlyAttribute") (Description . "") (DisplayText . "DesignOnlyAttribute") (RequiredNamespaceImport) (MethodHeader . "DesignOnlyAttribute") (ReturnType) (Snippet . "DesignOnlyAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DesignOnlyAttribute") (Description . "") (DisplayText . "DesignOnlyAttribute(bool isDesignOnly)") (RequiredNamespaceImport) (MethodHeader . "DesignOnlyAttribute(bool isDesignOnly)") (ReturnType) (Snippet . "DesignOnlyAttribute(${1:bool isDesignOnly})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "Diagnostic") (Description . "") (DisplayText . "Diagnostic") (RequiredNamespaceImport) (MethodHeader . "Diagnostic") (ReturnType) (Snippet . "Diagnostic$0") (Kind . "Namespace") (IsSuggestionMode . :json-false)) ((CompletionText . "DirtyValidator") (Description . "") (DisplayText . "DirtyValidator") (RequiredNamespaceImport) (MethodHeader . "DirtyValidator") (ReturnType) (Snippet . "DirtyValidator$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DirtyValidator") (Description . "") (DisplayText . "DirtyValidator()") (RequiredNamespaceImport) (MethodHeader . "DirtyValidator()") (ReturnType) (Snippet . "DirtyValidator()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DisplayNameAttribute") (Description . "") (DisplayText . "DisplayNameAttribute") (RequiredNamespaceImport) (MethodHeader . "DisplayNameAttribute") (ReturnType) (Snippet . "DisplayNameAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DisplayNameAttribute") (Description . "") (DisplayText . "DisplayNameAttribute()") (RequiredNamespaceImport) (MethodHeader . "DisplayNameAttribute()") (ReturnType) (Snippet . "DisplayNameAttribute()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DisplayNameAttribute") (Description . "") (DisplayText . "DisplayNameAttribute(string displayName)") (RequiredNamespaceImport) (MethodHeader . "DisplayNameAttribute(string displayName)") (ReturnType) (Snippet . "DisplayNameAttribute(${1:string displayName})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DisplayTextEvaluator") (Description . "") (DisplayText . "DisplayTextEvaluator") (RequiredNamespaceImport) (MethodHeader . "DisplayTextEvaluator") (ReturnType) (Snippet . "DisplayTextEvaluator$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DisplayTextEvaluator") (Description . "") (DisplayText . "DisplayTextEvaluator(IDisplayTextEvaluatorOwner owner)") (RequiredNamespaceImport) (MethodHeader . "DisplayTextEvaluator(IDisplayTextEvaluatorOwner owner)") (ReturnType) (Snippet . "DisplayTextEvaluator(${1:IDisplayTextEvaluatorOwner owner})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DistanceMetaData") (Description . "") (DisplayText . "DistanceMetaData") (RequiredNamespaceImport) (MethodHeader . "DistanceMetaData") (ReturnType) (Snippet . "DistanceMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DistanceMetaData") (Description . "") (DisplayText . "DistanceMetaData()") (RequiredNamespaceImport) (MethodHeader . "DistanceMetaData()") (ReturnType) (Snippet . "DistanceMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DLocalizationType") (Description . "") (DisplayText . "DLocalizationType") (RequiredNamespaceImport) (MethodHeader . "DLocalizationType") (ReturnType) (Snippet . "DLocalizationType$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DOAbsenceType") (Description . "") (DisplayText . "DOAbsenceType") (RequiredNamespaceImport) (MethodHeader . "DOAbsenceType") (ReturnType) (Snippet . "DOAbsenceType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOAbsenceType") (Description . "") (DisplayText . "DOAbsenceType()") (RequiredNamespaceImport) (MethodHeader . "DOAbsenceType()") (ReturnType) (Snippet . "DOAbsenceType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOArticle") (Description . "") (DisplayText . "DOArticle") (RequiredNamespaceImport) (MethodHeader . "DOArticle") (ReturnType) (Snippet . "DOArticle$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOArticle") (Description . "") (DisplayText . "DOArticle()") (RequiredNamespaceImport) (MethodHeader . "DOArticle()") (ReturnType) (Snippet . "DOArticle()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOAsset") (Description . "") (DisplayText . "DOAsset") (RequiredNamespaceImport) (MethodHeader . "DOAsset") (ReturnType) (Snippet . "DOAsset$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOAsset") (Description . "") (DisplayText . "DOAsset()") (RequiredNamespaceImport) (MethodHeader . "DOAsset()") (ReturnType) (Snippet . "DOAsset()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOAssetPurpose") (Description . "") (DisplayText . "DOAssetPurpose") (RequiredNamespaceImport) (MethodHeader . "DOAssetPurpose") (ReturnType) (Snippet . "DOAssetPurpose$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOAssetPurpose") (Description . "") (DisplayText . "DOAssetPurpose()") (RequiredNamespaceImport) (MethodHeader . "DOAssetPurpose()") (ReturnType) (Snippet . "DOAssetPurpose()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOAttachmentFilter") (Description . "") (DisplayText . "DOAttachmentFilter") (RequiredNamespaceImport) (MethodHeader . "DOAttachmentFilter") (ReturnType) (Snippet . "DOAttachmentFilter$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOAttachmentFilter") (Description . "") (DisplayText . "DOAttachmentFilter()") (RequiredNamespaceImport) (MethodHeader . "DOAttachmentFilter()") (ReturnType) (Snippet . "DOAttachmentFilter()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOAttachments") (Description . "") (DisplayText . "DOAttachments") (RequiredNamespaceImport) (MethodHeader . "DOAttachments") (ReturnType) (Snippet . "DOAttachments$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOAttachments") (Description . "") (DisplayText . "DOAttachments()") (RequiredNamespaceImport) (MethodHeader . "DOAttachments()") (ReturnType) (Snippet . "DOAttachments()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOCallClassification") (Description . "") (DisplayText . "DOCallClassification") (RequiredNamespaceImport) (MethodHeader . "DOCallClassification") (ReturnType) (Snippet . "DOCallClassification$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOCallClassification") (Description . "") (DisplayText . "DOCallClassification()") (RequiredNamespaceImport) (MethodHeader . "DOCallClassification()") (ReturnType) (Snippet . "DOCallClassification()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOCallstate") (Description . "") (DisplayText . "DOCallstate") (RequiredNamespaceImport) (MethodHeader . "DOCallstate") (ReturnType) (Snippet . "DOCallstate$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOCallstate") (Description . "") (DisplayText . "DOCallstate()") (RequiredNamespaceImport) (MethodHeader . "DOCallstate()") (ReturnType) (Snippet . "DOCallstate()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DockPanelDesignTimeActionsProvider") (Description . "") (DisplayText . "DockPanelDesignTimeActionsProvider") (RequiredNamespaceImport) (MethodHeader . "DockPanelDesignTimeActionsProvider") (ReturnType) (Snippet . "DockPanelDesignTimeActionsProvider$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DockPanelDesignTimeActionsProvider") (Description . "") (DisplayText . "DockPanelDesignTimeActionsProvider()") (RequiredNamespaceImport) (MethodHeader . "DockPanelDesignTimeActionsProvider()") (ReturnType) (Snippet . "DockPanelDesignTimeActionsProvider()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DockPanelDesignTimeBoundsProvider") (Description . "") (DisplayText . "DockPanelDesignTimeBoundsProvider") (RequiredNamespaceImport) (MethodHeader . "DockPanelDesignTimeBoundsProvider") (ReturnType) (Snippet . "DockPanelDesignTimeBoundsProvider$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DockPanelDesignTimeBoundsProvider") (Description . "") (DisplayText . "DockPanelDesignTimeBoundsProvider()") (RequiredNamespaceImport) (MethodHeader . "DockPanelDesignTimeBoundsProvider()") (ReturnType) (Snippet . "DockPanelDesignTimeBoundsProvider()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOClientUpdateHistory") (Description . "") (DisplayText . "DOClientUpdateHistory") (RequiredNamespaceImport) (MethodHeader . "DOClientUpdateHistory") (ReturnType) (Snippet . "DOClientUpdateHistory$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOClientUpdateHistory") (Description . "") (DisplayText . "DOClientUpdateHistory()") (RequiredNamespaceImport) (MethodHeader . "DOClientUpdateHistory()") (ReturnType) (Snippet . "DOClientUpdateHistory()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DODataSource") (Description . "") (DisplayText . "DODataSource") (RequiredNamespaceImport) (MethodHeader . "DODataSource") (ReturnType) (Snippet . "DODataSource$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DODataSource") (Description . "") (DisplayText . "DODataSource(DEntity entity, IDOBaseRepository rep, IEntityValidation validator = null, eInitAction initAction = LoadAll)") (RequiredNamespaceImport) (MethodHeader . "DODataSource(DEntity entity, IDOBaseRepository rep, IEntityValidation validator = null, eInitAction initAction = LoadAll)") (ReturnType) (Snippet . "DODataSource(${1:DEntity entity}, ${2:IDOBaseRepository rep}, ${3:IEntityValidation validator = null}, ${4:eInitAction initAction = LoadAll})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DODataSource") (Description . "") (DisplayText . "DODataSource(DEntity entity, IDOBaseRepository rep, IEnumerable<DProperty> propertiesToRead, IEntityValidation validator = null)") (RequiredNamespaceImport) (MethodHeader . "DODataSource(DEntity entity, IDOBaseRepository rep, IEnumerable<DProperty> propertiesToRead, IEntityValidation validator = null)") (ReturnType) (Snippet . "DODataSource(${1:DEntity entity}, ${2:IDOBaseRepository rep}, ${3:IEnumerable<DProperty> propertiesToRead}, ${4:IEntityValidation validator = null})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DODataSource") (Description . "") (DisplayText . "DODataSource(DEntity entity, IDOBaseRepository rep, IEnumerable<string> propertyNames, IEntityValidation validator = null, eInitAction initAction = LoadAll)") (RequiredNamespaceImport) (MethodHeader . "DODataSource(DEntity entity, IDOBaseRepository rep, IEnumerable<string> propertyNames, IEntityValidation validator = null, eInitAction initAction = LoadAll)") (ReturnType) (Snippet . "DODataSource(${1:DEntity entity}, ${2:IDOBaseRepository rep}, ${3:IEnumerable<string> propertyNames}, ${4:IEntityValidation validator = null}, ${5:eInitAction initAction = LoadAll})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DODataSourceFactory") (Description . "") (DisplayText . "DODataSourceFactory") (RequiredNamespaceImport) (MethodHeader . "DODataSourceFactory") (ReturnType) (Snippet . "DODataSourceFactory$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DODataSourceFactory") (Description . "") (DisplayText . "DODataSourceFactory(IDOBaseRepository rep)") (RequiredNamespaceImport) (MethodHeader . "DODataSourceFactory(IDOBaseRepository rep)") (ReturnType) (Snippet . "DODataSourceFactory(${1:IDOBaseRepository rep})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DODataView") (Description . "") (DisplayText . "DODataView") (RequiredNamespaceImport) (MethodHeader . "DODataView") (ReturnType) (Snippet . "DODataView$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DODataView") (Description . "") (DisplayText . "DODataView(DODataSource dataSource, string clientFilterId = null, eInitAction initAction = LoadAll)") (RequiredNamespaceImport) (MethodHeader . "DODataView(DODataSource dataSource, string clientFilterId = null, eInitAction initAction = LoadAll)") (ReturnType) (Snippet . "DODataView(${1:DODataSource dataSource}, ${2:string clientFilterId = null}, ${3:eInitAction initAction = LoadAll})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DODataViewDirect") (Description . "") (DisplayText . "DODataViewDirect") (RequiredNamespaceImport) (MethodHeader . "DODataViewDirect") (ReturnType) (Snippet . "DODataViewDirect$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DODataViewDirect") (Description . "") (DisplayText . "DODataViewDirect(DODataSource dataSource, string clientFilterId = null, eInitAction initAction = LoadAll)") (RequiredNamespaceImport) (MethodHeader . "DODataViewDirect(DODataSource dataSource, string clientFilterId = null, eInitAction initAction = LoadAll)") (ReturnType) (Snippet . "DODataViewDirect(${1:DODataSource dataSource}, ${2:string clientFilterId = null}, ${3:eInitAction initAction = LoadAll})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumAppointSuggOverbooking") (Description . "") (DisplayText . "DOEnumAppointSuggOverbooking") (RequiredNamespaceImport) (MethodHeader . "DOEnumAppointSuggOverbooking") (ReturnType) (Snippet . "DOEnumAppointSuggOverbooking$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumAppointSuggOverbooking") (Description . "") (DisplayText . "DOEnumAppointSuggOverbooking()") (RequiredNamespaceImport) (MethodHeader . "DOEnumAppointSuggOverbooking()") (ReturnType) (Snippet . "DOEnumAppointSuggOverbooking()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumAssetPurpose") (Description . "") (DisplayText . "DOEnumAssetPurpose") (RequiredNamespaceImport) (MethodHeader . "DOEnumAssetPurpose") (ReturnType) (Snippet . "DOEnumAssetPurpose$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumAssetPurpose") (Description . "") (DisplayText . "DOEnumAssetPurpose()") (RequiredNamespaceImport) (MethodHeader . "DOEnumAssetPurpose()") (ReturnType) (Snippet . "DOEnumAssetPurpose()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumMaterialTableType") (Description . "") (DisplayText . "DOEnumMaterialTableType") (RequiredNamespaceImport) (MethodHeader . "DOEnumMaterialTableType") (ReturnType) (Snippet . "DOEnumMaterialTableType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumMaterialTableType") (Description . "") (DisplayText . "DOEnumMaterialTableType()") (RequiredNamespaceImport) (MethodHeader . "DOEnumMaterialTableType()") (ReturnType) (Snippet . "DOEnumMaterialTableType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumPerfomanceRecordBaseType") (Description . "") (DisplayText . "DOEnumPerfomanceRecordBaseType") (RequiredNamespaceImport) (MethodHeader . "DOEnumPerfomanceRecordBaseType") (ReturnType) (Snippet . "DOEnumPerfomanceRecordBaseType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumPerfomanceRecordBaseType") (Description . "") (DisplayText . "DOEnumPerfomanceRecordBaseType()") (RequiredNamespaceImport) (MethodHeader . "DOEnumPerfomanceRecordBaseType()") (ReturnType) (Snippet . "DOEnumPerfomanceRecordBaseType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumPerformanceRecordStatus") (Description . "") (DisplayText . "DOEnumPerformanceRecordStatus") (RequiredNamespaceImport) (MethodHeader . "DOEnumPerformanceRecordStatus") (ReturnType) (Snippet . "DOEnumPerformanceRecordStatus$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumPerformanceRecordStatus") (Description . "") (DisplayText . "DOEnumPerformanceRecordStatus()") (RequiredNamespaceImport) (MethodHeader . "DOEnumPerformanceRecordStatus()") (ReturnType) (Snippet . "DOEnumPerformanceRecordStatus()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumTourDataAbsence") (Description . "") (DisplayText . "DOEnumTourDataAbsence") (RequiredNamespaceImport) (MethodHeader . "DOEnumTourDataAbsence") (ReturnType) (Snippet . "DOEnumTourDataAbsence$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumTourDataAbsence") (Description . "") (DisplayText . "DOEnumTourDataAbsence()") (RequiredNamespaceImport) (MethodHeader . "DOEnumTourDataAbsence()") (ReturnType) (Snippet . "DOEnumTourDataAbsence()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOLargeScaleOperation") (Description . "") (DisplayText . "DOLargeScaleOperation") (RequiredNamespaceImport) (MethodHeader . "DOLargeScaleOperation") (ReturnType) (Snippet . "DOLargeScaleOperation$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOLargeScaleOperation") (Description . "") (DisplayText . "DOLargeScaleOperation()") (RequiredNamespaceImport) (MethodHeader . "DOLargeScaleOperation()") (ReturnType) (Snippet . "DOLargeScaleOperation()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOLargeScaleOperationPc") (Description . "") (DisplayText . "DOLargeScaleOperationPc") (RequiredNamespaceImport) (MethodHeader . "DOLargeScaleOperationPc") (ReturnType) (Snippet . "DOLargeScaleOperationPc$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOLargeScaleOperationPc") (Description . "") (DisplayText . "DOLargeScaleOperationPc()") (RequiredNamespaceImport) (MethodHeader . "DOLargeScaleOperationPc()") (ReturnType) (Snippet . "DOLargeScaleOperationPc()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOManufacturer") (Description . "") (DisplayText . "DOManufacturer") (RequiredNamespaceImport) (MethodHeader . "DOManufacturer") (ReturnType) (Snippet . "DOManufacturer$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOManufacturer") (Description . "") (DisplayText . "DOManufacturer()") (RequiredNamespaceImport) (MethodHeader . "DOManufacturer()") (ReturnType) (Snippet . "DOManufacturer()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMasterDataLog") (Description . "") (DisplayText . "DOMasterDataLog") (RequiredNamespaceImport) (MethodHeader . "DOMasterDataLog") (ReturnType) (Snippet . "DOMasterDataLog$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMasterDataLog") (Description . "") (DisplayText . "DOMasterDataLog()") (RequiredNamespaceImport) (MethodHeader . "DOMasterDataLog()") (ReturnType) (Snippet . "DOMasterDataLog()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMasterRoute") (Description . "") (DisplayText . "DOMasterRoute") (RequiredNamespaceImport) (MethodHeader . "DOMasterRoute") (ReturnType) (Snippet . "DOMasterRoute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMasterRoute") (Description . "") (DisplayText . "DOMasterRoute()") (RequiredNamespaceImport) (MethodHeader . "DOMasterRoute()") (ReturnType) (Snippet . "DOMasterRoute()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMasterRoutePc") (Description . "") (DisplayText . "DOMasterRoutePc") (RequiredNamespaceImport) (MethodHeader . "DOMasterRoutePc") (ReturnType) (Snippet . "DOMasterRoutePc$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMasterRoutePc") (Description . "") (DisplayText . "DOMasterRoutePc()") (RequiredNamespaceImport) (MethodHeader . "DOMasterRoutePc()") (ReturnType) (Snippet . "DOMasterRoutePc()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterial") (Description . "") (DisplayText . "DOMaterial") (RequiredNamespaceImport) (MethodHeader . "DOMaterial") (ReturnType) (Snippet . "DOMaterial$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterial") (Description . "") (DisplayText . "DOMaterial()") (RequiredNamespaceImport) (MethodHeader . "DOMaterial()") (ReturnType) (Snippet . "DOMaterial()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialGroup") (Description . "") (DisplayText . "DOMaterialGroup") (RequiredNamespaceImport) (MethodHeader . "DOMaterialGroup") (ReturnType) (Snippet . "DOMaterialGroup$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialGroup") (Description . "") (DisplayText . "DOMaterialGroup()") (RequiredNamespaceImport) (MethodHeader . "DOMaterialGroup()") (ReturnType) (Snippet . "DOMaterialGroup()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialMaster") (Description . "") (DisplayText . "DOMaterialMaster") (RequiredNamespaceImport) (MethodHeader . "DOMaterialMaster") (ReturnType) (Snippet . "DOMaterialMaster$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialMaster") (Description . "") (DisplayText . "DOMaterialMaster()") (RequiredNamespaceImport) (MethodHeader . "DOMaterialMaster()") (ReturnType) (Snippet . "DOMaterialMaster()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialOrder") (Description . "") (DisplayText . "DOMaterialOrder") (RequiredNamespaceImport) (MethodHeader . "DOMaterialOrder") (ReturnType) (Snippet . "DOMaterialOrder$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialOrder") (Description . "") (DisplayText . "DOMaterialOrder()") (RequiredNamespaceImport) (MethodHeader . "DOMaterialOrder()") (ReturnType) (Snippet . "DOMaterialOrder()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialPosting") (Description . "") (DisplayText . "DOMaterialPosting") (RequiredNamespaceImport) (MethodHeader . "DOMaterialPosting") (ReturnType) (Snippet . "DOMaterialPosting$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialPosting") (Description . "") (DisplayText . "DOMaterialPosting()") (RequiredNamespaceImport) (MethodHeader . "DOMaterialPosting()") (ReturnType) (Snippet . "DOMaterialPosting()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialRelevance") (Description . "") (DisplayText . "DOMaterialRelevance") (RequiredNamespaceImport) (MethodHeader . "DOMaterialRelevance") (ReturnType) (Snippet . "DOMaterialRelevance$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialRelevance") (Description . "") (DisplayText . "DOMaterialRelevance()") (RequiredNamespaceImport) (MethodHeader . "DOMaterialRelevance()") (ReturnType) (Snippet . "DOMaterialRelevance()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialStock") (Description . "") (DisplayText . "DOMaterialStock") (RequiredNamespaceImport) (MethodHeader . "DOMaterialStock") (ReturnType) (Snippet . "DOMaterialStock$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialStock") (Description . "") (DisplayText . "DOMaterialStock()") (RequiredNamespaceImport) (MethodHeader . "DOMaterialStock()") (ReturnType) (Snippet . "DOMaterialStock()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialStockLocation") (Description . "") (DisplayText . "DOMaterialStockLocation") (RequiredNamespaceImport) (MethodHeader . "DOMaterialStockLocation") (ReturnType) (Snippet . "DOMaterialStockLocation$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialStockLocation") (Description . "") (DisplayText . "DOMaterialStockLocation()") (RequiredNamespaceImport) (MethodHeader . "DOMaterialStockLocation()") (ReturnType) (Snippet . "DOMaterialStockLocation()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialStockLocationMA") (Description . "") (DisplayText . "DOMaterialStockLocationMA") (RequiredNamespaceImport) (MethodHeader . "DOMaterialStockLocationMA") (ReturnType) (Snippet . "DOMaterialStockLocationMA$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialStockLocationMA") (Description . "") (DisplayText . "DOMaterialStockLocationMA()") (RequiredNamespaceImport) (MethodHeader . "DOMaterialStockLocationMA()") (ReturnType) (Snippet . "DOMaterialStockLocationMA()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMobileConfiguration") (Description . "") (DisplayText . "DOMobileConfiguration") (RequiredNamespaceImport) (MethodHeader . "DOMobileConfiguration") (ReturnType) (Snippet . "DOMobileConfiguration$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMobileConfiguration") (Description . "") (DisplayText . "DOMobileConfiguration()") (RequiredNamespaceImport) (MethodHeader . "DOMobileConfiguration()") (ReturnType) (Snippet . "DOMobileConfiguration()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMSDArticles") (Description . "") (DisplayText . "DOMSDArticles") (RequiredNamespaceImport) (MethodHeader . "DOMSDArticles") (ReturnType) (Snippet . "DOMSDArticles$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMSDArticles") (Description . "") (DisplayText . "DOMSDArticles()") (RequiredNamespaceImport) (MethodHeader . "DOMSDArticles()") (ReturnType) (Snippet . "DOMSDArticles()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOOrderPackageLocation") (Description . "") (DisplayText . "DOOrderPackageLocation") (RequiredNamespaceImport) (MethodHeader . "DOOrderPackageLocation") (ReturnType) (Snippet . "DOOrderPackageLocation$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOOrderPackageLocation") (Description . "") (DisplayText . "DOOrderPackageLocation()") (RequiredNamespaceImport) (MethodHeader . "DOOrderPackageLocation()") (ReturnType) (Snippet . "DOOrderPackageLocation()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOOrderPackageLocation2TaskType") (Description . "") (DisplayText . "DOOrderPackageLocation2TaskType") (RequiredNamespaceImport) (MethodHeader . "DOOrderPackageLocation2TaskType") (ReturnType) (Snippet . "DOOrderPackageLocation2TaskType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOOrderPackageLocation2TaskType") (Description . "") (DisplayText . "DOOrderPackageLocation2TaskType()") (RequiredNamespaceImport) (MethodHeader . "DOOrderPackageLocation2TaskType()") (ReturnType) (Snippet . "DOOrderPackageLocation2TaskType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOOrderVerification") (Description . "") (DisplayText . "DOOrderVerification") (RequiredNamespaceImport) (MethodHeader . "DOOrderVerification") (ReturnType) (Snippet . "DOOrderVerification$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOOrderVerification") (Description . "") (DisplayText . "DOOrderVerification()") (RequiredNamespaceImport) (MethodHeader . "DOOrderVerification()") (ReturnType) (Snippet . "DOOrderVerification()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOPurchasePackageHistory") (Description . "") (DisplayText . "DOPurchasePackageHistory") (RequiredNamespaceImport) (MethodHeader . "DOPurchasePackageHistory") (ReturnType) (Snippet . "DOPurchasePackageHistory$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOPurchasePackageHistory") (Description . "") (DisplayText . "DOPurchasePackageHistory()") (RequiredNamespaceImport) (MethodHeader . "DOPurchasePackageHistory()") (ReturnType) (Snippet . "DOPurchasePackageHistory()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOSCService2MaterialType") (Description . "") (DisplayText . "DOSCService2MaterialType") (RequiredNamespaceImport) (MethodHeader . "DOSCService2MaterialType") (ReturnType) (Snippet . "DOSCService2MaterialType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOSCService2MaterialType") (Description . "") (DisplayText . "DOSCService2MaterialType()") (RequiredNamespaceImport) (MethodHeader . "DOSCService2MaterialType()") (ReturnType) (Snippet . "DOSCService2MaterialType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOSCServiceDefault") (Description . "") (DisplayText . "DOSCServiceDefault") (RequiredNamespaceImport) (MethodHeader . "DOSCServiceDefault") (ReturnType) (Snippet . "DOSCServiceDefault$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOSCServiceDefault") (Description . "") (DisplayText . "DOSCServiceDefault()") (RequiredNamespaceImport) (MethodHeader . "DOSCServiceDefault()") (ReturnType) (Snippet . "DOSCServiceDefault()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOSyncData") (Description . "") (DisplayText . "DOSyncData") (RequiredNamespaceImport) (MethodHeader . "DOSyncData") (ReturnType) (Snippet . "DOSyncData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOSyncData") (Description . "") (DisplayText . "DOSyncData()") (RequiredNamespaceImport) (MethodHeader . "DOSyncData()") (ReturnType) (Snippet . "DOSyncData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOToolTourData") (Description . "") (DisplayText . "DOToolTourData") (RequiredNamespaceImport) (MethodHeader . "DOToolTourData") (ReturnType) (Snippet . "DOToolTourData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOToolTourData") (Description . "") (DisplayText . "DOToolTourData()") (RequiredNamespaceImport) (MethodHeader . "DOToolTourData()") (ReturnType) (Snippet . "DOToolTourData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTourData") (Description . "") (DisplayText . "DOTourData") (RequiredNamespaceImport) (MethodHeader . "DOTourData") (ReturnType) (Snippet . "DOTourData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTourData") (Description . "") (DisplayText . "DOTourData()") (RequiredNamespaceImport) (MethodHeader . "DOTourData()") (ReturnType) (Snippet . "DOTourData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOWasteType") (Description . "") (DisplayText . "DOWasteType") (RequiredNamespaceImport) (MethodHeader . "DOWasteType") (ReturnType) (Snippet . "DOWasteType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOWasteType") (Description . "") (DisplayText . "DOWasteType()") (RequiredNamespaceImport) (MethodHeader . "DOWasteType()") (ReturnType) (Snippet . "DOWasteType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DownloadWorkFlowRequest") (Description . "") (DisplayText . "DownloadWorkFlowRequest") (RequiredNamespaceImport) (MethodHeader . "DownloadWorkFlowRequest") (ReturnType) (Snippet . "DownloadWorkFlowRequest$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DownloadWorkFlowRequest") (Description . "") (DisplayText . "DownloadWorkFlowRequest()") (RequiredNamespaceImport) (MethodHeader . "DownloadWorkFlowRequest()") (ReturnType) (Snippet . "DownloadWorkFlowRequest()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DPacket") (Description . "") (DisplayText . "DPacket") (RequiredNamespaceImport) (MethodHeader . "DPacket") (ReturnType) (Snippet . "DPacket$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DragHandlerEventArgs") (Description . "Implements a model for drag event arguments.
") (DisplayText . "DragHandlerEventArgs") (RequiredNamespaceImport) (MethodHeader . "DragHandlerEventArgs") (ReturnType) (Snippet . "DragHandlerEventArgs$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DragHandlerEventArgs") (Description . "Initializes a new instance of the Fls.Controls.Forms.DevExpressBase.DragHandlerEventArgs class.

state: The drag state.") (DisplayText . "DragHandlerEventArgs(DragState state)") (RequiredNamespaceImport) (MethodHeader . "DragHandlerEventArgs(DragState state)") (ReturnType) (Snippet . "DragHandlerEventArgs(${1:DragState state})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DragHelperEventArgs") (Description . "Implements a model for 
") (DisplayText . "DragHelperEventArgs") (RequiredNamespaceImport) (MethodHeader . "DragHelperEventArgs") (ReturnType) (Snippet . "DragHelperEventArgs$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DragHelperEventArgs") (Description . "") (DisplayText . "DragHelperEventArgs()") (RequiredNamespaceImport) (MethodHeader . "DragHelperEventArgs()") (ReturnType) (Snippet . "DragHelperEventArgs()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DragHelperEventArgs") (Description . "") (DisplayText . "DragHelperEventArgs(DragDropHelper helper)") (RequiredNamespaceImport) (MethodHeader . "DragHelperEventArgs(DragDropHelper helper)") (ReturnType) (Snippet . "DragHelperEventArgs(${1:DragDropHelper helper})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DragState") (Description . "The different states with in a drag and drop. 
") (DisplayText . "DragState") (RequiredNamespaceImport) (MethodHeader . "DragState") (ReturnType) (Snippet . "DragState$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DriverManagementViewModel") (Description . "") (DisplayText . "DriverManagementViewModel") (RequiredNamespaceImport) (MethodHeader . "DriverManagementViewModel") (ReturnType) (Snippet . "DriverManagementViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DriverManagementViewModel") (Description . "") (DisplayText . "DriverManagementViewModel()") (RequiredNamespaceImport) (MethodHeader . "DriverManagementViewModel()") (ReturnType) (Snippet . "DriverManagementViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DSearchType") (Description . "") (DisplayText . "DSearchType") (RequiredNamespaceImport) (MethodHeader . "DSearchType") (ReturnType) (Snippet . "DSearchType$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DuplicateWaitObjectException") (Description . "") (DisplayText . "DuplicateWaitObjectException") (RequiredNamespaceImport) (MethodHeader . "DuplicateWaitObjectException") (ReturnType) (Snippet . "DuplicateWaitObjectException$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DuplicateWaitObjectException") (Description . "") (DisplayText . "DuplicateWaitObjectException()") (RequiredNamespaceImport) (MethodHeader . "DuplicateWaitObjectException()") (ReturnType) (Snippet . "DuplicateWaitObjectException()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DuplicateWaitObjectException") (Description . "") (DisplayText . "DuplicateWaitObjectException(SerializationInfo info, StreamingContext context)") (RequiredNamespaceImport) (MethodHeader . "DuplicateWaitObjectException(SerializationInfo info, StreamingContext context)") (ReturnType) (Snippet . "DuplicateWaitObjectException(${1:SerializationInfo info}, ${2:StreamingContext context})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DuplicateWaitObjectException") (Description . "") (DisplayText . "DuplicateWaitObjectException(string message, Exception innerException)") (RequiredNamespaceImport) (MethodHeader . "DuplicateWaitObjectException(string message, Exception innerException)") (ReturnType) (Snippet . "DuplicateWaitObjectException(${1:string message}, ${2:Exception innerException})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DuplicateWaitObjectException") (Description . "") (DisplayText . "DuplicateWaitObjectException(string parameterName)") (RequiredNamespaceImport) (MethodHeader . "DuplicateWaitObjectException(string parameterName)") (ReturnType) (Snippet . "DuplicateWaitObjectException(${1:string parameterName})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DuplicateWaitObjectException") (Description . "") (DisplayText . "DuplicateWaitObjectException(string parameterName, string message)") (RequiredNamespaceImport) (MethodHeader . "DuplicateWaitObjectException(string parameterName, string message)") (ReturnType) (Snippet . "DuplicateWaitObjectException(${1:string parameterName}, ${2:string message})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DurationView") (Description . "") (DisplayText . "DurationView") (RequiredNamespaceImport) (MethodHeader . "DurationView") (ReturnType) (Snippet . "DurationView$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DurationView") (Description . "") (DisplayText . "DurationView(DurationViewModel viewModel)") (RequiredNamespaceImport) (MethodHeader . "DurationView(DurationViewModel viewModel)") (ReturnType) (Snippet . "DurationView(${1:DurationViewModel viewModel})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DurationViewModel") (Description . "TODO: Update summary.
") (DisplayText . "DurationViewModel") (RequiredNamespaceImport) (MethodHeader . "DurationViewModel") (ReturnType) (Snippet . "DurationViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DurationViewModel") (Description . "") (DisplayText . "DurationViewModel()") (RequiredNamespaceImport) (MethodHeader . "DurationViewModel()") (ReturnType) (Snippet . "DurationViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DXDisplayNameAttribute") (Description . "") (DisplayText . "DXDisplayNameAttribute") (RequiredNamespaceImport) (MethodHeader . "DXDisplayNameAttribute") (ReturnType) (Snippet . "DXDisplayNameAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DXDisplayNameAttribute") (Description . "") (DisplayText . "DXDisplayNameAttribute(Type resourceFinder, string resourceFile, string resourceName)") (RequiredNamespaceImport) (MethodHeader . "DXDisplayNameAttribute(Type resourceFinder, string resourceFile, string resourceName)") (ReturnType) (Snippet . "DXDisplayNameAttribute(${1:Type resourceFinder}, ${2:string resourceFile}, ${3:string resourceName})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DXDisplayNameAttribute") (Description . "") (DisplayText . "DXDisplayNameAttribute(Type resourceFinder, string resourceFile, string resourceName, string defaultDisplayName)") (RequiredNamespaceImport) (MethodHeader . "DXDisplayNameAttribute(Type resourceFinder, string resourceFile, string resourceName, string defaultDisplayName)") (ReturnType) (Snippet . "DXDisplayNameAttribute(${1:Type resourceFinder}, ${2:string resourceFile}, ${3:string resourceName}, ${4:string defaultDisplayName})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DXDisplayNameAttribute") (Description . "") (DisplayText . "DXDisplayNameAttribute(Type resourceFinder, string resourceName)") (RequiredNamespaceImport) (MethodHeader . "DXDisplayNameAttribute(Type resourceFinder, string resourceName)") (ReturnType) (Snippet . "DXDisplayNameAttribute(${1:Type resourceFinder}, ${2:string resourceName})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DXDisplayNameIgnoreAttribute") (Description . "") (DisplayText . "DXDisplayNameIgnoreAttribute") (RequiredNamespaceImport) (MethodHeader . "DXDisplayNameIgnoreAttribute") (ReturnType) (Snippet . "DXDisplayNameIgnoreAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DXDisplayNameIgnoreAttribute") (Description . "") (DisplayText . "DXDisplayNameIgnoreAttribute()") (RequiredNamespaceImport) (MethodHeader . "DXDisplayNameIgnoreAttribute()") (ReturnType) (Snippet . "DXDisplayNameIgnoreAttribute()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DXHelpExcludeAttribute") (Description . "") (DisplayText . "DXHelpExcludeAttribute") (RequiredNamespaceImport) (MethodHeader . "DXHelpExcludeAttribute") (ReturnType) (Snippet . "DXHelpExcludeAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DXHelpExcludeAttribute") (Description . "") (DisplayText . "DXHelpExcludeAttribute(bool exclude)") (RequiredNamespaceImport) (MethodHeader . "DXHelpExcludeAttribute(bool exclude)") (ReturnType) (Snippet . "DXHelpExcludeAttribute(${1:bool exclude})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicData") (Description . "") (DisplayText . "DynamicData") (RequiredNamespaceImport) (MethodHeader . "DynamicData") (ReturnType) (Snippet . "DynamicData$0") (Kind . "Namespace") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicDataFactory") (Description . "") (DisplayText . "DynamicDataFactory") (RequiredNamespaceImport) (MethodHeader . "DynamicDataFactory") (ReturnType) (Snippet . "DynamicDataFactory$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicDataFactory") (Description . "") (DisplayText . "DynamicDataFactory()") (RequiredNamespaceImport) (MethodHeader . "DynamicDataFactory()") (ReturnType) (Snippet . "DynamicDataFactory()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicDataInputViewModel") (Description . "Implements only methods to create view models form dynamic data.
") (DisplayText . "DynamicDataInputViewModel") (RequiredNamespaceImport) (MethodHeader . "DynamicDataInputViewModel") (ReturnType) (Snippet . "DynamicDataInputViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicFunction") (Description . "Implements a model for 
") (DisplayText . "DynamicFunction") (RequiredNamespaceImport) (MethodHeader . "DynamicFunction") (ReturnType) (Snippet . "DynamicFunction$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicFunction") (Description . "") (DisplayText . "DynamicFunction()") (RequiredNamespaceImport) (MethodHeader . "DynamicFunction()") (ReturnType) (Snippet . "DynamicFunction()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicTreeTableView") (Description . "Implements a forms user control based on a view model. This control 
") (DisplayText . "DynamicTreeTableView") (RequiredNamespaceImport) (MethodHeader . "DynamicTreeTableView") (ReturnType) (Snippet . "DynamicTreeTableView$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicTreeTableView") (Description . "Initializes a new instance of the FormatedTableView class. 
") (DisplayText . "DynamicTreeTableView()") (RequiredNamespaceImport) (MethodHeader . "DynamicTreeTableView()") (ReturnType) (Snippet . "DynamicTreeTableView()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicTreeTableView") (Description . "Initializes a new instance of the FormatedTableView class. 

viewModel: The used view model ") (DisplayText . "DynamicTreeTableView(IDataTableSourceViewModel viewModel)") (RequiredNamespaceImport) (MethodHeader . "DynamicTreeTableView(IDataTableSourceViewModel viewModel)") (ReturnType) (Snippet . "DynamicTreeTableView(${1:IDataTableSourceViewModel viewModel})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicXmlRowData") (Description . "
Remarks:
") (DisplayText . "DynamicXmlRowData") (RequiredNamespaceImport) (MethodHeader . "DynamicXmlRowData") (ReturnType) (Snippet . "DynamicXmlRowData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicXmlRowData") (Description . "") (DisplayText . "DynamicXmlRowData()") (RequiredNamespaceImport) (MethodHeader . "DynamicXmlRowData()") (ReturnType) (Snippet . "DynamicXmlRowData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicXmlTable") (Description . "
Remarks:
") (DisplayText . "DynamicXmlTable") (RequiredNamespaceImport) (MethodHeader . "DynamicXmlTable") (ReturnType) (Snippet . "DynamicXmlTable$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicXmlTable") (Description . "") (DisplayText . "DynamicXmlTable()") (RequiredNamespaceImport) (MethodHeader . "DynamicXmlTable()") (ReturnType) (Snippet . "DynamicXmlTable()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DynmicDataAttribute") (Description . "Implements an attribute for a subversion version.
") (DisplayText . "DynmicDataAttribute") (RequiredNamespaceImport) (MethodHeader . "DynmicDataAttribute") (ReturnType) (Snippet . "DynmicDataAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DynmicDataAttribute") (Description . "Initializes a new instance of the Fls.Base.SvnRevisionAttribute class.

svnRevision: The subversion version.") (DisplayText . "DynmicDataAttribute(string name)") (RequiredNamespaceImport) (MethodHeader . "DynmicDataAttribute(string name)") (ReturnType) (Snippet . "DynmicDataAttribute(${1:string name})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "EncryptedData") (Description . "") (DisplayText . "EncryptedData") (RequiredNamespaceImport) (MethodHeader . "EncryptedData") (ReturnType) (Snippet . "EncryptedData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "EncryptedData") (Description . "") (DisplayText . "EncryptedData()") (RequiredNamespaceImport) (MethodHeader . "EncryptedData()") (ReturnType) (Snippet . "EncryptedData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "EncryptedData") (Description . "") (DisplayText . "EncryptedData(byte[] data, byte[] vector)") (RequiredNamespaceImport) (MethodHeader . "EncryptedData(byte[] data, byte[] vector)") (ReturnType) (Snippet . "EncryptedData(${1:byte[] data}, ${2:byte[] vector})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "EntityUpdateHandler") (Description . "") (DisplayText . "EntityUpdateHandler") (RequiredNamespaceImport) (MethodHeader . "EntityUpdateHandler") (ReturnType) (Snippet . "EntityUpdateHandler$0") (Kind . "Delegate") (IsSuggestionMode . :json-false)) ((CompletionText . "EntityUpdateHandler") (Description . "") (DisplayText . "EntityUpdateHandler(object @object, IntPtr method)") (RequiredNamespaceImport) (MethodHeader . "EntityUpdateHandler(object @object, IntPtr method)") (ReturnType) (Snippet . "EntityUpdateHandler(${1:object @object}, ${2:IntPtr method})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "EntityUpdateType") (Description . "") (DisplayText . "EntityUpdateType") (RequiredNamespaceImport) (MethodHeader . "EntityUpdateType") (ReturnType) (Snippet . "EntityUpdateType$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "EscalatedActivitiesMetaData") (Description . "") (DisplayText . "EscalatedActivitiesMetaData") (RequiredNamespaceImport) (MethodHeader . "EscalatedActivitiesMetaData") (ReturnType) (Snippet . "EscalatedActivitiesMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "EscalatedActivitiesMetaData") (Description . "") (DisplayText . "EscalatedActivitiesMetaData()") (RequiredNamespaceImport) (MethodHeader . "EscalatedActivitiesMetaData()") (ReturnType) (Snippet . "EscalatedActivitiesMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ExtendableDataTable") (Description . "") (DisplayText . "ExtendableDataTable<T>") (RequiredNamespaceImport) (MethodHeader . "ExtendableDataTable<T>") (ReturnType) (Snippet . "ExtendableDataTable<${1:T}>$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ExtendableDataTable") (Description . "") (DisplayText . "ExtendableDataTable<T>()") (RequiredNamespaceImport) (MethodHeader . "ExtendableDataTable<T>()") (ReturnType) (Snippet . "ExtendableDataTable<${1:T}>()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ExtendableDataTable") (Description . "") (DisplayText . "ExtendableDataTable<T>(SerializationInfo info, StreamingContext context)") (RequiredNamespaceImport) (MethodHeader . "ExtendableDataTable<T>(SerializationInfo info, StreamingContext context)") (ReturnType) (Snippet . "ExtendableDataTable<${1:T}>(${2:SerializationInfo info}, ${3:StreamingContext context})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ExtendableDataTable") (Description . "") (DisplayText . "ExtendableDataTable<T>(string tableName)") (RequiredNamespaceImport) (MethodHeader . "ExtendableDataTable<T>(string tableName)") (ReturnType) (Snippet . "ExtendableDataTable<${1:T}>(${2:string tableName})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ExtendableDataTable") (Description . "") (DisplayText . "ExtendableDataTable<T>(string tableName, string tableNamespace)") (RequiredNamespaceImport) (MethodHeader . "ExtendableDataTable<T>(string tableName, string tableNamespace)") (ReturnType) (Snippet . "ExtendableDataTable<${1:T}>(${2:string tableName}, ${3:string tableNamespace})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "FieldAttributes") (Description . "") (DisplayText . "FieldAttributes") (RequiredNamespaceImport) (MethodHeader . "FieldAttributes") (ReturnType) (Snippet . "FieldAttributes$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "FLSDataObjectsBase") (Description . "") (DisplayText . "FLSDataObjectsBase") (RequiredNamespaceImport) (MethodHeader . "FLSDataObjectsBase") (ReturnType) (Snippet . "FLSDataObjectsBase$0") (Kind . "Namespace") (IsSuggestionMode . :json-false)) ((CompletionText . "FLSDateEdit") (Description . "TODO: Update summary.
") (DisplayText . "FLSDateEdit") (RequiredNamespaceImport) (MethodHeader . "FLSDateEdit") (ReturnType) (Snippet . "FLSDateEdit$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "FLSDateEdit") (Description . "") (DisplayText . "FLSDateEdit()") (RequiredNamespaceImport) (MethodHeader . "FLSDateEdit()") (ReturnType) (Snippet . "FLSDateEdit()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "FormatControlMetaData") (Description . "") (DisplayText . "FormatControlMetaData") (RequiredNamespaceImport) (MethodHeader . "FormatControlMetaData") (ReturnType) (Snippet . "FormatControlMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "FormatControlMetaData") (Description . "") (DisplayText . "FormatControlMetaData()") (RequiredNamespaceImport) (MethodHeader . "FormatControlMetaData()") (ReturnType) (Snippet . "FormatControlMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "IAuthentificateData") (Description . "") (DisplayText . "IAuthentificateData") (RequiredNamespaceImport) (MethodHeader . "IAuthentificateData") (ReturnType) (Snippet . "IAuthentificateData$0") (Kind . "Interface") (IsSuggestionMode . :json-false)) ((CompletionText . "IDataErrorInfo") (Description . "") (DisplayText . "IDataErrorInfo") (RequiredNamespaceImport) (MethodHeader . "IDataErrorInfo") (ReturnType) (Snippet . "IDataErrorInfo$0") (Kind . "Interface") (IsSuggestionMode . :json-false)) ((CompletionText . "IDataSourceProvider") (Description . "") (DisplayText . "IDataSourceProvider") (RequiredNamespaceImport) (MethodHeader . "IDataSourceProvider") (ReturnType) (Snippet . "IDataSourceProvider$0") (Kind . "Interface") (IsSuggestionMode . :json-false)) ((CompletionText . "IDataTableSourceViewModel") (Description . "") (DisplayText . "IDataTableSourceViewModel") (RequiredNamespaceImport) (MethodHeader . "IDataTableSourceViewModel") (ReturnType) (Snippet . "IDataTableSourceViewModel$0") (Kind . "Interface") (IsSuggestionMode . :json-false)) ((CompletionText . "IDateTimeInputViewModel") (Description . "Implements an interface for date time object which may use only date or only time or both or nothing.
") (DisplayText . "IDateTimeInputViewModel") (RequiredNamespaceImport) (MethodHeader . "IDateTimeInputViewModel") (ReturnType) (Snippet . "IDateTimeInputViewModel$0") (Kind . "Interface") (IsSuggestionMode . :json-false)) ((CompletionText . "IDEntityDataBase") (Description . "") (DisplayText . "IDEntityDataBase") (RequiredNamespaceImport) (MethodHeader . "IDEntityDataBase") (ReturnType) (Snippet . "IDEntityDataBase$0") (Kind . "Interface") (IsSuggestionMode . :json-false)) ((CompletionText . "IEntityValidation") (Description . "Interface for DODataSource validators
") (DisplayText . "IEntityValidation") (RequiredNamespaceImport) (MethodHeader . "IEntityValidation") (ReturnType) (Snippet . "IEntityValidation$0") (Kind . "Interface") (IsSuggestionMode . :json-false)) ((CompletionText . "ILookUpDataGetter") (Description . "An interface for look up data getter.
") (DisplayText . "ILookUpDataGetter") (RequiredNamespaceImport) (MethodHeader . "ILookUpDataGetter") (ReturnType) (Snippet . "ILookUpDataGetter$0") (Kind . "Interface") (IsSuggestionMode . :json-false)) ((CompletionText . "ILookUpDataManager") (Description . "") (DisplayText . "ILookUpDataManager") (RequiredNamespaceImport) (MethodHeader . "ILookUpDataManager") (ReturnType) (Snippet . "ILookUpDataManager$0") (Kind . "Interface") (IsSuggestionMode . :json-false)) ((CompletionText . "IMaxMinDateTime") (Description . "Implements an interface for minimum and maximum date time classes.
") (DisplayText . "IMaxMinDateTime") (RequiredNamespaceImport) (MethodHeader . "IMaxMinDateTime") (ReturnType) (Snippet . "IMaxMinDateTime$0") (Kind . "Interface") (IsSuggestionMode . :json-false)) ((CompletionText . "INotifyDataErrorInfo") (Description . "") (DisplayText . "INotifyDataErrorInfo") (RequiredNamespaceImport) (MethodHeader . "INotifyDataErrorInfo") (ReturnType) (Snippet . "INotifyDataErrorInfo$0") (Kind . "Interface") (IsSuggestionMode . :json-false)) ((CompletionText . "InvalidDataException") (Description . "") (DisplayText . "InvalidDataException") (RequiredNamespaceImport) (MethodHeader . "InvalidDataException") (ReturnType) (Snippet . "InvalidDataException$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "InvalidDataException") (Description . "") (DisplayText . "InvalidDataException()") (RequiredNamespaceImport) (MethodHeader . "InvalidDataException()") (ReturnType) (Snippet . "InvalidDataException()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "InvalidDataException") (Description . "") (DisplayText . "InvalidDataException(string message)") (RequiredNamespaceImport) (MethodHeader . "InvalidDataException(string message)") (ReturnType) (Snippet . "InvalidDataException(${1:string message})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "InvalidDataException") (Description . "") (DisplayText . "InvalidDataException(string message, Exception innerException)") (RequiredNamespaceImport) (MethodHeader . "InvalidDataException(string message, Exception innerException)") (ReturnType) (Snippet . "InvalidDataException(${1:string message}, ${2:Exception innerException})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ISearchLookUpData") (Description . "") (DisplayText . "ISearchLookUpData") (RequiredNamespaceImport) (MethodHeader . "ISearchLookUpData") (ReturnType) (Snippet . "ISearchLookUpData$0") (Kind . "Interface") (IsSuggestionMode . :json-false)) ((CompletionText . "ITempDataModel") (Description . "") (DisplayText . "ITempDataModel") (RequiredNamespaceImport) (MethodHeader . "ITempDataModel") (ReturnType) (Snippet . "ITempDataModel$0") (Kind . "Interface") (IsSuggestionMode . :json-false)) ((CompletionText . "IValidatable") (Description . "Implements an interface for 
") (DisplayText . "IValidatable") (RequiredNamespaceImport) (MethodHeader . "IValidatable") (ReturnType) (Snippet . "IValidatable$0") (Kind . "Interface") (IsSuggestionMode . :json-false)) ((CompletionText . "IValidatableValue") (Description . "Implements an interface for validating values.
The type of the valid value.") (DisplayText . "IValidatableValue<T>") (RequiredNamespaceImport) (MethodHeader . "IValidatableValue<T>") (ReturnType) (Snippet . "IValidatableValue<${1:T}>$0") (Kind . "Interface") (IsSuggestionMode . :json-false)) ((CompletionText . "IValidationRule") (Description . "Implements an interface for validation rules.
The type of the value which is validated with these rules.") (DisplayText . "IValidationRule<T>") (RequiredNamespaceImport) (MethodHeader . "IValidationRule<T>") (ReturnType) (Snippet . "IValidationRule<${1:T}>$0") (Kind . "Interface") (IsSuggestionMode . :json-false)) ((CompletionText . "LayoutDbData") (Description . "") (DisplayText . "LayoutDbData") (RequiredNamespaceImport) (MethodHeader . "LayoutDbData") (ReturnType) (Snippet . "LayoutDbData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "LayoutDbData") (Description . "") (DisplayText . "LayoutDbData(DOClientLayout data)") (RequiredNamespaceImport) (MethodHeader . "LayoutDbData(DOClientLayout data)") (ReturnType) (Snippet . "LayoutDbData(${1:DOClientLayout data})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "LayoutMetaData") (Description . "Implements a model for meta data of forms.
") (DisplayText . "LayoutMetaData") (RequiredNamespaceImport) (MethodHeader . "LayoutMetaData") (ReturnType) (Snippet . "LayoutMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "LayoutMetaData") (Description . "") (DisplayText . "LayoutMetaData()") (RequiredNamespaceImport) (MethodHeader . "LayoutMetaData()") (ReturnType) (Snippet . "LayoutMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "LinkMetaData") (Description . "Implements a model for link data.
") (DisplayText . "LinkMetaData") (RequiredNamespaceImport) (MethodHeader . "LinkMetaData") (ReturnType) (Snippet . "LinkMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "LinkMetaData") (Description . "Initializes a new instance of the Fls.VisiTourClient.MetaData.LinkMetaData class.
") (DisplayText . "LinkMetaData()") (RequiredNamespaceImport) (MethodHeader . "LinkMetaData()") (ReturnType) (Snippet . "LinkMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "LocalDataStoreSlot") (Description . "") (DisplayText . "LocalDataStoreSlot") (RequiredNamespaceImport) (MethodHeader . "LocalDataStoreSlot") (ReturnType) (Snippet . "LocalDataStoreSlot$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "LocalizedNameCtrlMetaData") (Description . "") (DisplayText . "LocalizedNameCtrlMetaData") (RequiredNamespaceImport) (MethodHeader . "LocalizedNameCtrlMetaData") (ReturnType) (Snippet . "LocalizedNameCtrlMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "LocalizedNameCtrlMetaData") (Description . "") (DisplayText . "LocalizedNameCtrlMetaData()") (RequiredNamespaceImport) (MethodHeader . "LocalizedNameCtrlMetaData()") (ReturnType) (Snippet . "LocalizedNameCtrlMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "LoginData") (Description . "") (DisplayText . "LoginData") (RequiredNamespaceImport) (MethodHeader . "LoginData") (ReturnType) (Snippet . "LoginData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "LoginData") (Description . "") (DisplayText . "LoginData()") (RequiredNamespaceImport) (MethodHeader . "LoginData()") (ReturnType) (Snippet . "LoginData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "LookUpDataEntry") (Description . "") (DisplayText . "LookUpDataEntry") (RequiredNamespaceImport) (MethodHeader . "LookUpDataEntry") (ReturnType) (Snippet . "LookUpDataEntry$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "LookUpDataEntry") (Description . "") (DisplayText . "LookUpDataEntry()") (RequiredNamespaceImport) (MethodHeader . "LookUpDataEntry()") (ReturnType) (Snippet . "LookUpDataEntry()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "LookUpDataGetter") (Description . "Implements a lookup value getter.
") (DisplayText . "LookUpDataGetter") (RequiredNamespaceImport) (MethodHeader . "LookUpDataGetter") (ReturnType) (Snippet . "LookUpDataGetter$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "LookUpDataGetter") (Description . "Initializes a new instance of the Fls.VisiTour.Client3.RuntimeDataBuilder.LookUpDataGetter class. 

entityName: The entity name.
loadData: The action to fill up the lookup data.") (DisplayText . "LookUpDataGetter(string entityName, Action<string, ConcurrentDictionary<string, byte>, ConcurrentDictionary<IComparable, byte>, ConcurrentDictionary<IComparable, object>, ConcurrentDictionary<string, TempLookUpDataModel>> loadData)") (RequiredNamespaceImport) (MethodHeader . "LookUpDataGetter(string entityName, Action<string, ConcurrentDictionary<string, byte>, ConcurrentDictionary<IComparable, byte>, ConcurrentDictionary<IComparable, object>, ConcurrentDictionary<string, TempLookUpDataModel>> loadData)") (ReturnType) (Snippet . "LookUpDataGetter(${1:string entityName}, ${2:Action<string, ConcurrentDictionary<string, byte>, ConcurrentDictionary<IComparable, byte>, ConcurrentDictionary<IComparable, object>, ConcurrentDictionary<string, TempLookUpDataModel>> loadData})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "LookUpDataList") (Description . "Implements a look up data list. 
") (DisplayText . "LookUpDataList") (RequiredNamespaceImport) (MethodHeader . "LookUpDataList") (ReturnType) (Snippet . "LookUpDataList$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "LookUpDataList") (Description . "Initializes a new instance of the LookUpDataList class. 

repo: The data repository. 
loadDataAction: The load data method. ") (DisplayText . "LookUpDataList(IDOBaseRepository repo, Action<string, ConcurrentDictionary<string, byte>, ConcurrentDictionary<IComparable, byte>, ConcurrentDictionary<IComparable, object>, ConcurrentDictionary<string, TempLookUpDataModel>> loadDataAction)") (RequiredNamespaceImport) (MethodHeader . "LookUpDataList(IDOBaseRepository repo, Action<string, ConcurrentDictionary<string, byte>, ConcurrentDictionary<IComparable, byte>, ConcurrentDictionary<IComparable, object>, ConcurrentDictionary<string, TempLookUpDataModel>> loadDataAction)") (ReturnType) (Snippet . "LookUpDataList(${1:IDOBaseRepository repo}, ${2:Action<string, ConcurrentDictionary<string, byte>, ConcurrentDictionary<IComparable, byte>, ConcurrentDictionary<IComparable, object>, ConcurrentDictionary<string, TempLookUpDataModel>> loadDataAction})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "MasterDataLogViewModel") (Description . "") (DisplayText . "MasterDataLogViewModel") (RequiredNamespaceImport) (MethodHeader . "MasterDataLogViewModel") (ReturnType) (Snippet . "MasterDataLogViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "MasterDataLogViewModel") (Description . "") (DisplayText . "MasterDataLogViewModel()") (RequiredNamespaceImport) (MethodHeader . "MasterDataLogViewModel()") (ReturnType) (Snippet . "MasterDataLogViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "MetaData") (Description . "") (DisplayText . "MetaData") (RequiredNamespaceImport) (MethodHeader . "MetaData") (ReturnType) (Snippet . "MetaData$0") (Kind . "Namespace") (IsSuggestionMode . :json-false)) ((CompletionText . "MethodAttributes") (Description . "") (DisplayText . "MethodAttributes") (RequiredNamespaceImport) (MethodHeader . "MethodAttributes") (ReturnType) (Snippet . "MethodAttributes$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "MTAThreadAttribute") (Description . "") (DisplayText . "MTAThreadAttribute") (RequiredNamespaceImport) (MethodHeader . "MTAThreadAttribute") (ReturnType) (Snippet . "MTAThreadAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "MTAThreadAttribute") (Description . "") (DisplayText . "MTAThreadAttribute()") (RequiredNamespaceImport) (MethodHeader . "MTAThreadAttribute()") (ReturnType) (Snippet . "MTAThreadAttribute()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "NavBarGroupMetaData") (Description . "Implements a model for 
") (DisplayText . "NavBarGroupMetaData") (RequiredNamespaceImport) (MethodHeader . "NavBarGroupMetaData") (ReturnType) (Snippet . "NavBarGroupMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "NavBarGroupMetaData") (Description . "Initializes a new instance of the Fls.VisiTourClient.MetaData.NavBarGroupMetaData class.
") (DisplayText . "NavBarGroupMetaData(string name, string toolTip, string defaultEntry, bool isExpanded)") (RequiredNamespaceImport) (MethodHeader . "NavBarGroupMetaData(string name, string toolTip, string defaultEntry, bool isExpanded)") (ReturnType) (Snippet . "NavBarGroupMetaData(${1:string name}, ${2:string toolTip}, ${3:string defaultEntry}, ${4:bool isExpanded})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "NonSerializedAttribute") (Description . "") (DisplayText . "NonSerializedAttribute") (RequiredNamespaceImport) (MethodHeader . "NonSerializedAttribute") (ReturnType) (Snippet . "NonSerializedAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "NonSerializedAttribute") (Description . "") (DisplayText . "NonSerializedAttribute()") (RequiredNamespaceImport) (MethodHeader . "NonSerializedAttribute()") (ReturnType) (Snippet . "NonSerializedAttribute()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ObjectDataCtrlMetaData") (Description . "") (DisplayText . "ObjectDataCtrlMetaData") (RequiredNamespaceImport) (MethodHeader . "ObjectDataCtrlMetaData") (ReturnType) (Snippet . "ObjectDataCtrlMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ObjectDataCtrlMetaData") (Description . "") (DisplayText . "ObjectDataCtrlMetaData()") (RequiredNamespaceImport) (MethodHeader . "ObjectDataCtrlMetaData()") (ReturnType) (Snippet . "ObjectDataCtrlMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ObjectDataCtrlType") (Description . "") (DisplayText . "ObjectDataCtrlType") (RequiredNamespaceImport) (MethodHeader . "ObjectDataCtrlType") (ReturnType) (Snippet . "ObjectDataCtrlType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ObjectDataCtrlType") (Description . "") (DisplayText . "ObjectDataCtrlType()") (RequiredNamespaceImport) (MethodHeader . "ObjectDataCtrlType()") (ReturnType) (Snippet . "ObjectDataCtrlType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ObjectDataView") (Description . "") (DisplayText . "ObjectDataView") (RequiredNamespaceImport) (MethodHeader . "ObjectDataView") (ReturnType) (Snippet . "ObjectDataView$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ObjectDataView") (Description . "") (DisplayText . "ObjectDataView()") (RequiredNamespaceImport) (MethodHeader . "ObjectDataView()") (ReturnType) (Snippet . "ObjectDataView()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ObjectDataView") (Description . "") (DisplayText . "ObjectDataView(ObjectDataViewModel vm, Func<INameViewModel, Control> convert)") (RequiredNamespaceImport) (MethodHeader . "ObjectDataView(ObjectDataViewModel vm, Func<INameViewModel, Control> convert)") (ReturnType) (Snippet . "ObjectDataView(${1:ObjectDataViewModel vm}, ${2:Func<INameViewModel, Control> convert})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ObjectDataViewModel") (Description . "") (DisplayText . "ObjectDataViewModel") (RequiredNamespaceImport) (MethodHeader . "ObjectDataViewModel") (ReturnType) (Snippet . "ObjectDataViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ObjectDataViewModel") (Description . "") (DisplayText . "ObjectDataViewModel()") (RequiredNamespaceImport) (MethodHeader . "ObjectDataViewModel()") (ReturnType) (Snippet . "ObjectDataViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "OneToManyMetaData") (Description . "") (DisplayText . "OneToManyMetaData") (RequiredNamespaceImport) (MethodHeader . "OneToManyMetaData") (ReturnType) (Snippet . "OneToManyMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "OneToManyMetaData") (Description . "") (DisplayText . "OneToManyMetaData()") (RequiredNamespaceImport) (MethodHeader . "OneToManyMetaData()") (ReturnType) (Snippet . "OneToManyMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "OneWayBindingConditionData") (Description . "") (DisplayText . "OneWayBindingConditionData") (RequiredNamespaceImport) (MethodHeader . "OneWayBindingConditionData") (ReturnType) (Snippet . "OneWayBindingConditionData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "OneWayBindingConditionData") (Description . "") (DisplayText . "OneWayBindingConditionData()") (RequiredNamespaceImport) (MethodHeader . "OneWayBindingConditionData()") (ReturnType) (Snippet . "OneWayBindingConditionData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "OutputDateFrameSelectionType") (Description . "") (DisplayText . "OutputDateFrameSelectionType") (RequiredNamespaceImport) (MethodHeader . "OutputDateFrameSelectionType") (ReturnType) (Snippet . "OutputDateFrameSelectionType$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "ProcessData") (Description . "") (DisplayText . "ProcessData") (RequiredNamespaceImport) (MethodHeader . "ProcessData") (ReturnType) (Snippet . "ProcessData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ProcessData") (Description . "") (DisplayText . "ProcessData()") (RequiredNamespaceImport) (MethodHeader . "ProcessData()") (ReturnType) (Snippet . "ProcessData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ReConvertDateTimesEventArgs") (Description . "") (DisplayText . "ReConvertDateTimesEventArgs") (RequiredNamespaceImport) (MethodHeader . "ReConvertDateTimesEventArgs") (ReturnType) (Snippet . "ReConvertDateTimesEventArgs$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ReConvertDateTimesEventArgs") (Description . "") (DisplayText . "ReConvertDateTimesEventArgs(ITimeConverter converter, IProvideToday dateForTimeOfDayConversion)") (RequiredNamespaceImport) (MethodHeader . "ReConvertDateTimesEventArgs(ITimeConverter converter, IProvideToday dateForTimeOfDayConversion)") (ReturnType) (Snippet . "ReConvertDateTimesEventArgs(${1:ITimeConverter converter}, ${2:IProvideToday dateForTimeOfDayConversion})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "RepositoryItemDateEdit") (Description . "
A repository item storing settings specific to a DevExpress.XtraEditors.DateEdit control.") (DisplayText . "RepositoryItemDateEdit") (RequiredNamespaceImport) (MethodHeader . "RepositoryItemDateEdit") (ReturnType) (Snippet . "RepositoryItemDateEdit$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "RepositoryItemDateEdit") (Description . "
Initializes a new DevExpress.XtraEditors.Repository.RepositoryItemDateEdit class instance with default settings. ") (DisplayText . "RepositoryItemDateEdit()") (RequiredNamespaceImport) (MethodHeader . "RepositoryItemDateEdit()") (ReturnType) (Snippet . "RepositoryItemDateEdit()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "RepositoryItemFLSDateEdit") (Description . "TODO: Update summary.
") (DisplayText . "RepositoryItemFLSDateEdit") (RequiredNamespaceImport) (MethodHeader . "RepositoryItemFLSDateEdit") (ReturnType) (Snippet . "RepositoryItemFLSDateEdit$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "RepositoryItemFLSDateEdit") (Description . "") (DisplayText . "RepositoryItemFLSDateEdit()") (RequiredNamespaceImport) (MethodHeader . "RepositoryItemFLSDateEdit()") (ReturnType) (Snippet . "RepositoryItemFLSDateEdit()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ResourceData") (Description . "Contains the resource data.
") (DisplayText . "ResourceData") (RequiredNamespaceImport) (MethodHeader . "ResourceData") (ReturnType) (Snippet . "ResourceData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ResourceData") (Description . "The resource data.

key: The resource key.
value: The resource grid view.") (DisplayText . "ResourceData(int key, string value)") (RequiredNamespaceImport) (MethodHeader . "ResourceData(int key, string value)") (ReturnType) (Snippet . "ResourceData(${1:int key}, ${2:string value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ResourceSchedulerDataModel") (Description . "Implements a class for a resource data model.
") (DisplayText . "ResourceSchedulerDataModel") (RequiredNamespaceImport) (MethodHeader . "ResourceSchedulerDataModel") (ReturnType) (Snippet . "ResourceSchedulerDataModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ResourceSchedulerDataModel") (Description . "") (DisplayText . "ResourceSchedulerDataModel(AppointmentSchedulerViewModel datamodel)") (RequiredNamespaceImport) (MethodHeader . "ResourceSchedulerDataModel(AppointmentSchedulerViewModel datamodel)") (ReturnType) (Snippet . "ResourceSchedulerDataModel(${1:AppointmentSchedulerViewModel datamodel})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ResourceSchedulerDateComparer") (Description . "Implements a model for 
") (DisplayText . "ResourceSchedulerDateComparer") (RequiredNamespaceImport) (MethodHeader . "ResourceSchedulerDateComparer") (ReturnType) (Snippet . "ResourceSchedulerDateComparer$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ResourceSchedulerDateComparer") (Description . "Initializes a new instance of the Fls.VisiTourClient.ViewModel.Scheduler.ResourceSchedulerDateComparer class. 
") (DisplayText . "ResourceSchedulerDateComparer()") (RequiredNamespaceImport) (MethodHeader . "ResourceSchedulerDateComparer()") (ReturnType) (Snippet . "ResourceSchedulerDateComparer()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "RibbonButtonGroupMetaData") (Description . "") (DisplayText . "RibbonButtonGroupMetaData") (RequiredNamespaceImport) (MethodHeader . "RibbonButtonGroupMetaData") (ReturnType) (Snippet . "RibbonButtonGroupMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "RibbonButtonGroupMetaData") (Description . "") (DisplayText . "RibbonButtonGroupMetaData()") (RequiredNamespaceImport) (MethodHeader . "RibbonButtonGroupMetaData()") (ReturnType) (Snippet . "RibbonButtonGroupMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "RibbonCategoryMetaData") (Description . "Implements a model for ribbon group meta data.
") (DisplayText . "RibbonCategoryMetaData") (RequiredNamespaceImport) (MethodHeader . "RibbonCategoryMetaData") (ReturnType) (Snippet . "RibbonCategoryMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "RibbonCategoryMetaData") (Description . "Initializes a new instance of the Fls.VisiTourClient.MetaData.RibbonGroupMetaData class.
") (DisplayText . "RibbonCategoryMetaData()") (RequiredNamespaceImport) (MethodHeader . "RibbonCategoryMetaData()") (ReturnType) (Snippet . "RibbonCategoryMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "RibbonGroupMetaData") (Description . "Implements a model for ribbon group meta data.
") (DisplayText . "RibbonGroupMetaData") (RequiredNamespaceImport) (MethodHeader . "RibbonGroupMetaData") (ReturnType) (Snippet . "RibbonGroupMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "RibbonGroupMetaData") (Description . "Initializes a new instance of the Fls.VisiTourClient.MetaData.RibbonGroupMetaData class.
") (DisplayText . "RibbonGroupMetaData()") (RequiredNamespaceImport) (MethodHeader . "RibbonGroupMetaData()") (ReturnType) (Snippet . "RibbonGroupMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "RibbonIconItemMetaData") (Description . "Implements a model for ribbon item with an icon.
") (DisplayText . "RibbonIconItemMetaData") (RequiredNamespaceImport) (MethodHeader . "RibbonIconItemMetaData") (ReturnType) (Snippet . "RibbonIconItemMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "RibbonIconItemMetaData") (Description . "Initializes a new instance of the Fls.VisiTourClient.MetaData.RibbonIconItemMetaData class.
") (DisplayText . "RibbonIconItemMetaData()") (RequiredNamespaceImport) (MethodHeader . "RibbonIconItemMetaData()") (ReturnType) (Snippet . "RibbonIconItemMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "RibbonItemsMetaData") (Description . "Implements a model for a ribbon item. 
") (DisplayText . "RibbonItemsMetaData") (RequiredNamespaceImport) (MethodHeader . "RibbonItemsMetaData") (ReturnType) (Snippet . "RibbonItemsMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "RibbonItemsMetaData") (Description . "Initializes a new instance of the Fls.VisiTourClient.MetaData.RibbonItemsMetaData class.
") (DisplayText . "RibbonItemsMetaData()") (RequiredNamespaceImport) (MethodHeader . "RibbonItemsMetaData()") (ReturnType) (Snippet . "RibbonItemsMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "RibbonPageMetaData") (Description . "Implements a model for ribbon group meta data.
") (DisplayText . "RibbonPageMetaData") (RequiredNamespaceImport) (MethodHeader . "RibbonPageMetaData") (ReturnType) (Snippet . "RibbonPageMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "RibbonPageMetaData") (Description . "Initializes a new instance of the Fls.VisiTourClient.MetaData.RibbonGroupMetaData class.
") (DisplayText . "RibbonPageMetaData()") (RequiredNamespaceImport) (MethodHeader . "RibbonPageMetaData()") (ReturnType) (Snippet . "RibbonPageMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "RibbonSubMenuItemMetadata") (Description . "Implements a model for ribbon or context menu items which have sub items.
") (DisplayText . "RibbonSubMenuItemMetadata") (RequiredNamespaceImport) (MethodHeader . "RibbonSubMenuItemMetadata") (ReturnType) (Snippet . "RibbonSubMenuItemMetadata$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "RibbonSubMenuItemMetadata") (Description . "Initializes a new instance of the Fls.VisiTourClient.MetaData.RibbonSubMenuItemMetadata class.
") (DisplayText . "RibbonSubMenuItemMetadata()") (RequiredNamespaceImport) (MethodHeader . "RibbonSubMenuItemMetadata()") (ReturnType) (Snippet . "RibbonSubMenuItemMetadata()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "RowMetaData") (Description . "") (DisplayText . "RowMetaData") (RequiredNamespaceImport) (MethodHeader . "RowMetaData") (ReturnType) (Snippet . "RowMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "RowMetaData") (Description . "") (DisplayText . "RowMetaData()") (RequiredNamespaceImport) (MethodHeader . "RowMetaData()") (ReturnType) (Snippet . "RowMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "RuntimeDataBuilder") (Description . "Implements static methods for the run time building of data. 
") (DisplayText . "RuntimeDataBuilder") (RequiredNamespaceImport) (MethodHeader . "RuntimeDataBuilder") (ReturnType) (Snippet . "RuntimeDataBuilder$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ScheduleDataModel") (Description . "Implements a model for scheduler tourData. 
") (DisplayText . "ScheduleDataModel") (RequiredNamespaceImport) (MethodHeader . "ScheduleDataModel") (ReturnType) (Snippet . "ScheduleDataModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ScheduleDataModel") (Description . "") (DisplayText . "ScheduleDataModel(IDOBaseRepository repository, SchedulerItemLabelBuilders itemLabelBuilder, IRunTimeBuildingContext buildingContext)") (RequiredNamespaceImport) (MethodHeader . "ScheduleDataModel(IDOBaseRepository repository, SchedulerItemLabelBuilders itemLabelBuilder, IRunTimeBuildingContext buildingContext)") (ReturnType) (Snippet . "ScheduleDataModel(${1:IDOBaseRepository repository}, ${2:SchedulerItemLabelBuilders itemLabelBuilder}, ${3:IRunTimeBuildingContext buildingContext})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ScheduleDataModel") (Description . "Initializes a new instance of the Fls.VisiTourClient.ViewModel.Scheduler.ScheduleDataModel class. 

repository: The repository. ") (DisplayText . "ScheduleDataModel(IDOBaseRepository repository, SchedulerItemLabelBuilders itemLabelBuilder, IRunTimeBuildingContext buildingContext, EscalationFilterModel escalationFilterModel)") (RequiredNamespaceImport) (MethodHeader . "ScheduleDataModel(IDOBaseRepository repository, SchedulerItemLabelBuilders itemLabelBuilder, IRunTimeBuildingContext buildingContext, EscalationFilterModel escalationFilterModel)") (ReturnType) (Snippet . "ScheduleDataModel(${1:IDOBaseRepository repository}, ${2:SchedulerItemLabelBuilders itemLabelBuilder}, ${3:IRunTimeBuildingContext buildingContext}, ${4:EscalationFilterModel escalationFilterModel})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "SchedulerControlMetaData") (Description . "Implements a model for 
") (DisplayText . "SchedulerControlMetaData") (RequiredNamespaceImport) (MethodHeader . "SchedulerControlMetaData") (ReturnType) (Snippet . "SchedulerControlMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "SchedulerControlMetaData") (Description . "Initializes a new instance of the Fls.VisiTourClient.MetaData.SchedulerControlMetaData class.
") (DisplayText . "SchedulerControlMetaData()") (RequiredNamespaceImport) (MethodHeader . "SchedulerControlMetaData()") (ReturnType) (Snippet . "SchedulerControlMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "SchedulerViewDateTimeSlotModel") (Description . "Implements a model for scheduler view scheduleTable column header.
") (DisplayText . "SchedulerViewDateTimeSlotModel") (RequiredNamespaceImport) (MethodHeader . "SchedulerViewDateTimeSlotModel") (ReturnType) (Snippet . "SchedulerViewDateTimeSlotModel$0") (Kind . "Struct") (IsSuggestionMode . :json-false)) ((CompletionText . "SchedulerViewDateTimeSlotModel") (Description . "") (DisplayText . "SchedulerViewDateTimeSlotModel()") (RequiredNamespaceImport) (MethodHeader . "SchedulerViewDateTimeSlotModel()") (ReturnType) (Snippet . "SchedulerViewDateTimeSlotModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "SchedulerViewDateTimeSlotModel") (Description . "Initializes a new instance of the Fls.VisiTourClient.ViewModel.Scheduler.SchedulerViewDateTimeSlotModel struct.

slot: The date time slot.
isZombieTime: Indicates that slot is a zombie.
width: The slots width.") (DisplayText . "SchedulerViewDateTimeSlotModel(DateTimeSlot slot, bool isZombieTime, double width)") (RequiredNamespaceImport) (MethodHeader . "SchedulerViewDateTimeSlotModel(DateTimeSlot slot, bool isZombieTime, double width)") (ReturnType) (Snippet . "SchedulerViewDateTimeSlotModel(${1:DateTimeSlot slot}, ${2:bool isZombieTime}, ${3:double width})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "SearchLookUpData") (Description . "") (DisplayText . "SearchLookUpData") (RequiredNamespaceImport) (MethodHeader . "SearchLookUpData") (ReturnType) (Snippet . "SearchLookUpData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "SearchLookUpData") (Description . "") (DisplayText . "SearchLookUpData()") (RequiredNamespaceImport) (MethodHeader . "SearchLookUpData()") (ReturnType) (Snippet . "SearchLookUpData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "SearchResultDataOutputType") (Description . "") (DisplayText . "SearchResultDataOutputType") (RequiredNamespaceImport) (MethodHeader . "SearchResultDataOutputType") (ReturnType) (Snippet . "SearchResultDataOutputType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "SearchResultDataOutputType") (Description . "SearchResultDataOutputType class constructor
") (DisplayText . "SearchResultDataOutputType()") (RequiredNamespaceImport) (MethodHeader . "SearchResultDataOutputType()") (ReturnType) (Snippet . "SearchResultDataOutputType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "SelectRefTablesCtrlMetaData") (Description . "") (DisplayText . "SelectRefTablesCtrlMetaData") (RequiredNamespaceImport) (MethodHeader . "SelectRefTablesCtrlMetaData") (ReturnType) (Snippet . "SelectRefTablesCtrlMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "SelectRefTablesCtrlMetaData") (Description . "") (DisplayText . "SelectRefTablesCtrlMetaData()") (RequiredNamespaceImport) (MethodHeader . "SelectRefTablesCtrlMetaData()") (ReturnType) (Snippet . "SelectRefTablesCtrlMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ServerTimeData") (Description . "") (DisplayText . "ServerTimeData") (RequiredNamespaceImport) (MethodHeader . "ServerTimeData") (ReturnType) (Snippet . "ServerTimeData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ServerTimeData") (Description . "") (DisplayText . "ServerTimeData()") (RequiredNamespaceImport) (MethodHeader . "ServerTimeData()") (ReturnType) (Snippet . "ServerTimeData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "SetValueMetaData") (Description . "Implements a model for 
") (DisplayText . "SetValueMetaData") (RequiredNamespaceImport) (MethodHeader . "SetValueMetaData") (ReturnType) (Snippet . "SetValueMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "SetValueMetaData") (Description . "Initializes a new instance of the Fls.VisiTourClient.MetaData.SetValueMetaData class.
") (DisplayText . "SetValueMetaData()") (RequiredNamespaceImport) (MethodHeader . "SetValueMetaData()") (ReturnType) (Snippet . "SetValueMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "SignedData") (Description . "") (DisplayText . "SignedData") (RequiredNamespaceImport) (MethodHeader . "SignedData") (ReturnType) (Snippet . "SignedData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "SignedData") (Description . "") (DisplayText . "SignedData()") (RequiredNamespaceImport) (MethodHeader . "SignedData()") (ReturnType) (Snippet . "SignedData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "SignedData") (Description . "") (DisplayText . "SignedData(IChipher cipher)") (RequiredNamespaceImport) (MethodHeader . "SignedData(IChipher cipher)") (ReturnType) (Snippet . "SignedData(${1:IChipher cipher})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "SimpleDataTableView") (Description . "Implements a forms user control based on a view model.
This control 
") (DisplayText . "SimpleDataTableView") (RequiredNamespaceImport) (MethodHeader . "SimpleDataTableView") (ReturnType) (Snippet . "SimpleDataTableView$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "SimpleDataTableView") (Description . "Initializes a new instance of the Fls.Controls.Forms.DevExpressBase.TableGridView class.
") (DisplayText . "SimpleDataTableView()") (RequiredNamespaceImport) (MethodHeader . "SimpleDataTableView()") (ReturnType) (Snippet . "SimpleDataTableView()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "SimpleDataTableView") (Description . "Initializes a new instance of the Fls.Controls.Forms.DevExpressBase.TableGridView class.

viewModel: The used view model ") (DisplayText . "SimpleDataTableView(SimpleDataTableViewModel viewModel)") (RequiredNamespaceImport) (MethodHeader . "SimpleDataTableView(SimpleDataTableViewModel viewModel)") (ReturnType) (Snippet . "SimpleDataTableView(${1:SimpleDataTableViewModel viewModel})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "SimpleDataTableViewModel") (Description . "Implements a model for data table.
") (DisplayText . "SimpleDataTableViewModel") (RequiredNamespaceImport) (MethodHeader . "SimpleDataTableViewModel") (ReturnType) (Snippet . "SimpleDataTableViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "SimpleDataTableViewModel") (Description . "Initializes a new instance of the Fls.UI.Base.DataTableViewModel class.
") (DisplayText . "SimpleDataTableViewModel()") (RequiredNamespaceImport) (MethodHeader . "SimpleDataTableViewModel()") (ReturnType) (Snippet . "SimpleDataTableViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "SimpleTableCtrlMetaData") (Description . "") (DisplayText . "SimpleTableCtrlMetaData") (RequiredNamespaceImport) (MethodHeader . "SimpleTableCtrlMetaData") (ReturnType) (Snippet . "SimpleTableCtrlMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "SimpleTableCtrlMetaData") (Description . "") (DisplayText . "SimpleTableCtrlMetaData()") (RequiredNamespaceImport) (MethodHeader . "SimpleTableCtrlMetaData()") (ReturnType) (Snippet . "SimpleTableCtrlMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "STAThreadAttribute") (Description . "") (DisplayText . "STAThreadAttribute") (RequiredNamespaceImport) (MethodHeader . "STAThreadAttribute") (ReturnType) (Snippet . "STAThreadAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "STAThreadAttribute") (Description . "") (DisplayText . "STAThreadAttribute()") (RequiredNamespaceImport) (MethodHeader . "STAThreadAttribute()") (ReturnType) (Snippet . "STAThreadAttribute()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "StreamAsyncData") (Description . "Implements a model for 
") (DisplayText . "StreamAsyncData") (RequiredNamespaceImport) (MethodHeader . "StreamAsyncData") (ReturnType) (Snippet . "StreamAsyncData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "StreamAsyncData") (Description . "") (DisplayText . "StreamAsyncData(Stream stream, object data, Action<object> action)") (RequiredNamespaceImport) (MethodHeader . "StreamAsyncData(Stream stream, object data, Action<object> action)") (ReturnType) (Snippet . "StreamAsyncData(${1:Stream stream}, ${2:object data}, ${3:Action<object> action})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "TableDataItemType") (Description . "") (DisplayText . "TableDataItemType") (RequiredNamespaceImport) (MethodHeader . "TableDataItemType") (ReturnType) (Snippet . "TableDataItemType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "TableDataItemType") (Description . "TableDataItemType class constructor
") (DisplayText . "TableDataItemType()") (RequiredNamespaceImport) (MethodHeader . "TableDataItemType()") (ReturnType) (Snippet . "TableDataItemType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "TableDataType") (Description . "") (DisplayText . "TableDataType") (RequiredNamespaceImport) (MethodHeader . "TableDataType") (ReturnType) (Snippet . "TableDataType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "TableDataType") (Description . "") (DisplayText . "TableDataType()") (RequiredNamespaceImport) (MethodHeader . "TableDataType()") (ReturnType) (Snippet . "TableDataType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "TaggedDataRow") (Description . "") (DisplayText . "TaggedDataRow") (RequiredNamespaceImport) (MethodHeader . "TaggedDataRow") (ReturnType) (Snippet . "TaggedDataRow$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "TaggedDataRow") (Description . "") (DisplayText . "TaggedDataRow()") (RequiredNamespaceImport) (MethodHeader . "TaggedDataRow()") (ReturnType) (Snippet . "TaggedDataRow()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "TaggedDataRow") (Description . "") (DisplayText . "TaggedDataRow(DataRowBuilder builder)") (RequiredNamespaceImport) (MethodHeader . "TaggedDataRow(DataRowBuilder builder)") (ReturnType) (Snippet . "TaggedDataRow(${1:DataRowBuilder builder})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "TaskdataFormViewModel") (Description . "") (DisplayText . "TaskdataFormViewModel") (RequiredNamespaceImport) (MethodHeader . "TaskdataFormViewModel") (ReturnType) (Snippet . "TaskdataFormViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "TaskdataFormViewModel") (Description . "") (DisplayText . "TaskdataFormViewModel()") (RequiredNamespaceImport) (MethodHeader . "TaskdataFormViewModel()") (ReturnType) (Snippet . "TaskdataFormViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "TechWriterDataViewModel") (Description . "Implements a model for 
") (DisplayText . "TechWriterDataViewModel") (RequiredNamespaceImport) (MethodHeader . "TechWriterDataViewModel") (ReturnType) (Snippet . "TechWriterDataViewModel$0") (Kind . "Struct") (IsSuggestionMode . :json-false)) ((CompletionText . "TechWriterDataViewModel") (Description . "") (DisplayText . "TechWriterDataViewModel()") (RequiredNamespaceImport) (MethodHeader . "TechWriterDataViewModel()") (ReturnType) (Snippet . "TechWriterDataViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "TechWriterDataViewModel") (Description . "Initializes a new instance of the Fls.Base.TechWriterDataViewModel class.
") (DisplayText . "TechWriterDataViewModel(string controlId, string type, string transId, string transText)") (RequiredNamespaceImport) (MethodHeader . "TechWriterDataViewModel(string controlId, string type, string transId, string transText)") (ReturnType) (Snippet . "TechWriterDataViewModel(${1:string controlId}, ${2:string type}, ${3:string transId}, ${4:string transText})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "TempLookUpDataModel") (Description . "Implements a model for 
") (DisplayText . "TempLookUpDataModel") (RequiredNamespaceImport) (MethodHeader . "TempLookUpDataModel") (ReturnType) (Snippet . "TempLookUpDataModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "TempLookUpDataModel") (Description . "Initializes a new instance of the Fls.Base.TempLookUpDataModel class.
") (DisplayText . "TempLookUpDataModel(string entityName, IComparable index, ConcurrentDictionary<string, byte> properties, object data)") (RequiredNamespaceImport) (MethodHeader . "TempLookUpDataModel(string entityName, IComparable index, ConcurrentDictionary<string, byte> properties, object data)") (ReturnType) (Snippet . "TempLookUpDataModel(${1:string entityName}, ${2:IComparable index}, ${3:ConcurrentDictionary<string, byte> properties}, ${4:object data})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "TextFunctionMetaData") (Description . "") (DisplayText . "TextFunctionMetaData") (RequiredNamespaceImport) (MethodHeader . "TextFunctionMetaData") (ReturnType) (Snippet . "TextFunctionMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "TextFunctionMetaData") (Description . "") (DisplayText . "TextFunctionMetaData()") (RequiredNamespaceImport) (MethodHeader . "TextFunctionMetaData()") (ReturnType) (Snippet . "TextFunctionMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "TourDataTimeConversionHelper") (Description . "Helper class for converting a DOTourDate TourDate, Begin and End between frontend and backend time zone.
") (DisplayText . "TourDataTimeConversionHelper") (RequiredNamespaceImport) (MethodHeader . "TourDataTimeConversionHelper") (ReturnType) (Snippet . "TourDataTimeConversionHelper$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "TourDataTimeConversionHelper") (Description . "") (DisplayText . "TourDataTimeConversionHelper()") (RequiredNamespaceImport) (MethodHeader . "TourDataTimeConversionHelper()") (ReturnType) (Snippet . "TourDataTimeConversionHelper()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "UIActionMetaData") (Description . "Implements a model for 
") (DisplayText . "UIActionMetaData") (RequiredNamespaceImport) (MethodHeader . "UIActionMetaData") (ReturnType) (Snippet . "UIActionMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "UIActionMetaData") (Description . "Initializes a new instance of the Fls.VisiTourClient.MetaData.UIActionMetaData class.

name: The action name.
parameters: The action default parameters.
trigger: The action trigger.") (DisplayText . "UIActionMetaData(string name, Parameters parameters, EventType trigger)") (RequiredNamespaceImport) (MethodHeader . "UIActionMetaData(string name, Parameters parameters, EventType trigger)") (ReturnType) (Snippet . "UIActionMetaData(${1:string name}, ${2:Parameters parameters}, ${3:EventType trigger})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateLists") (Description . "Implements a model for 
") (DisplayText . "UpdateLists<TKey, TData>") (RequiredNamespaceImport) (MethodHeader . "UpdateLists<TKey, TData>") (ReturnType) (Snippet . "UpdateLists<${1:TKey}, ${2:TData}>$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateLists") (Description . "Initializes a new instance of the UpdateLists class.
") (DisplayText . "UpdateLists<TKey, TData>(string primaryKeyPropertyName, string modificationDatePropertyName)") (RequiredNamespaceImport) (MethodHeader . "UpdateLists<TKey, TData>(string primaryKeyPropertyName, string modificationDatePropertyName)") (ReturnType) (Snippet . "UpdateLists<${1:TKey}, ${2:TData}>(${3:string primaryKeyPropertyName}, ${4:string modificationDatePropertyName})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateVersion") (Description . "") (DisplayText . "UpdateVersion") (RequiredNamespaceImport) (MethodHeader . "UpdateVersion") (ReturnType) (Snippet . "UpdateVersion$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateVersion") (Description . "") (DisplayText . "UpdateVersion()") (RequiredNamespaceImport) (MethodHeader . "UpdateVersion()") (ReturnType) (Snippet . "UpdateVersion()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateVersion") (Description . "") (DisplayText . "UpdateVersion(FileVersionInfo fv)") (RequiredNamespaceImport) (MethodHeader . "UpdateVersion(FileVersionInfo fv)") (ReturnType) (Snippet . "UpdateVersion(${1:FileVersionInfo fv})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateVersion") (Description . "") (DisplayText . "UpdateVersion(string version)") (RequiredNamespaceImport) (MethodHeader . "UpdateVersion(string version)") (ReturnType) (Snippet . "UpdateVersion(${1:string version})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateWorkflowRequest") (Description . "") (DisplayText . "UpdateWorkflowRequest") (RequiredNamespaceImport) (MethodHeader . "UpdateWorkflowRequest") (ReturnType) (Snippet . "UpdateWorkflowRequest$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateWorkflowRequest") (Description . "") (DisplayText . "UpdateWorkflowRequest()") (RequiredNamespaceImport) (MethodHeader . "UpdateWorkflowRequest()") (ReturnType) (Snippet . "UpdateWorkflowRequest()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateWorkflowResponse") (Description . "") (DisplayText . "UpdateWorkflowResponse") (RequiredNamespaceImport) (MethodHeader . "UpdateWorkflowResponse") (ReturnType) (Snippet . "UpdateWorkflowResponse$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateWorkflowResponse") (Description . "") (DisplayText . "UpdateWorkflowResponse()") (RequiredNamespaceImport) (MethodHeader . "UpdateWorkflowResponse()") (ReturnType) (Snippet . "UpdateWorkflowResponse()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ValidatableValue") (Description . "Implements a model for a valid value.
The value type.") (DisplayText . "ValidatableValue<T>") (RequiredNamespaceImport) (MethodHeader . "ValidatableValue<T>") (ReturnType) (Snippet . "ValidatableValue<${1:T}>$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ValidatableValue") (Description . "Initializes a new instance of the ValidatableValue class.
") (DisplayText . "ValidatableValue<T>()") (RequiredNamespaceImport) (MethodHeader . "ValidatableValue<T>()") (ReturnType) (Snippet . "ValidatableValue<${1:T}>()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ValidateableObject") (Description . "Implements a model for validate objects. The validation methods have to be names like 
\"ValidatableObject.ValidationMethodNamePrefix\"\"PropertyName\" or \"ValidateDisplayName\".
The full declaration has to be: protected string ValidateDisplayName(). 
The validate methods are found automatically.
") (DisplayText . "ValidateableObject") (RequiredNamespaceImport) (MethodHeader . "ValidateableObject") (ReturnType) (Snippet . "ValidateableObject$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ValidateableObject") (Description . "Initializes a new instance of the Fls.Base.ValidateableObject class.
") (DisplayText . "ValidateableObject()") (RequiredNamespaceImport) (MethodHeader . "ValidateableObject()") (ReturnType) (Snippet . "ValidateableObject()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ValidateEventArgs") (Description . "") (DisplayText . "ValidateEventArgs") (RequiredNamespaceImport) (MethodHeader . "ValidateEventArgs") (ReturnType) (Snippet . "ValidateEventArgs$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ValidateEventArgs") (Description . "") (DisplayText . "ValidateEventArgs(DOBase data, string field)") (RequiredNamespaceImport) (MethodHeader . "ValidateEventArgs(DOBase data, string field)") (ReturnType) (Snippet . "ValidateEventArgs(${1:DOBase data}, ${2:string field})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ValidationEvent") (Description . "container for validation error results.
holds translationid of errormessage and
properties related to validation error.
") (DisplayText . "ValidationEvent") (RequiredNamespaceImport) (MethodHeader . "ValidationEvent") (ReturnType) (Snippet . "ValidationEvent$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ValidationEvent") (Description . "") (DisplayText . "ValidationEvent(IEnumerable<DProperty> errorProps, string validErrorTextID, ValidationEventType type = Error)") (RequiredNamespaceImport) (MethodHeader . "ValidationEvent(IEnumerable<DProperty> errorProps, string validErrorTextID, ValidationEventType type = Error)") (ReturnType) (Snippet . "ValidationEvent(${1:IEnumerable<DProperty> errorProps}, ${2:string validErrorTextID}, ${3:ValidationEventType type = Error})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ValidationResult") (Description . "Container for multiple validation errors.    
") (DisplayText . "ValidationResult") (RequiredNamespaceImport) (MethodHeader . "ValidationResult") (ReturnType) (Snippet . "ValidationResult$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ValidationResult") (Description . "") (DisplayText . "ValidationResult()") (RequiredNamespaceImport) (MethodHeader . "ValidationResult()") (ReturnType) (Snippet . "ValidationResult()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ValidationStatus") (Description . "") (DisplayText . "ValidationStatus") (RequiredNamespaceImport) (MethodHeader . "ValidationStatus") (ReturnType) (Snippet . "ValidationStatus$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "ValidationType") (Description . "") (DisplayText . "ValidationType") (RequiredNamespaceImport) (MethodHeader . "ValidationType") (ReturnType) (Snippet . "ValidationType$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "ValidatorBase") (Description . "Base class for DOBase validators containing usefull methods.
But it's not necessary for a validator class to inherit from this class.
") (DisplayText . "ValidatorBase") (RequiredNamespaceImport) (MethodHeader . "ValidatorBase") (ReturnType) (Snippet . "ValidatorBase$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ValidatorBase") (Description . "") (DisplayText . "ValidatorBase()") (RequiredNamespaceImport) (MethodHeader . "ValidatorBase()") (ReturnType) (Snippet . "ValidatorBase()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "Validators") (Description . "") (DisplayText . "Validators") (RequiredNamespaceImport) (MethodHeader . "Validators") (ReturnType) (Snippet . "Validators$0") (Kind . "Namespace") (IsSuggestionMode . :json-false)) ((CompletionText . "ValueBuilderData") (Description . "Implements value builder date.
") (DisplayText . "ValueBuilderData") (RequiredNamespaceImport) (MethodHeader . "ValueBuilderData") (ReturnType) (Snippet . "ValueBuilderData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ValueBuilderData") (Description . "") (DisplayText . "ValueBuilderData()") (RequiredNamespaceImport) (MethodHeader . "ValueBuilderData()") (ReturnType) (Snippet . "ValueBuilderData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "VTSDataObjects") (Description . "") (DisplayText . "VTSDataObjects") (RequiredNamespaceImport) (MethodHeader . "VTSDataObjects") (ReturnType) (Snippet . "VTSDataObjects$0") (Kind . "Namespace") (IsSuggestionMode . :json-false)) ((CompletionText . "WSDataAccess") (Description . "") (DisplayText . "WSDataAccess") (RequiredNamespaceImport) (MethodHeader . "WSDataAccess") (ReturnType) (Snippet . "WSDataAccess$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "WSDataAccess") (Description . "") (DisplayText . "WSDataAccess()") (RequiredNamespaceImport) (MethodHeader . "WSDataAccess()") (ReturnType) (Snippet . "WSDataAccess()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "XmlCDataSection") (Description . "") (DisplayText . "XmlCDataSection") (RequiredNamespaceImport) (MethodHeader . "XmlCDataSection") (ReturnType) (Snippet . "XmlCDataSection$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "XmlCDataSection") (Description . "") (DisplayText . "XmlCDataSection(string data, XmlDocument doc)") (RequiredNamespaceImport) (MethodHeader . "XmlCDataSection(string data, XmlDocument doc)") (ReturnType) (Snippet . "XmlCDataSection(${1:string data}, ${2:XmlDocument doc})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "XmlCharacterData") (Description . "") (DisplayText . "XmlCharacterData") (RequiredNamespaceImport) (MethodHeader . "XmlCharacterData") (ReturnType) (Snippet . "XmlCharacterData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "XmlCharacterData") (Description . "") (DisplayText . "XmlCharacterData(string data, XmlDocument doc)") (RequiredNamespaceImport) (MethodHeader . "XmlCharacterData(string data, XmlDocument doc)") (ReturnType) (Snippet . "XmlCharacterData(${1:string data}, ${2:XmlDocument doc})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "XmlDataDocument") (Description . "") (DisplayText . "XmlDataDocument") (RequiredNamespaceImport) (MethodHeader . "XmlDataDocument") (ReturnType) (Snippet . "XmlDataDocument$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "XmlDataDocument") (Description . "") (DisplayText . "XmlDataDocument()") (RequiredNamespaceImport) (MethodHeader . "XmlDataDocument()") (ReturnType) (Snippet . "XmlDataDocument()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "XmlDataDocument") (Description . "") (DisplayText . "XmlDataDocument(DataSet dataset)") (RequiredNamespaceImport) (MethodHeader . "XmlDataDocument(DataSet dataset)") (ReturnType) (Snippet . "XmlDataDocument(${1:DataSet dataset})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "XmlDateTimeSerializationMode") (Description . "") (DisplayText . "XmlDateTimeSerializationMode") (RequiredNamespaceImport) (MethodHeader . "XmlDateTimeSerializationMode") (ReturnType) (Snippet . "XmlDateTimeSerializationMode$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "XmlValidatingReader") (Description . "") (DisplayText . "XmlValidatingReader") (RequiredNamespaceImport) (MethodHeader . "XmlValidatingReader") (ReturnType) (Snippet . "XmlValidatingReader$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "XmlValidatingReader") (Description . "") (DisplayText . "XmlValidatingReader(Stream xmlFragment, XmlNodeType fragType, XmlParserContext context)") (RequiredNamespaceImport) (MethodHeader . "XmlValidatingReader(Stream xmlFragment, XmlNodeType fragType, XmlParserContext context)") (ReturnType) (Snippet . "XmlValidatingReader(${1:Stream xmlFragment}, ${2:XmlNodeType fragType}, ${3:XmlParserContext context})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "XmlValidatingReader") (Description . "") (DisplayText . "XmlValidatingReader(string xmlFragment, XmlNodeType fragType, XmlParserContext context)") (RequiredNamespaceImport) (MethodHeader . "XmlValidatingReader(string xmlFragment, XmlNodeType fragType, XmlParserContext context)") (ReturnType) (Snippet . "XmlValidatingReader(${1:string xmlFragment}, ${2:XmlNodeType fragType}, ${3:XmlParserContext context})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "XmlValidatingReader") (Description . "") (DisplayText . "XmlValidatingReader(XmlReader reader)") (RequiredNamespaceImport) (MethodHeader . "XmlValidatingReader(XmlReader reader)") (ReturnType) (Snippet . "XmlValidatingReader(${1:XmlReader reader})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "YearOverviewCtrlMetaData") (Description . "") (DisplayText . "YearOverviewCtrlMetaData") (RequiredNamespaceImport) (MethodHeader . "YearOverviewCtrlMetaData") (ReturnType) (Snippet . "YearOverviewCtrlMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "YearOverviewCtrlMetaData") (Description . "") (DisplayText . "YearOverviewCtrlMetaData()") (RequiredNamespaceImport) (MethodHeader . "YearOverviewCtrlMetaData()") (ReturnType) (Snippet . "YearOverviewCtrlMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false))]
[10:17:23] <-- 30 /autocomplete: [((CompletionText . "DataAccess") (Description . "") (DisplayText . "DataAccess") (RequiredNamespaceImport) (MethodHeader . "DataAccess") (ReturnType) (Snippet . "DataAccess$0") (Kind . "Namespace") (IsSuggestionMode . :json-false)) ((CompletionText . "DataBaseRequiredPropertiesType") (Description . "") (DisplayText . "DataBaseRequiredPropertiesType") (RequiredNamespaceImport) (MethodHeader . "DataBaseRequiredPropertiesType") (ReturnType) (Snippet . "DataBaseRequiredPropertiesType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataBaseRequiredPropertiesType") (Description . "DataBaseRequiredPropertiesType class constructor
") (DisplayText . "DataBaseRequiredPropertiesType()") (RequiredNamespaceImport) (MethodHeader . "DataBaseRequiredPropertiesType()") (ReturnType) (Snippet . "DataBaseRequiredPropertiesType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataConnection") (Description . "TODO: Update summary.
") (DisplayText . "DataConnection") (RequiredNamespaceImport) (MethodHeader . "DataConnection") (ReturnType) (Snippet . "DataConnection$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataConnection") (Description . "") (DisplayText . "DataConnection()") (RequiredNamespaceImport) (MethodHeader . "DataConnection()") (ReturnType) (Snippet . "DataConnection()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataConnection") (Description . "") (DisplayText . "DataConnection(DOBindingSource lookupBindingSource, DProperty propertyName, string summary, DProperty lookedUpProperty)") (RequiredNamespaceImport) (MethodHeader . "DataConnection(DOBindingSource lookupBindingSource, DProperty propertyName, string summary, DProperty lookedUpProperty)") (ReturnType) (Snippet . "DataConnection(${1:DOBindingSource lookupBindingSource}, ${2:DProperty propertyName}, ${3:string summary}, ${4:DProperty lookedUpProperty})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataConnection") (Description . "") (DisplayText . "DataConnection(DODataView lookupBindingSource, DProperty propertyName, string summary, DProperty lookedUpProperty)") (RequiredNamespaceImport) (MethodHeader . "DataConnection(DODataView lookupBindingSource, DProperty propertyName, string summary, DProperty lookedUpProperty)") (ReturnType) (Snippet . "DataConnection(${1:DODataView lookupBindingSource}, ${2:DProperty propertyName}, ${3:string summary}, ${4:DProperty lookedUpProperty})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataContext") (Description . "Gets or sets the data-context, used to decide which view to use for this viewmodel. Values are the same as
the \"AvailableTypes\" enum in the 'Layout xsd'
") (DisplayText . "DataContext") (RequiredNamespaceImport) (MethodHeader . "DataContext") (ReturnType . "eControlType") (Snippet . "DataContext$0") (Kind . "Property") (IsSuggestionMode . :json-false)) ((CompletionText . "DataDependency") (Description . "") (DisplayText . "DataDependency") (RequiredNamespaceImport) (MethodHeader . "DataDependency") (ReturnType . "EventHandler<DataDependencyEventArgs>") (Snippet . "DataDependency$0") (Kind . "Event") (IsSuggestionMode . :json-false)) ((CompletionText . "DataDependencyEventArgs") (Description . "Implements a model for request event arguments.
") (DisplayText . "DataDependencyEventArgs") (RequiredNamespaceImport) (MethodHeader . "DataDependencyEventArgs") (ReturnType) (Snippet . "DataDependencyEventArgs$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataDependencyEventArgs") (Description . "Initializes a new instance of the Fls.UI.Base.UserInformationEventArgs class.

request: An user request.") (DisplayText . "DataDependencyEventArgs(DataDependencyViewModel infoViewModel)") (RequiredNamespaceImport) (MethodHeader . "DataDependencyEventArgs(DataDependencyViewModel infoViewModel)") (ReturnType) (Snippet . "DataDependencyEventArgs(${1:DataDependencyViewModel infoViewModel})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataDependencyViewModel") (Description . "") (DisplayText . "DataDependencyViewModel") (RequiredNamespaceImport) (MethodHeader . "DataDependencyViewModel") (ReturnType) (Snippet . "DataDependencyViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataDependencyViewModel") (Description . "") (DisplayText . "DataDependencyViewModel(DOBindingSource source, IEnumerable<string> ignoreEntitiesList)") (RequiredNamespaceImport) (MethodHeader . "DataDependencyViewModel(DOBindingSource source, IEnumerable<string> ignoreEntitiesList)") (ReturnType) (Snippet . "DataDependencyViewModel(${1:DOBindingSource source}, ${2:IEnumerable<string> ignoreEntitiesList})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataErrorsChangedEventArgs") (Description . "") (DisplayText . "DataErrorsChangedEventArgs") (RequiredNamespaceImport) (MethodHeader . "DataErrorsChangedEventArgs") (ReturnType) (Snippet . "DataErrorsChangedEventArgs$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataErrorsChangedEventArgs") (Description . "") (DisplayText . "DataErrorsChangedEventArgs(string propertyName)") (RequiredNamespaceImport) (MethodHeader . "DataErrorsChangedEventArgs(string propertyName)") (ReturnType) (Snippet . "DataErrorsChangedEventArgs(${1:string propertyName})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataGroupType") (Description . "") (DisplayText . "DataGroupType") (RequiredNamespaceImport) (MethodHeader . "DataGroupType") (ReturnType) (Snippet . "DataGroupType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataGroupType") (Description . "DataGroupType class constructor
") (DisplayText . "DataGroupType()") (RequiredNamespaceImport) (MethodHeader . "DataGroupType()") (ReturnType) (Snippet . "DataGroupType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataItemType") (Description . "") (DisplayText . "DataItemType") (RequiredNamespaceImport) (MethodHeader . "DataItemType") (ReturnType) (Snippet . "DataItemType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataItemType") (Description . "") (DisplayText . "DataItemType()") (RequiredNamespaceImport) (MethodHeader . "DataItemType()") (ReturnType) (Snippet . "DataItemType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataItemTypeCreateStyle") (Description . "") (DisplayText . "DataItemTypeCreateStyle") (RequiredNamespaceImport) (MethodHeader . "DataItemTypeCreateStyle") (ReturnType) (Snippet . "DataItemTypeCreateStyle$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DataItemTypeEntityViewSourceMode") (Description . "") (DisplayText . "DataItemTypeEntityViewSourceMode") (RequiredNamespaceImport) (MethodHeader . "DataItemTypeEntityViewSourceMode") (ReturnType) (Snippet . "DataItemTypeEntityViewSourceMode$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DataItemTypeInitAction") (Description . "") (DisplayText . "DataItemTypeInitAction") (RequiredNamespaceImport) (MethodHeader . "DataItemTypeInitAction") (ReturnType) (Snippet . "DataItemTypeInitAction$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DataLoadingStatus") (Description . "Gets or sets the DataLoadingStatus as LoadingStatus. 
") (DisplayText . "DataLoadingStatus") (RequiredNamespaceImport) (MethodHeader . "DataLoadingStatus") (ReturnType . "LoadingStatus") (Snippet . "DataLoadingStatus$0") (Kind . "Property") (IsSuggestionMode . :json-false)) ((CompletionText . "DataMisalignedException") (Description . "") (DisplayText . "DataMisalignedException") (RequiredNamespaceImport) (MethodHeader . "DataMisalignedException") (ReturnType) (Snippet . "DataMisalignedException$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataMisalignedException") (Description . "") (DisplayText . "DataMisalignedException()") (RequiredNamespaceImport) (MethodHeader . "DataMisalignedException()") (ReturnType) (Snippet . "DataMisalignedException()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataMisalignedException") (Description . "") (DisplayText . "DataMisalignedException(string message)") (RequiredNamespaceImport) (MethodHeader . "DataMisalignedException(string message)") (ReturnType) (Snippet . "DataMisalignedException(${1:string message})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataMisalignedException") (Description . "") (DisplayText . "DataMisalignedException(string message, Exception innerException)") (RequiredNamespaceImport) (MethodHeader . "DataMisalignedException(string message, Exception innerException)") (ReturnType) (Snippet . "DataMisalignedException(${1:string message}, ${2:Exception innerException})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataModel") (Description . "Implements a model for 
") (DisplayText . "DataModel") (RequiredNamespaceImport) (MethodHeader . "DataModel") (ReturnType) (Snippet . "DataModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataModel") (Description . "") (DisplayText . "DataModel()") (RequiredNamespaceImport) (MethodHeader . "DataModel()") (ReturnType) (Snippet . "DataModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObject") (Description . "") (DisplayText . "DataObject") (RequiredNamespaceImport) (MethodHeader . "DataObject") (ReturnType) (Snippet . "DataObject$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObject") (Description . "") (DisplayText . "DataObject()") (RequiredNamespaceImport) (MethodHeader . "DataObject()") (ReturnType) (Snippet . "DataObject()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectAttribute") (Description . "") (DisplayText . "DataObjectAttribute") (RequiredNamespaceImport) (MethodHeader . "DataObjectAttribute") (ReturnType) (Snippet . "DataObjectAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectAttribute") (Description . "") (DisplayText . "DataObjectAttribute()") (RequiredNamespaceImport) (MethodHeader . "DataObjectAttribute()") (ReturnType) (Snippet . "DataObjectAttribute()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectAttribute") (Description . "") (DisplayText . "DataObjectAttribute(bool isDataObject)") (RequiredNamespaceImport) (MethodHeader . "DataObjectAttribute(bool isDataObject)") (ReturnType) (Snippet . "DataObjectAttribute(${1:bool isDataObject})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectClock") (Description . "") (DisplayText . "DataObjectClock<T>") (RequiredNamespaceImport) (MethodHeader . "DataObjectClock<T>") (ReturnType) (Snippet . "DataObjectClock<${1:T}>$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectClock") (Description . "") (DisplayText . "DataObjectClock<T>(T doObject, ITimeExtractor extractor, IZonedClock unbiasedLocalTime)") (RequiredNamespaceImport) (MethodHeader . "DataObjectClock<T>(T doObject, ITimeExtractor extractor, IZonedClock unbiasedLocalTime)") (ReturnType) (Snippet . "DataObjectClock<${1:T}>(${2:T doObject}, ${3:ITimeExtractor extractor}, ${4:IZonedClock unbiasedLocalTime})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectFieldAttribute") (Description . "") (DisplayText . "DataObjectFieldAttribute") (RequiredNamespaceImport) (MethodHeader . "DataObjectFieldAttribute") (ReturnType) (Snippet . "DataObjectFieldAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectFieldAttribute") (Description . "") (DisplayText . "DataObjectFieldAttribute(bool primaryKey)") (RequiredNamespaceImport) (MethodHeader . "DataObjectFieldAttribute(bool primaryKey)") (ReturnType) (Snippet . "DataObjectFieldAttribute(${1:bool primaryKey})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectFieldAttribute") (Description . "") (DisplayText . "DataObjectFieldAttribute(bool primaryKey, bool isIdentity)") (RequiredNamespaceImport) (MethodHeader . "DataObjectFieldAttribute(bool primaryKey, bool isIdentity)") (ReturnType) (Snippet . "DataObjectFieldAttribute(${1:bool primaryKey}, ${2:bool isIdentity})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectFieldAttribute") (Description . "") (DisplayText . "DataObjectFieldAttribute(bool primaryKey, bool isIdentity, bool isNullable)") (RequiredNamespaceImport) (MethodHeader . "DataObjectFieldAttribute(bool primaryKey, bool isIdentity, bool isNullable)") (ReturnType) (Snippet . "DataObjectFieldAttribute(${1:bool primaryKey}, ${2:bool isIdentity}, ${3:bool isNullable})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectFieldAttribute") (Description . "") (DisplayText . "DataObjectFieldAttribute(bool primaryKey, bool isIdentity, bool isNullable, int length)") (RequiredNamespaceImport) (MethodHeader . "DataObjectFieldAttribute(bool primaryKey, bool isIdentity, bool isNullable, int length)") (ReturnType) (Snippet . "DataObjectFieldAttribute(${1:bool primaryKey}, ${2:bool isIdentity}, ${3:bool isNullable}, ${4:int length})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectMethodAttribute") (Description . "") (DisplayText . "DataObjectMethodAttribute") (RequiredNamespaceImport) (MethodHeader . "DataObjectMethodAttribute") (ReturnType) (Snippet . "DataObjectMethodAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectMethodAttribute") (Description . "") (DisplayText . "DataObjectMethodAttribute(DataObjectMethodType methodType)") (RequiredNamespaceImport) (MethodHeader . "DataObjectMethodAttribute(DataObjectMethodType methodType)") (ReturnType) (Snippet . "DataObjectMethodAttribute(${1:DataObjectMethodType methodType})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectMethodAttribute") (Description . "") (DisplayText . "DataObjectMethodAttribute(DataObjectMethodType methodType, bool isDefault)") (RequiredNamespaceImport) (MethodHeader . "DataObjectMethodAttribute(DataObjectMethodType methodType, bool isDefault)") (ReturnType) (Snippet . "DataObjectMethodAttribute(${1:DataObjectMethodType methodType}, ${2:bool isDefault})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectMethodType") (Description . "") (DisplayText . "DataObjectMethodType") (RequiredNamespaceImport) (MethodHeader . "DataObjectMethodType") (ReturnType) (Snippet . "DataObjectMethodType$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectTimeInformation") (Description . "") (DisplayText . "DataObjectTimeInformation") (RequiredNamespaceImport) (MethodHeader . "DataObjectTimeInformation") (ReturnType) (Snippet . "DataObjectTimeInformation$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectTimeInformation") (Description . "") (DisplayText . "DataObjectTimeInformation(TimeZoneInfo timeZone, IProvideToday dateForTimeOfDayConversion, TimeZoneAlias alias)") (RequiredNamespaceImport) (MethodHeader . "DataObjectTimeInformation(TimeZoneInfo timeZone, IProvideToday dateForTimeOfDayConversion, TimeZoneAlias alias)") (ReturnType) (Snippet . "DataObjectTimeInformation(${1:TimeZoneInfo timeZone}, ${2:IProvideToday dateForTimeOfDayConversion}, ${3:TimeZoneAlias alias})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectTimeInformationExtractor") (Description . "") (DisplayText . "DataObjectTimeInformationExtractor") (RequiredNamespaceImport) (MethodHeader . "DataObjectTimeInformationExtractor") (ReturnType) (Snippet . "DataObjectTimeInformationExtractor$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectTimeInformationExtractor") (Description . "") (DisplayText . "DataObjectTimeInformationExtractor(TimeZoneInfo fallBackTimeZone, IProvideToday fallBackDateForTimeOfDayConversion)") (RequiredNamespaceImport) (MethodHeader . "DataObjectTimeInformationExtractor(TimeZoneInfo fallBackTimeZone, IProvideToday fallBackDateForTimeOfDayConversion)") (ReturnType) (Snippet . "DataObjectTimeInformationExtractor(${1:TimeZoneInfo fallBackTimeZone}, ${2:IProvideToday fallBackDateForTimeOfDayConversion})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectToDateMapper") (Description . "") (DisplayText . "DataObjectToDateMapper") (RequiredNamespaceImport) (MethodHeader . "DataObjectToDateMapper") (ReturnType) (Snippet . "DataObjectToDateMapper$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectToDateMapper") (Description . "") (DisplayText . "DataObjectToDateMapper(IProvideToday fallBackToday)") (RequiredNamespaceImport) (MethodHeader . "DataObjectToDateMapper(IProvideToday fallBackToday)") (ReturnType) (Snippet . "DataObjectToDateMapper(${1:IProvideToday fallBackToday})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataOutputType") (Description . "") (DisplayText . "DataOutputType") (RequiredNamespaceImport) (MethodHeader . "DataOutputType") (ReturnType) (Snippet . "DataOutputType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataOutputType") (Description . "DataOutputType class constructor
") (DisplayText . "DataOutputType()") (RequiredNamespaceImport) (MethodHeader . "DataOutputType()") (ReturnType) (Snippet . "DataOutputType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataRequestModel") (Description . "") (DisplayText . "DataRequestModel<Index, Data>") (RequiredNamespaceImport) (MethodHeader . "DataRequestModel<Index, Data>") (ReturnType) (Snippet . "DataRequestModel<${1:Index}, ${2:Data}>$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataRequestModel") (Description . "") (DisplayText . "DataRequestModel<Index, Data>()") (RequiredNamespaceImport) (MethodHeader . "DataRequestModel<Index, Data>()") (ReturnType) (Snippet . "DataRequestModel<${1:Index}, ${2:Data}>()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataSourceActionCanExe") (Description . "") (DisplayText . "DataSourceActionCanExe(Parameters param)") (RequiredNamespaceImport) (MethodHeader . "DataSourceActionCanExe(Parameters param)") (ReturnType . "bool") (Snippet . "DataSourceActionCanExe(${1:Parameters param})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataSourceActionExe") (Description . "") (DisplayText . "DataSourceActionExe(Parameters param)") (RequiredNamespaceImport) (MethodHeader . "DataSourceActionExe(Parameters param)") (ReturnType . "void") (Snippet . "DataSourceActionExe(${1:Parameters param});$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataSourceActionType") (Description . "") (DisplayText . "DataSourceActionType") (RequiredNamespaceImport) (MethodHeader . "DataSourceActionType") (ReturnType) (Snippet . "DataSourceActionType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataSourceActionType") (Description . "") (DisplayText . "DataSourceActionType()") (RequiredNamespaceImport) (MethodHeader . "DataSourceActionType()") (ReturnType) (Snippet . "DataSourceActionType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataSourceActionTypeType") (Description . "") (DisplayText . "DataSourceActionTypeType") (RequiredNamespaceImport) (MethodHeader . "DataSourceActionTypeType") (ReturnType) (Snippet . "DataSourceActionTypeType$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DataSourceErrorEventArgs") (Description . "") (DisplayText . "DataSourceErrorEventArgs") (RequiredNamespaceImport) (MethodHeader . "DataSourceErrorEventArgs") (ReturnType) (Snippet . "DataSourceErrorEventArgs$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataSourceErrorEventArgs") (Description . "") (DisplayText . "DataSourceErrorEventArgs(string textId)") (RequiredNamespaceImport) (MethodHeader . "DataSourceErrorEventArgs(string textId)") (ReturnType) (Snippet . "DataSourceErrorEventArgs(${1:string textId})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataSourceErrorEventArgs") (Description . "") (DisplayText . "DataSourceErrorEventArgs(string textId, int code)") (RequiredNamespaceImport) (MethodHeader . "DataSourceErrorEventArgs(string textId, int code)") (ReturnType) (Snippet . "DataSourceErrorEventArgs(${1:string textId}, ${2:int code})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataSourceNameAttribute") (Description . "Implements an attribute for a subversion version.
") (DisplayText . "DataSourceNameAttribute") (RequiredNamespaceImport) (MethodHeader . "DataSourceNameAttribute") (ReturnType) (Snippet . "DataSourceNameAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataSourceNameAttribute") (Description . "Initializes a new instance of the Fls.VisiTourClient.ViewModel.DataSourceNameAttribute class.

svnRevision: The subversion version.") (DisplayText . "DataSourceNameAttribute(string name)") (RequiredNamespaceImport) (MethodHeader . "DataSourceNameAttribute(string name)") (ReturnType) (Snippet . "DataSourceNameAttribute(${1:string name})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DatasourceRequestId") (Description . "") (DisplayText . "DatasourceRequestId") (RequiredNamespaceImport) (MethodHeader . "DatasourceRequestId") (ReturnType . "string") (Snippet . "DatasourceRequestId$0") (Kind . "Const") (IsSuggestionMode . :json-false)) ((CompletionText . "DataSources") (Description . "") (DisplayText . "DataSources") (RequiredNamespaceImport) (MethodHeader . "DataSources") (ReturnType) (Snippet . "DataSources$0") (Kind . "Namespace") (IsSuggestionMode . :json-false)) ((CompletionText . "DataTableSourceViewModel") (Description . "") (DisplayText . "DataTableSourceViewModel") (RequiredNamespaceImport) (MethodHeader . "DataTableSourceViewModel") (ReturnType) (Snippet . "DataTableSourceViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataTableSourceViewModel") (Description . "") (DisplayText . "DataTableSourceViewModel()") (RequiredNamespaceImport) (MethodHeader . "DataTableSourceViewModel()") (ReturnType) (Snippet . "DataTableSourceViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataTableViewModel") (Description . "Implements a model for data table.
") (DisplayText . "DataTableViewModel") (RequiredNamespaceImport) (MethodHeader . "DataTableViewModel") (ReturnType) (Snippet . "DataTableViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataTableViewModel") (Description . "Initializes a new instance of the Fls.UI.Base.DataTableViewModel class.
") (DisplayText . "DataTableViewModel()") (RequiredNamespaceImport) (MethodHeader . "DataTableViewModel()") (ReturnType) (Snippet . "DataTableViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataTableWithColoringViewModel") (Description . "TODO: Update summary.
") (DisplayText . "DataTableWithColoringViewModel") (RequiredNamespaceImport) (MethodHeader . "DataTableWithColoringViewModel") (ReturnType) (Snippet . "DataTableWithColoringViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataTableWithColoringViewModel") (Description . "Initializes a new instance of the Fls.UI.Base.DataTableWithColoringViewModel class.
") (DisplayText . "DataTableWithColoringViewModel()") (RequiredNamespaceImport) (MethodHeader . "DataTableWithColoringViewModel()") (ReturnType) (Snippet . "DataTableWithColoringViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataTransfersTypes") (Description . "The available data transfer types.
") (DisplayText . "DataTransfersTypes") (RequiredNamespaceImport) (MethodHeader . "DataTransfersTypes") (ReturnType) (Snippet . "DataTransfersTypes$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DateEditExtensionPainter") (Description . "Implements a model for 
") (DisplayText . "DateEditExtensionPainter") (RequiredNamespaceImport) (MethodHeader . "DateEditExtensionPainter") (ReturnType) (Snippet . "DateEditExtensionPainter$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DateEditExtensionPainter") (Description . "") (DisplayText . "DateEditExtensionPainter()") (RequiredNamespaceImport) (MethodHeader . "DateEditExtensionPainter()") (ReturnType) (Snippet . "DateEditExtensionPainter()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateEditExtensionViewInfo") (Description . "") (DisplayText . "DateEditExtensionViewInfo") (RequiredNamespaceImport) (MethodHeader . "DateEditExtensionViewInfo") (ReturnType) (Snippet . "DateEditExtensionViewInfo$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DateEditExtensionViewInfo") (Description . "") (DisplayText . "DateEditExtensionViewInfo(RepositoryItem item)") (RequiredNamespaceImport) (MethodHeader . "DateEditExtensionViewInfo(RepositoryItem item)") (ReturnType) (Snippet . "DateEditExtensionViewInfo(${1:RepositoryItem item})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateSelectorViewModel") (Description . "Implements a model for a date selector.
") (DisplayText . "DateSelectorViewModel") (RequiredNamespaceImport) (MethodHeader . "DateSelectorViewModel") (ReturnType) (Snippet . "DateSelectorViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DateSelectorViewModel") (Description . "Initializes a new instance of the Fls.VisiTourClient.ViewModel.DateSelectorViewModel class.
") (DisplayText . "DateSelectorViewModel()") (RequiredNamespaceImport) (MethodHeader . "DateSelectorViewModel()") (ReturnType) (Snippet . "DateSelectorViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateSelectorViewModel") (Description . "Initializes a new instance of the Fls.VisiTourClient.ViewModel.DateSelectorViewModel class.

startDate: The selected start date.
endDate: The selected end date.") (DisplayText . "DateSelectorViewModel(DateTimeInputViewModel startDate, DateTimeInputViewModel endDate)") (RequiredNamespaceImport) (MethodHeader . "DateSelectorViewModel(DateTimeInputViewModel startDate, DateTimeInputViewModel endDate)") (ReturnType) (Snippet . "DateSelectorViewModel(${1:DateTimeInputViewModel startDate}, ${2:DateTimeInputViewModel endDate})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateSelectorViewModel") (Description . "Initializes a new instance of the Fls.VisiTourClient.ViewModel.DateSelectorViewModel class.

elementId: The elements id.
startDate: The selected start date.
endDate: The selected end date.") (DisplayText . "DateSelectorViewModel(UIItemId elementId, DateTimeInputViewModel startDate, DateTimeInputViewModel endDate)") (RequiredNamespaceImport) (MethodHeader . "DateSelectorViewModel(UIItemId elementId, DateTimeInputViewModel startDate, DateTimeInputViewModel endDate)") (ReturnType) (Snippet . "DateSelectorViewModel(${1:UIItemId elementId}, ${2:DateTimeInputViewModel startDate}, ${3:DateTimeInputViewModel endDate})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime") (RequiredNamespaceImport) (MethodHeader . "DateTime") (ReturnType) (Snippet . "DateTime$0") (Kind . "Struct") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime()") (RequiredNamespaceImport) (MethodHeader . "DateTime()") (ReturnType) (Snippet . "DateTime()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, Calendar calendar)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, Calendar calendar)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:Calendar calendar})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, int hour, int minute, int second)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, int hour, int minute, int second)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, int hour, int minute, int second, Calendar calendar)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, int hour, int minute, int second, Calendar calendar)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:Calendar calendar})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, int hour, int minute, int second, DateTimeKind kind)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, int hour, int minute, int second, DateTimeKind kind)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:DateTimeKind kind})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:int millisecond})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, Calendar calendar)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, Calendar calendar)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:int millisecond}, ${8:Calendar calendar})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, Calendar calendar, DateTimeKind kind)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, Calendar calendar, DateTimeKind kind)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:int millisecond}, ${8:Calendar calendar}, ${9:DateTimeKind kind})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, DateTimeKind kind)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, DateTimeKind kind)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:int millisecond}, ${8:DateTimeKind kind})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(long ticks)") (RequiredNamespaceImport) (MethodHeader . "DateTime(long ticks)") (ReturnType) (Snippet . "DateTime(${1:long ticks})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(long ticks, DateTimeKind kind)") (RequiredNamespaceImport) (MethodHeader . "DateTime(long ticks, DateTimeKind kind)") (ReturnType) (Snippet . "DateTime(${1:long ticks}, ${2:DateTimeKind kind})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeConverter") (Description . "") (DisplayText . "DateTimeConverter") (RequiredNamespaceImport) (MethodHeader . "DateTimeConverter") (ReturnType) (Snippet . "DateTimeConverter$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeConverter") (Description . "") (DisplayText . "DateTimeConverter()") (RequiredNamespaceImport) (MethodHeader . "DateTimeConverter()") (ReturnType) (Snippet . "DateTimeConverter()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeEditView") (Description . "Implements a forms user control based on a view model.
This control 
") (DisplayText . "DateTimeEditView") (RequiredNamespaceImport) (MethodHeader . "DateTimeEditView") (ReturnType) (Snippet . "DateTimeEditView$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeEditView") (Description . "Initializes a new instance of the Fls.Controls.Forms.DevExpressBase.DateTimeEditView class.
") (DisplayText . "DateTimeEditView()") (RequiredNamespaceImport) (MethodHeader . "DateTimeEditView()") (ReturnType) (Snippet . "DateTimeEditView()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeEditView") (Description . "Initializes a new instance of the Fls.Controls.Forms.DevExpressBase.DateTimeEditView class.

viewModel: The used view model ") (DisplayText . "DateTimeEditView(DateTimeInputViewModel viewModel)") (RequiredNamespaceImport) (MethodHeader . "DateTimeEditView(DateTimeInputViewModel viewModel)") (ReturnType) (Snippet . "DateTimeEditView(${1:DateTimeInputViewModel viewModel})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeHelper") (Description . "") (DisplayText . "DateTimeHelper") (RequiredNamespaceImport) (MethodHeader . "DateTimeHelper") (ReturnType) (Snippet . "DateTimeHelper$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeInputViewModel") (Description . "Implements a model for date time input.
") (DisplayText . "DateTimeInputViewModel") (RequiredNamespaceImport) (MethodHeader . "DateTimeInputViewModel") (ReturnType) (Snippet . "DateTimeInputViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeInputViewModel") (Description . "Initializes a new instance of the Fls.UI.Base.DateTimeInputViewModel class.
") (DisplayText . "DateTimeInputViewModel()") (RequiredNamespaceImport) (MethodHeader . "DateTimeInputViewModel()") (ReturnType) (Snippet . "DateTimeInputViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeInputViewModel") (Description . "Initializes a new instance of the Fls.UI.Base.DateTimeInputViewModel class.

elementId: The elements id.") (DisplayText . "DateTimeInputViewModel(UIItemId elementId)") (RequiredNamespaceImport) (MethodHeader . "DateTimeInputViewModel(UIItemId elementId)") (ReturnType) (Snippet . "DateTimeInputViewModel(${1:UIItemId elementId})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeInputViewModel") (Description . "Initializes a new instance of the Fls.UI.Base.DateTimeInputViewModel class.

elementId: The elements id.
minDate: The minimum selectable date.
maxDate: The maximum selectable date.
selectedDate: The selected date.") (DisplayText . "DateTimeInputViewModel(UIItemId elementId, DateTime minDate, DateTime maxDate, DateTime selectedDate)") (RequiredNamespaceImport) (MethodHeader . "DateTimeInputViewModel(UIItemId elementId, DateTime minDate, DateTime maxDate, DateTime selectedDate)") (ReturnType) (Snippet . "DateTimeInputViewModel(${1:UIItemId elementId}, ${2:DateTime minDate}, ${3:DateTime maxDate}, ${4:DateTime selectedDate})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeInputViewModel") (Description . "Initializes a new instance of the Fls.UI.Base.DateTimeInputViewModel class.

elementId: The elements id.
selectedDate: The selected date.") (DisplayText . "DateTimeInputViewModel(UIItemId elementId, DateTime selectedDate)") (RequiredNamespaceImport) (MethodHeader . "DateTimeInputViewModel(UIItemId elementId, DateTime selectedDate)") (ReturnType) (Snippet . "DateTimeInputViewModel(${1:UIItemId elementId}, ${2:DateTime selectedDate})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeKind") (Description . "") (DisplayText . "DateTimeKind") (RequiredNamespaceImport) (MethodHeader . "DateTimeKind") (ReturnType) (Snippet . "DateTimeKind$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset") (ReturnType) (Snippet . "DateTimeOffset$0") (Kind . "Struct") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset()") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset()") (ReturnType) (Snippet . "DateTimeOffset()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset(DateTime dateTime)") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset(DateTime dateTime)") (ReturnType) (Snippet . "DateTimeOffset(${1:DateTime dateTime})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset(DateTime dateTime, TimeSpan offset)") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset(DateTime dateTime, TimeSpan offset)") (ReturnType) (Snippet . "DateTimeOffset(${1:DateTime dateTime}, ${2:TimeSpan offset})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset(int year, int month, int day, int hour, int minute, int second, int millisecond, Calendar calendar, TimeSpan offset)") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset(int year, int month, int day, int hour, int minute, int second, int millisecond, Calendar calendar, TimeSpan offset)") (ReturnType) (Snippet . "DateTimeOffset(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:int millisecond}, ${8:Calendar calendar}, ${9:TimeSpan offset})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset(int year, int month, int day, int hour, int minute, int second, int millisecond, TimeSpan offset)") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset(int year, int month, int day, int hour, int minute, int second, int millisecond, TimeSpan offset)") (ReturnType) (Snippet . "DateTimeOffset(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:int millisecond}, ${8:TimeSpan offset})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset(int year, int month, int day, int hour, int minute, int second, TimeSpan offset)") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset(int year, int month, int day, int hour, int minute, int second, TimeSpan offset)") (ReturnType) (Snippet . "DateTimeOffset(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:TimeSpan offset})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset(long ticks, TimeSpan offset)") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset(long ticks, TimeSpan offset)") (ReturnType) (Snippet . "DateTimeOffset(${1:long ticks}, ${2:TimeSpan offset})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffsetConverter") (Description . "") (DisplayText . "DateTimeOffsetConverter") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffsetConverter") (ReturnType) (Snippet . "DateTimeOffsetConverter$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffsetConverter") (Description . "") (DisplayText . "DateTimeOffsetConverter()") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffsetConverter()") (ReturnType) (Snippet . "DateTimeOffsetConverter()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeSlot") (Description . "Implements a model for time intervals. 
") (DisplayText . "DateTimeSlot") (RequiredNamespaceImport) (MethodHeader . "DateTimeSlot") (ReturnType) (Snippet . "DateTimeSlot$0") (Kind . "Struct") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeSlot") (Description . "") (DisplayText . "DateTimeSlot()") (RequiredNamespaceImport) (MethodHeader . "DateTimeSlot()") (ReturnType) (Snippet . "DateTimeSlot()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeSlot") (Description . "Initializes a new instance of the Fls.Base.DateTimeSlot structure. 

start: The start time. 
duration: The duration. ") (DisplayText . "DateTimeSlot(DateTime start, DateTime end)") (RequiredNamespaceImport) (MethodHeader . "DateTimeSlot(DateTime start, DateTime end)") (ReturnType) (Snippet . "DateTimeSlot(${1:DateTime start}, ${2:DateTime end})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeSlot") (Description . "Initializes a new instance of the Fls.Base.DateTimeSlot structure. 

start: The start time. 
duration: The duration. ") (DisplayText . "DateTimeSlot(DateTime start, TimeSpan duration)") (RequiredNamespaceImport) (MethodHeader . "DateTimeSlot(DateTime start, TimeSpan duration)") (ReturnType) (Snippet . "DateTimeSlot(${1:DateTime start}, ${2:TimeSpan duration})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DayChangeParameters") (Description . "") (DisplayText . "DayChangeParameters") (RequiredNamespaceImport) (MethodHeader . "DayChangeParameters") (ReturnType) (Snippet . "DayChangeParameters$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DayChangeParameters") (Description . "") (DisplayText . "DayChangeParameters(DateTime date, ILabelColor labelColor, bool isDisabled, string additionalInfo)") (RequiredNamespaceImport) (MethodHeader . "DayChangeParameters(DateTime date, ILabelColor labelColor, bool isDisabled, string additionalInfo)") (ReturnType) (Snippet . "DayChangeParameters(${1:DateTime date}, ${2:ILabelColor labelColor}, ${3:bool isDisabled}, ${4:string additionalInfo})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DayModel") (Description . "Implements a model for 
") (DisplayText . "DayModel") (RequiredNamespaceImport) (MethodHeader . "DayModel") (ReturnType) (Snippet . "DayModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DayModel") (Description . "") (DisplayText . "DayModel(ColorBase selectionColor, ColorBase todayMark, IZonedClock masterClock)") (RequiredNamespaceImport) (MethodHeader . "DayModel(ColorBase selectionColor, ColorBase todayMark, IZonedClock masterClock)") (ReturnType) (Snippet . "DayModel(${1:ColorBase selectionColor}, ${2:ColorBase todayMark}, ${3:IZonedClock masterClock})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DayOfWeek") (Description . "") (DisplayText . "DayOfWeek") (RequiredNamespaceImport) (MethodHeader . "DayOfWeek") (ReturnType) (Snippet . "DayOfWeek$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DaySelectionType") (Description . "") (DisplayText . "DaySelectionType") (RequiredNamespaceImport) (MethodHeader . "DaySelectionType") (ReturnType) (Snippet . "DaySelectionType$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DescriptionAttribute") (Description . "") (DisplayText . "DescriptionAttribute") (RequiredNamespaceImport) (MethodHeader . "DescriptionAttribute") (ReturnType) (Snippet . "DescriptionAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DescriptionAttribute") (Description . "") (DisplayText . "DescriptionAttribute()") (RequiredNamespaceImport) (MethodHeader . "DescriptionAttribute()") (ReturnType) (Snippet . "DescriptionAttribute()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DescriptionAttribute") (Description . "") (DisplayText . "DescriptionAttribute(string description)") (RequiredNamespaceImport) (MethodHeader . "DescriptionAttribute(string description)") (ReturnType) (Snippet . "DescriptionAttribute(${1:string description})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DesignerAttribute") (Description . "") (DisplayText . "DesignerAttribute") (RequiredNamespaceImport) (MethodHeader . "DesignerAttribute") (ReturnType) (Snippet . "DesignerAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DesignerAttribute") (Description . "") (DisplayText . "DesignerAttribute(string designerTypeName)") (RequiredNamespaceImport) (MethodHeader . "DesignerAttribute(string designerTypeName)") (ReturnType) (Snippet . "DesignerAttribute(${1:string designerTypeName})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DesignerAttribute") (Description . "") (DisplayText . "DesignerAttribute(string designerTypeName, string designerBaseTypeName)") (RequiredNamespaceImport) (MethodHeader . "DesignerAttribute(string designerTypeName, string designerBaseTypeName)") (ReturnType) (Snippet . "DesignerAttribute(${1:string designerTypeName}, ${2:string designerBaseTypeName})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DesignerAttribute") (Description . "") (DisplayText . "DesignerAttribute(string designerTypeName, Type designerBaseType)") (RequiredNamespaceImport) (MethodHeader . "DesignerAttribute(string designerTypeName, Type designerBaseType)") (ReturnType) (Snippet . "DesignerAttribute(${1:string designerTypeName}, ${2:Type designerBaseType})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DesignerAttribute") (Description . "") (DisplayText . "DesignerAttribute(Type designerType)") (RequiredNamespaceImport) (MethodHeader . "DesignerAttribute(Type designerType)") (ReturnType) (Snippet . "DesignerAttribute(${1:Type designerType})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DesignerAttribute") (Description . "") (DisplayText . "DesignerAttribute(Type designerType, Type designerBaseType)") (RequiredNamespaceImport) (MethodHeader . "DesignerAttribute(Type designerType, Type designerBaseType)") (ReturnType) (Snippet . "DesignerAttribute(${1:Type designerType}, ${2:Type designerBaseType})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DirectedAction") (Description . "Describes different directed actions. 
") (DisplayText . "DirectedAction") (RequiredNamespaceImport) (MethodHeader . "DirectedAction") (ReturnType) (Snippet . "DirectedAction$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "AbidancesViewModel") (Description . "") (DisplayText . "AbidancesViewModel") (RequiredNamespaceImport) (MethodHeader . "AbidancesViewModel") (ReturnType) (Snippet . "AbidancesViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "AbidancesViewModel") (Description . "") (DisplayText . "AbidancesViewModel()") (RequiredNamespaceImport) (MethodHeader . "AbidancesViewModel()") (ReturnType) (Snippet . "AbidancesViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "AddActionEmitter") (Description . "Adds a new item. 

item: The item to add. ") (DisplayText . "AddActionEmitter(IActionEmitter item)") (RequiredNamespaceImport) (MethodHeader . "AddActionEmitter(IActionEmitter item)") (ReturnType . "void") (Snippet . "AddActionEmitter(${1:IActionEmitter item});$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "AdditionalDatarequests") (Description . "") (DisplayText . "AdditionalDatarequests") (RequiredNamespaceImport) (MethodHeader . "AdditionalDatarequests") (ReturnType . "Dictionary<string, HashSet<string>>") (Snippet . "AdditionalDatarequests$0") (Kind . "Property") (IsSuggestionMode . :json-false)) ((CompletionText . "AdditionalDataRequestsType") (Description . "") (DisplayText . "AdditionalDataRequestsType") (RequiredNamespaceImport) (MethodHeader . "AdditionalDataRequestsType") (ReturnType) (Snippet . "AdditionalDataRequestsType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "AdditionalDataRequestsType") (Description . "AdditionalDataRequestsType class constructor
") (DisplayText . "AdditionalDataRequestsType()") (RequiredNamespaceImport) (MethodHeader . "AdditionalDataRequestsType()") (ReturnType) (Snippet . "AdditionalDataRequestsType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "AssemblyAlgorithmIdAttribute") (Description . "") (DisplayText . "AssemblyAlgorithmIdAttribute") (RequiredNamespaceImport) (MethodHeader . "AssemblyAlgorithmIdAttribute") (ReturnType) (Snippet . "AssemblyAlgorithmIdAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "AssemblyAlgorithmIdAttribute") (Description . "") (DisplayText . "AssemblyAlgorithmIdAttribute(AssemblyHashAlgorithm algorithmId)") (RequiredNamespaceImport) (MethodHeader . "AssemblyAlgorithmIdAttribute(AssemblyHashAlgorithm algorithmId)") (ReturnType) (Snippet . "AssemblyAlgorithmIdAttribute(${1:AssemblyHashAlgorithm algorithmId})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "AssemblyAlgorithmIdAttribute") (Description . "") (DisplayText . "AssemblyAlgorithmIdAttribute(uint algorithmId)") (RequiredNamespaceImport) (MethodHeader . "AssemblyAlgorithmIdAttribute(uint algorithmId)") (ReturnType) (Snippet . "AssemblyAlgorithmIdAttribute(${1:uint algorithmId})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "AssemblyMetadataAttribute") (Description . "") (DisplayText . "AssemblyMetadataAttribute") (RequiredNamespaceImport) (MethodHeader . "AssemblyMetadataAttribute") (ReturnType) (Snippet . "AssemblyMetadataAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "AssemblyMetadataAttribute") (Description . "") (DisplayText . "AssemblyMetadataAttribute(string key, string value)") (RequiredNamespaceImport) (MethodHeader . "AssemblyMetadataAttribute(string key, string value)") (ReturnType) (Snippet . "AssemblyMetadataAttribute(${1:string key}, ${2:string value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "AutoSearchCtrlMetaData") (Description . "") (DisplayText . "AutoSearchCtrlMetaData") (RequiredNamespaceImport) (MethodHeader . "AutoSearchCtrlMetaData") (ReturnType) (Snippet . "AutoSearchCtrlMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "AutoSearchCtrlMetaData") (Description . "") (DisplayText . "AutoSearchCtrlMetaData()") (RequiredNamespaceImport) (MethodHeader . "AutoSearchCtrlMetaData()") (ReturnType) (Snippet . "AutoSearchCtrlMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "AutoUpdateEntity") (Description . "") (DisplayText . "AutoUpdateEntity(string entityName, object id)") (RequiredNamespaceImport) (MethodHeader . "AutoUpdateEntity(string entityName, object id)") (ReturnType . "void") (Snippet . "AutoUpdateEntity(${1:string entityName}, ${2:object id});$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "AvailablePreviewDays") (Description . "") (DisplayText . "AvailablePreviewDays") (RequiredNamespaceImport) (MethodHeader . "AvailablePreviewDays") (ReturnType) (Snippet . "AvailablePreviewDays$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "BaseData") (Description . "") (DisplayText . "BaseData") (RequiredNamespaceImport) (MethodHeader . "BaseData") (ReturnType) (Snippet . "BaseData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "BaseData") (Description . "") (DisplayText . "BaseData()") (RequiredNamespaceImport) (MethodHeader . "BaseData()") (ReturnType) (Snippet . "BaseData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "BaseMetaData") (Description . "Implements a model for meta data of forms.
") (DisplayText . "BaseMetaData") (RequiredNamespaceImport) (MethodHeader . "BaseMetaData") (ReturnType) (Snippet . "BaseMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "BaseMetaData") (Description . "Initializes a new instance of the Fls.VisiTourClient.MetaData.BaseMetaData class.
") (DisplayText . "BaseMetaData()") (RequiredNamespaceImport) (MethodHeader . "BaseMetaData()") (ReturnType) (Snippet . "BaseMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "BindableAttribute") (Description . "") (DisplayText . "BindableAttribute") (RequiredNamespaceImport) (MethodHeader . "BindableAttribute") (ReturnType) (Snippet . "BindableAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "BindableAttribute") (Description . "") (DisplayText . "BindableAttribute(BindableSupport flags)") (RequiredNamespaceImport) (MethodHeader . "BindableAttribute(BindableSupport flags)") (ReturnType) (Snippet . "BindableAttribute(${1:BindableSupport flags})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "BindableAttribute") (Description . "") (DisplayText . "BindableAttribute(BindableSupport flags, BindingDirection direction)") (RequiredNamespaceImport) (MethodHeader . "BindableAttribute(BindableSupport flags, BindingDirection direction)") (ReturnType) (Snippet . "BindableAttribute(${1:BindableSupport flags}, ${2:BindingDirection direction})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "BindableAttribute") (Description . "") (DisplayText . "BindableAttribute(bool bindable)") (RequiredNamespaceImport) (MethodHeader . "BindableAttribute(bool bindable)") (ReturnType) (Snippet . "BindableAttribute(${1:bool bindable})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "BindableAttribute") (Description . "") (DisplayText . "BindableAttribute(bool bindable, BindingDirection direction)") (RequiredNamespaceImport) (MethodHeader . "BindableAttribute(bool bindable, BindingDirection direction)") (ReturnType) (Snippet . "BindableAttribute(${1:bool bindable}, ${2:BindingDirection direction})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "BindableSupport") (Description . "") (DisplayText . "BindableSupport") (RequiredNamespaceImport) (MethodHeader . "BindableSupport") (ReturnType) (Snippet . "BindableSupport$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "BindingSourceMetaData") (Description . "") (DisplayText . "BindingSourceMetaData") (RequiredNamespaceImport) (MethodHeader . "BindingSourceMetaData") (ReturnType) (Snippet . "BindingSourceMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "BindingSourceMetaData") (Description . "") (DisplayText . "BindingSourceMetaData(string id, string entity, string parentFormName, string connector, string connectorTarget, string validatorId, string clientFilter, IEnumerable<string> fieldNames = null, bool autoSave = false, bool doGeoCoding = true, bool targetZeroAsNull = false)") (RequiredNamespaceImport) (MethodHeader . "BindingSourceMetaData(string id, string entity, string parentFormName, string connector, string connectorTarget, string validatorId, string clientFilter, IEnumerable<string> fieldNames = null, bool autoSave = false, bool doGeoCoding = true, bool targetZeroAsNull = false)") (ReturnType) (Snippet . "BindingSourceMetaData(${1:string id}, ${2:string entity}, ${3:string parentFormName}, ${4:string connector}, ${5:string connectorTarget}, ${6:string validatorId}, ${7:string clientFilter}, ${8:IEnumerable<string> fieldNames = null}, ${9:bool autoSave = false}, ${10:bool doGeoCoding = true}, ${11:bool targetZeroAsNull = false})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "BindingSource_DataSourceError") (Description . "") (DisplayText . "BindingSource_DataSourceError(object sender, DataSourceErrorEventArgs e)") (RequiredNamespaceImport) (MethodHeader . "BindingSource_DataSourceError(object sender, DataSourceErrorEventArgs e)") (ReturnType . "void") (Snippet . "BindingSource_DataSourceError(${1:object sender}, ${2:DataSourceErrorEventArgs e});$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "BookResourceInDateFrameViewModel") (Description . "") (DisplayText . "BookResourceInDateFrameViewModel") (RequiredNamespaceImport) (MethodHeader . "BookResourceInDateFrameViewModel") (ReturnType) (Snippet . "BookResourceInDateFrameViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "BookResourceInDateFrameViewModel") (Description . "") (DisplayText . "BookResourceInDateFrameViewModel(TourModel mainTour, ConcurrentDictionary<int, DOEngineer> availableEngineeres, DateTime startDate, DateTime endDate, DOEngineer changeEngineer)") (RequiredNamespaceImport) (MethodHeader . "BookResourceInDateFrameViewModel(TourModel mainTour, ConcurrentDictionary<int, DOEngineer> availableEngineeres, DateTime startDate, DateTime endDate, DOEngineer changeEngineer)") (ReturnType) (Snippet . "BookResourceInDateFrameViewModel(${1:TourModel mainTour}, ${2:ConcurrentDictionary<int, DOEngineer> availableEngineeres}, ${3:DateTime startDate}, ${4:DateTime endDate}, ${5:DOEngineer changeEngineer})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "CalendarControlType") (Description . "") (DisplayText . "CalendarControlType") (RequiredNamespaceImport) (MethodHeader . "CalendarControlType") (ReturnType) (Snippet . "CalendarControlType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "CalendarControlType") (Description . "") (DisplayText . "CalendarControlType()") (RequiredNamespaceImport) (MethodHeader . "CalendarControlType()") (ReturnType) (Snippet . "CalendarControlType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "CalendarView") (Description . "") (DisplayText . "CalendarView") (RequiredNamespaceImport) (MethodHeader . "CalendarView") (ReturnType) (Snippet . "CalendarView$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "CalendarViewModel") (Description . "Implements a model for data table.
") (DisplayText . "CalendarViewModel") (RequiredNamespaceImport) (MethodHeader . "CalendarViewModel") (ReturnType) (Snippet . "CalendarViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "CalendarViewModel") (Description . "Initializes a new instance of the Fls.UI.Base.DataTableViewModel class.
") (DisplayText . "CalendarViewModel()") (RequiredNamespaceImport) (MethodHeader . "CalendarViewModel()") (ReturnType) (Snippet . "CalendarViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "CannotUnloadAppDomainException") (Description . "") (DisplayText . "CannotUnloadAppDomainException") (RequiredNamespaceImport) (MethodHeader . "CannotUnloadAppDomainException") (ReturnType) (Snippet . "CannotUnloadAppDomainException$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "CannotUnloadAppDomainException") (Description . "") (DisplayText . "CannotUnloadAppDomainException()") (RequiredNamespaceImport) (MethodHeader . "CannotUnloadAppDomainException()") (ReturnType) (Snippet . "CannotUnloadAppDomainException()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "CannotUnloadAppDomainException") (Description . "") (DisplayText . "CannotUnloadAppDomainException(SerializationInfo info, StreamingContext context)") (RequiredNamespaceImport) (MethodHeader . "CannotUnloadAppDomainException(SerializationInfo info, StreamingContext context)") (ReturnType) (Snippet . "CannotUnloadAppDomainException(${1:SerializationInfo info}, ${2:StreamingContext context})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "CannotUnloadAppDomainException") (Description . "") (DisplayText . "CannotUnloadAppDomainException(string message)") (RequiredNamespaceImport) (MethodHeader . "CannotUnloadAppDomainException(string message)") (ReturnType) (Snippet . "CannotUnloadAppDomainException(${1:string message})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "CannotUnloadAppDomainException") (Description . "") (DisplayText . "CannotUnloadAppDomainException(string message, Exception innerException)") (RequiredNamespaceImport) (MethodHeader . "CannotUnloadAppDomainException(string message, Exception innerException)") (ReturnType) (Snippet . "CannotUnloadAppDomainException(${1:string message}, ${2:Exception innerException})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ChangeDataLoadingStatus") (Description . "") (DisplayText . "ChangeDataLoadingStatus(LoadingStatus current, LoadingStatus value)") (RequiredNamespaceImport) (MethodHeader . "ChangeDataLoadingStatus(LoadingStatus current, LoadingStatus value)") (ReturnType . "LoadingStatus") (Snippet . "ChangeDataLoadingStatus(${1:LoadingStatus current}, ${2:LoadingStatus value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ChartControlMetaData") (Description . "") (DisplayText . "ChartControlMetaData") (RequiredNamespaceImport) (MethodHeader . "ChartControlMetaData") (ReturnType) (Snippet . "ChartControlMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ChartControlMetaData") (Description . "") (DisplayText . "ChartControlMetaData()") (RequiredNamespaceImport) (MethodHeader . "ChartControlMetaData()") (ReturnType) (Snippet . "ChartControlMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ChartDataValuesType") (Description . "") (DisplayText . "ChartDataValuesType") (RequiredNamespaceImport) (MethodHeader . "ChartDataValuesType") (ReturnType) (Snippet . "ChartDataValuesType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ChartDataValuesType") (Description . "ChartDataValuesType class constructor
") (DisplayText . "ChartDataValuesType()") (RequiredNamespaceImport) (MethodHeader . "ChartDataValuesType()") (ReturnType) (Snippet . "ChartDataValuesType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "CheckedComboBoxFromRefMetaData") (Description . "") (DisplayText . "CheckedComboBoxFromRefMetaData") (RequiredNamespaceImport) (MethodHeader . "CheckedComboBoxFromRefMetaData") (ReturnType) (Snippet . "CheckedComboBoxFromRefMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "CheckedComboBoxFromRefMetaData") (Description . "") (DisplayText . "CheckedComboBoxFromRefMetaData()") (RequiredNamespaceImport) (MethodHeader . "CheckedComboBoxFromRefMetaData()") (ReturnType) (Snippet . "CheckedComboBoxFromRefMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ClearValidationError") (Description . "") (DisplayText . "ClearValidationError()") (RequiredNamespaceImport) (MethodHeader . "ClearValidationError()") (ReturnType . "void") (Snippet . "ClearValidationError();$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ClientFormElementMetaData") (Description . "Implements a model for form elements meta data.
") (DisplayText . "ClientFormElementMetaData") (RequiredNamespaceImport) (MethodHeader . "ClientFormElementMetaData") (ReturnType) (Snippet . "ClientFormElementMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ClientFormElementMetaData") (Description . "Initializes a new instance of the Fls.VisiTourClient.MetaData.ClientFormElementMetaData class.
") (DisplayText . "ClientFormElementMetaData()") (RequiredNamespaceImport) (MethodHeader . "ClientFormElementMetaData()") (ReturnType) (Snippet . "ClientFormElementMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ClientFormGroupMetaData") (Description . "TODO: Update summary.
") (DisplayText . "ClientFormGroupMetaData") (RequiredNamespaceImport) (MethodHeader . "ClientFormGroupMetaData") (ReturnType) (Snippet . "ClientFormGroupMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ClientFormGroupMetaData") (Description . "") (DisplayText . "ClientFormGroupMetaData(string id, Rights rightsName, string module, ClientFormGroupMetaData parentGroupMeta)") (RequiredNamespaceImport) (MethodHeader . "ClientFormGroupMetaData(string id, Rights rightsName, string module, ClientFormGroupMetaData parentGroupMeta)") (ReturnType) (Snippet . "ClientFormGroupMetaData(${1:string id}, ${2:Rights rightsName}, ${3:string module}, ${4:ClientFormGroupMetaData parentGroupMeta})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ClientFormMetaData") (Description . "Implements a model for client form meta data.
") (DisplayText . "ClientFormMetaData") (RequiredNamespaceImport) (MethodHeader . "ClientFormMetaData") (ReturnType) (Snippet . "ClientFormMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ClientFormMetaData") (Description . "Initializes a new instance of the Fls.VisiTourClient.MetaData.ClientFormMetaData class.
") (DisplayText . "ClientFormMetaData()") (RequiredNamespaceImport) (MethodHeader . "ClientFormMetaData()") (ReturnType) (Snippet . "ClientFormMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ClientMetaData") (Description . "") (DisplayText . "ClientMetaData") (RequiredNamespaceImport) (MethodHeader . "ClientMetaData") (ReturnType) (Snippet . "ClientMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ClientMetaData") (Description . "") (DisplayText . "ClientMetaData()") (RequiredNamespaceImport) (MethodHeader . "ClientMetaData()") (ReturnType) (Snippet . "ClientMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ClientUpdater") (Description . "") (DisplayText . "ClientUpdater") (RequiredNamespaceImport) (MethodHeader . "ClientUpdater") (ReturnType) (Snippet . "ClientUpdater$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ClientUpdater") (Description . "") (DisplayText . "ClientUpdater(string[] cmdArgs)") (RequiredNamespaceImport) (MethodHeader . "ClientUpdater(string[] cmdArgs)") (ReturnType) (Snippet . "ClientUpdater(${1:string[] cmdArgs})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "CollectFieldsToGetFromDataOutput") (Description . "") (DisplayText . "CollectFieldsToGetFromDataOutput(string outputName, HashSet<string> fields)") (RequiredNamespaceImport) (MethodHeader . "CollectFieldsToGetFromDataOutput(string outputName, HashSet<string> fields)") (ReturnType . "void") (Snippet . "CollectFieldsToGetFromDataOutput(${1:string outputName}, ${2:HashSet<string> fields});$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ColumnMetaDataModel") (Description . "Implements a model for 
") (DisplayText . "ColumnMetaDataModel") (RequiredNamespaceImport) (MethodHeader . "ColumnMetaDataModel") (ReturnType) (Snippet . "ColumnMetaDataModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ColumnMetaDataModel") (Description . "Initializes a new instance of the Fls.Base.ColumnMetaDataModel class.
") (DisplayText . "ColumnMetaDataModel()") (RequiredNamespaceImport) (MethodHeader . "ColumnMetaDataModel()") (ReturnType) (Snippet . "ColumnMetaDataModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ColumnMetaDataType") (Description . "") (DisplayText . "ColumnMetaDataType") (RequiredNamespaceImport) (MethodHeader . "ColumnMetaDataType") (ReturnType) (Snippet . "ColumnMetaDataType$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "ConnectionMetaData") (Description . "this class is used to concentrate the data used to create a proper datasource to bind in the controls
") (DisplayText . "ConnectionMetaData") (RequiredNamespaceImport) (MethodHeader . "ConnectionMetaData") (ReturnType) (Snippet . "ConnectionMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ConnectionMetaData") (Description . "Initializes a new instance of the Fls.VisiTourClient.MetaData.ConnectionMetaData class.
") (DisplayText . "ConnectionMetaData()") (RequiredNamespaceImport) (MethodHeader . "ConnectionMetaData()") (ReturnType) (Snippet . "ConnectionMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ConnectionMetaData") (Description . "Initializes a new instance of the Fls.VisiTourClient.MetaData.ConnectionMetaData class.

tableName: name of the table
propertyName: name of the property
cellType: type of property") (DisplayText . "ConnectionMetaData(string tableName, string propertyName, eControlType cellType)") (RequiredNamespaceImport) (MethodHeader . "ConnectionMetaData(string tableName, string propertyName, eControlType cellType)") (ReturnType) (Snippet . "ConnectionMetaData(${1:string tableName}, ${2:string propertyName}, ${3:eControlType cellType})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ContextMenuFromMetadata") (Description . "Creates a bar item view model from meta data. 

item: The meta data. 
Returns: The view model. ") (DisplayText . "ContextMenuFromMetadata(RibbonIconItemMetaData item, ReadOnlyCollection<UIActionMetaData> metaDataCommandActions, ClientFormMetaData metaData)") (RequiredNamespaceImport) (MethodHeader . "ContextMenuFromMetadata(RibbonIconItemMetaData item, ReadOnlyCollection<UIActionMetaData> metaDataCommandActions, ClientFormMetaData metaData)") (ReturnType . "BarItemViewModel") (Snippet . "ContextMenuFromMetadata(${1:RibbonIconItemMetaData item}, ${2:ReadOnlyCollection<UIActionMetaData> metaDataCommandActions}, ${3:ClientFormMetaData metaData})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ContextMenusFromMetaData") (Description . "") (DisplayText . "ContextMenusFromMetaData(ClientFormMetaData metaData)") (RequiredNamespaceImport) (MethodHeader . "ContextMenusFromMetaData(ClientFormMetaData metaData)") (ReturnType . "void") (Snippet . "ContextMenusFromMetaData(${1:ClientFormMetaData metaData});$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "CreateActionsFromMetaData") (Description . "Creates the actions for the command id form meta data. 

commandId: The command id. 
metaDataCommandActions: All meta data actions. 
Returns: A list of action for this command id. ") (DisplayText . "CreateActionsFromMetaData(IBaseId commandId, ReadOnlyCollection<UIActionMetaData> metaDataCommandActions)") (RequiredNamespaceImport) (MethodHeader . "CreateActionsFromMetaData(IBaseId commandId, ReadOnlyCollection<UIActionMetaData> metaDataCommandActions)") (ReturnType . "List<UIAction>") (Snippet . "CreateActionsFromMetaData(${1:IBaseId commandId}, ${2:ReadOnlyCollection<UIActionMetaData> metaDataCommandActions})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "CreateDataSourcePath") (Description . "") (DisplayText . "CreateDataSourcePath(string localName)") (RequiredNamespaceImport) (MethodHeader . "CreateDataSourcePath(string localName)") (ReturnType . "string") (Snippet . "CreateDataSourcePath(${1:string localName})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "CustomAttributeData") (Description . "") (DisplayText . "CustomAttributeData") (RequiredNamespaceImport) (MethodHeader . "CustomAttributeData") (ReturnType) (Snippet . "CustomAttributeData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "CustomAttributeData") (Description . "") (DisplayText . "CustomAttributeData()") (RequiredNamespaceImport) (MethodHeader . "CustomAttributeData()") (ReturnType) (Snippet . "CustomAttributeData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "CustomAttributeNamedArgument") (Description . "") (DisplayText . "CustomAttributeNamedArgument") (RequiredNamespaceImport) (MethodHeader . "CustomAttributeNamedArgument") (ReturnType) (Snippet . "CustomAttributeNamedArgument$0") (Kind . "Struct") (IsSuggestionMode . :json-false)) ((CompletionText . "CustomAttributeNamedArgument") (Description . "") (DisplayText . "CustomAttributeNamedArgument()") (RequiredNamespaceImport) (MethodHeader . "CustomAttributeNamedArgument()") (ReturnType) (Snippet . "CustomAttributeNamedArgument()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "CustomAttributeNamedArgument") (Description . "") (DisplayText . "CustomAttributeNamedArgument(MemberInfo memberInfo, CustomAttributeTypedArgument typedArgument)") (RequiredNamespaceImport) (MethodHeader . "CustomAttributeNamedArgument(MemberInfo memberInfo, CustomAttributeTypedArgument typedArgument)") (ReturnType) (Snippet . "CustomAttributeNamedArgument(${1:MemberInfo memberInfo}, ${2:CustomAttributeTypedArgument typedArgument})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "CustomAttributeNamedArgument") (Description . "") (DisplayText . "CustomAttributeNamedArgument(MemberInfo memberInfo, object value)") (RequiredNamespaceImport) (MethodHeader . "CustomAttributeNamedArgument(MemberInfo memberInfo, object value)") (ReturnType) (Snippet . "CustomAttributeNamedArgument(${1:MemberInfo memberInfo}, ${2:object value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "CustomAttributeTypedArgument") (Description . "") (DisplayText . "CustomAttributeTypedArgument") (RequiredNamespaceImport) (MethodHeader . "CustomAttributeTypedArgument") (ReturnType) (Snippet . "CustomAttributeTypedArgument$0") (Kind . "Struct") (IsSuggestionMode . :json-false)) ((CompletionText . "CustomAttributeTypedArgument") (Description . "") (DisplayText . "CustomAttributeTypedArgument()") (RequiredNamespaceImport) (MethodHeader . "CustomAttributeTypedArgument()") (ReturnType) (Snippet . "CustomAttributeTypedArgument()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "CustomAttributeTypedArgument") (Description . "") (DisplayText . "CustomAttributeTypedArgument(object value)") (RequiredNamespaceImport) (MethodHeader . "CustomAttributeTypedArgument(object value)") (ReturnType) (Snippet . "CustomAttributeTypedArgument(${1:object value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "CustomAttributeTypedArgument") (Description . "") (DisplayText . "CustomAttributeTypedArgument(Type argumentType, object value)") (RequiredNamespaceImport) (MethodHeader . "CustomAttributeTypedArgument(Type argumentType, object value)") (ReturnType) (Snippet . "CustomAttributeTypedArgument(${1:Type argumentType}, ${2:object value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "CustomDataSourceBase") (Description . "") (DisplayText . "CustomDataSourceBase") (RequiredNamespaceImport) (MethodHeader . "CustomDataSourceBase") (ReturnType) (Snippet . "CustomDataSourceBase$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "CustomDataSourceBase") (Description . "") (DisplayText . "CustomDataSourceBase()") (RequiredNamespaceImport) (MethodHeader . "CustomDataSourceBase()") (ReturnType) (Snippet . "CustomDataSourceBase()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "CustomerMetaData") (Description . "Implements a model for meta data of forms.
") (DisplayText . "CustomerMetaData") (RequiredNamespaceImport) (MethodHeader . "CustomerMetaData") (ReturnType) (Snippet . "CustomerMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "CustomerMetaData") (Description . "") (DisplayText . "CustomerMetaData()") (RequiredNamespaceImport) (MethodHeader . "CustomerMetaData()") (ReturnType) (Snippet . "CustomerMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "CustomizeableDataOutput") (Description . "") (DisplayText . "CustomizeableDataOutput") (RequiredNamespaceImport) (MethodHeader . "CustomizeableDataOutput") (ReturnType . "ReadOnlyCollection<string>") (Snippet . "CustomizeableDataOutput$0") (Kind . "Property") (IsSuggestionMode . :json-false)) ((CompletionText . "CustomizeableDataOutputType") (Description . "") (DisplayText . "CustomizeableDataOutputType") (RequiredNamespaceImport) (MethodHeader . "CustomizeableDataOutputType") (ReturnType) (Snippet . "CustomizeableDataOutputType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "CustomizeableDataOutputType") (Description . "CustomizeableDataOutputType class constructor
") (DisplayText . "CustomizeableDataOutputType()") (RequiredNamespaceImport) (MethodHeader . "CustomizeableDataOutputType()") (ReturnType) (Snippet . "CustomizeableDataOutputType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DBInitWizardViewModel") (Description . "") (DisplayText . "DBInitWizardViewModel") (RequiredNamespaceImport) (MethodHeader . "DBInitWizardViewModel") (ReturnType) (Snippet . "DBInitWizardViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DBInitWizardViewModel") (Description . "") (DisplayText . "DBInitWizardViewModel(VisitourClientConfigModel config)") (RequiredNamespaceImport) (MethodHeader . "DBInitWizardViewModel(VisitourClientConfigModel config)") (ReturnType) (Snippet . "DBInitWizardViewModel(${1:VisitourClientConfigModel config})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DDataBase") (Description . "") (DisplayText . "DDataBase") (RequiredNamespaceImport) (MethodHeader . "DDataBase") (ReturnType) (Snippet . "DDataBase$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DDataBase") (Description . "") (DisplayText . "DDataBase()") (RequiredNamespaceImport) (MethodHeader . "DDataBase()") (ReturnType) (Snippet . "DDataBase()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "Decimal") (Description . "") (DisplayText . "decimal") (RequiredNamespaceImport) (MethodHeader . "decimal") (ReturnType) (Snippet . "decimal$0") (Kind . "Struct") (IsSuggestionMode . :json-false)) ((CompletionText . "decimal") (Description) (DisplayText . "decimal") (RequiredNamespaceImport) (MethodHeader) (ReturnType) (Snippet . "decimal") (Kind . "Keyword") (IsSuggestionMode . :json-false)) ((CompletionText . "Decimal") (Description . "") (DisplayText . "decimal()") (RequiredNamespaceImport) (MethodHeader . "decimal()") (ReturnType) (Snippet . "decimal()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "Decimal") (Description . "") (DisplayText . "decimal(double value)") (RequiredNamespaceImport) (MethodHeader . "decimal(double value)") (ReturnType) (Snippet . "decimal(${1:double value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "Decimal") (Description . "") (DisplayText . "decimal(float value)") (RequiredNamespaceImport) (MethodHeader . "decimal(float value)") (ReturnType) (Snippet . "decimal(${1:float value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "Decimal") (Description . "") (DisplayText . "decimal(int lo, int mid, int hi, bool isNegative, byte scale)") (RequiredNamespaceImport) (MethodHeader . "decimal(int lo, int mid, int hi, bool isNegative, byte scale)") (ReturnType) (Snippet . "decimal(${1:int lo}, ${2:int mid}, ${3:int hi}, ${4:bool isNegative}, ${5:byte scale})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "Decimal") (Description . "") (DisplayText . "decimal(int value)") (RequiredNamespaceImport) (MethodHeader . "decimal(int value)") (ReturnType) (Snippet . "decimal(${1:int value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "Decimal") (Description . "") (DisplayText . "decimal(int[] bits)") (RequiredNamespaceImport) (MethodHeader . "decimal(int[] bits)") (ReturnType) (Snippet . "decimal(${1:int[] bits})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "Decimal") (Description . "") (DisplayText . "decimal(long value)") (RequiredNamespaceImport) (MethodHeader . "decimal(long value)") (ReturnType) (Snippet . "decimal(${1:long value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "Decimal") (Description . "") (DisplayText . "decimal(uint value)") (RequiredNamespaceImport) (MethodHeader . "decimal(uint value)") (ReturnType) (Snippet . "decimal(${1:uint value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "Decimal") (Description . "") (DisplayText . "decimal(ulong value)") (RequiredNamespaceImport) (MethodHeader . "decimal(ulong value)") (ReturnType) (Snippet . "decimal(${1:ulong value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DecimalBarInputItemViewModel") (Description . "") (DisplayText . "DecimalBarInputItemViewModel") (RequiredNamespaceImport) (MethodHeader . "DecimalBarInputItemViewModel") (ReturnType) (Snippet . "DecimalBarInputItemViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DecimalBarInputItemViewModel") (Description . "") (DisplayText . "DecimalBarInputItemViewModel()") (RequiredNamespaceImport) (MethodHeader . "DecimalBarInputItemViewModel()") (ReturnType) (Snippet . "DecimalBarInputItemViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DecimalConverter") (Description . "") (DisplayText . "DecimalConverter") (RequiredNamespaceImport) (MethodHeader . "DecimalConverter") (ReturnType) (Snippet . "DecimalConverter$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DecimalConverter") (Description . "") (DisplayText . "DecimalConverter()") (RequiredNamespaceImport) (MethodHeader . "DecimalConverter()") (ReturnType) (Snippet . "DecimalConverter()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "default") (Description) (DisplayText . "default") (RequiredNamespaceImport) (MethodHeader) (ReturnType) (Snippet . "default") (Kind . "Keyword") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultBarAndDockingController") (Description . "") (DisplayText . "DefaultBarAndDockingController") (RequiredNamespaceImport) (MethodHeader . "DefaultBarAndDockingController") (ReturnType) (Snippet . "DefaultBarAndDockingController$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultBarAndDockingController") (Description . "") (DisplayText . "DefaultBarAndDockingController()") (RequiredNamespaceImport) (MethodHeader . "DefaultBarAndDockingController()") (ReturnType) (Snippet . "DefaultBarAndDockingController()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultBarAndDockingController") (Description . "") (DisplayText . "DefaultBarAndDockingController(IContainer container)") (RequiredNamespaceImport) (MethodHeader . "DefaultBarAndDockingController(IContainer container)") (ReturnType) (Snippet . "DefaultBarAndDockingController(${1:IContainer container})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultBindingPropertyAttribute") (Description . "") (DisplayText . "DefaultBindingPropertyAttribute") (RequiredNamespaceImport) (MethodHeader . "DefaultBindingPropertyAttribute") (ReturnType) (Snippet . "DefaultBindingPropertyAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultBindingPropertyAttribute") (Description . "") (DisplayText . "DefaultBindingPropertyAttribute()") (RequiredNamespaceImport) (MethodHeader . "DefaultBindingPropertyAttribute()") (ReturnType) (Snippet . "DefaultBindingPropertyAttribute()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultBindingPropertyAttribute") (Description . "") (DisplayText . "DefaultBindingPropertyAttribute(string name)") (RequiredNamespaceImport) (MethodHeader . "DefaultBindingPropertyAttribute(string name)") (ReturnType) (Snippet . "DefaultBindingPropertyAttribute(${1:string name})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultClientLayoutsByUser") (Description . "") (DisplayText . "DefaultClientLayoutsByUser") (RequiredNamespaceImport) (MethodHeader . "DefaultClientLayoutsByUser") (ReturnType . "List<int>") (Snippet . "DefaultClientLayoutsByUser$0") (Kind . "Property") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultComparer") (Description . "Implements a model for a default comparer.
A comparable class.") (DisplayText . "DefaultComparer<T>") (RequiredNamespaceImport) (MethodHeader . "DefaultComparer<T>") (ReturnType) (Snippet . "DefaultComparer<${1:T}>$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultComparer") (Description . "Initializes a new instance of the T class.
") (DisplayText . "DefaultComparer<T>()") (RequiredNamespaceImport) (MethodHeader . "DefaultComparer<T>()") (ReturnType) (Snippet . "DefaultComparer<${1:T}>()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultEditorsRepository") (Description . "") (DisplayText . "DefaultEditorsRepository") (RequiredNamespaceImport) (MethodHeader . "DefaultEditorsRepository") (ReturnType) (Snippet . "DefaultEditorsRepository$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultEditorsRepository") (Description . "") (DisplayText . "DefaultEditorsRepository()") (RequiredNamespaceImport) (MethodHeader . "DefaultEditorsRepository()") (ReturnType) (Snippet . "DefaultEditorsRepository()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultEventAttribute") (Description . "") (DisplayText . "DefaultEventAttribute") (RequiredNamespaceImport) (MethodHeader . "DefaultEventAttribute") (ReturnType) (Snippet . "DefaultEventAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultEventAttribute") (Description . "") (DisplayText . "DefaultEventAttribute(string name)") (RequiredNamespaceImport) (MethodHeader . "DefaultEventAttribute(string name)") (ReturnType) (Snippet . "DefaultEventAttribute(${1:string name})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultLayoutMeta") (Description . "") (DisplayText . "DefaultLayoutMeta") (RequiredNamespaceImport) (MethodHeader . "DefaultLayoutMeta") (ReturnType) (Snippet . "DefaultLayoutMeta$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultLayoutMeta") (Description . "") (DisplayText . "DefaultLayoutMeta()") (RequiredNamespaceImport) (MethodHeader . "DefaultLayoutMeta()") (ReturnType) (Snippet . "DefaultLayoutMeta()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultLayoutName") (Description . "") (DisplayText . "DefaultLayoutName") (RequiredNamespaceImport) (MethodHeader . "DefaultLayoutName") (ReturnType . "string") (Snippet . "DefaultLayoutName$0") (Kind . "Property") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultLayoutNameType") (Description . "") (DisplayText . "DefaultLayoutNameType") (RequiredNamespaceImport) (MethodHeader . "DefaultLayoutNameType") (ReturnType) (Snippet . "DefaultLayoutNameType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultLayoutNameType") (Description . "") (DisplayText . "DefaultLayoutNameType()") (RequiredNamespaceImport) (MethodHeader . "DefaultLayoutNameType()") (ReturnType) (Snippet . "DefaultLayoutNameType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultMemberAttribute") (Description . "") (DisplayText . "DefaultMemberAttribute") (RequiredNamespaceImport) (MethodHeader . "DefaultMemberAttribute") (ReturnType) (Snippet . "DefaultMemberAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultMemberAttribute") (Description . "") (DisplayText . "DefaultMemberAttribute(string memberName)") (RequiredNamespaceImport) (MethodHeader . "DefaultMemberAttribute(string memberName)") (ReturnType) (Snippet . "DefaultMemberAttribute(${1:string memberName})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultPropertyAttribute") (Description . "") (DisplayText . "DefaultPropertyAttribute") (RequiredNamespaceImport) (MethodHeader . "DefaultPropertyAttribute") (ReturnType) (Snippet . "DefaultPropertyAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultPropertyAttribute") (Description . "") (DisplayText . "DefaultPropertyAttribute(string name)") (RequiredNamespaceImport) (MethodHeader . "DefaultPropertyAttribute(string name)") (ReturnType) (Snippet . "DefaultPropertyAttribute(${1:string name})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultRibbonItemStyle") (Description . "") (DisplayText . "DefaultRibbonItemStyle") (RequiredNamespaceImport) (MethodHeader . "DefaultRibbonItemStyle") (ReturnType) (Snippet . "DefaultRibbonItemStyle$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultRibbonItemStyle") (Description . "") (DisplayText . "DefaultRibbonItemStyle()") (RequiredNamespaceImport) (MethodHeader . "DefaultRibbonItemStyle()") (ReturnType) (Snippet . "DefaultRibbonItemStyle()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultTimeZone") (Description . "") (DisplayText . "DefaultTimeZone") (RequiredNamespaceImport) (MethodHeader . "DefaultTimeZone") (ReturnType . "TimeZoneAlias") (Snippet . "DefaultTimeZone$0") (Kind . "Property") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultValueAttribute") (Description . "") (DisplayText . "DefaultValueAttribute") (RequiredNamespaceImport) (MethodHeader . "DefaultValueAttribute") (ReturnType) (Snippet . "DefaultValueAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultValueAttribute") (Description . "") (DisplayText . "DefaultValueAttribute(bool value)") (RequiredNamespaceImport) (MethodHeader . "DefaultValueAttribute(bool value)") (ReturnType) (Snippet . "DefaultValueAttribute(${1:bool value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultValueAttribute") (Description . "") (DisplayText . "DefaultValueAttribute(byte value)") (RequiredNamespaceImport) (MethodHeader . "DefaultValueAttribute(byte value)") (ReturnType) (Snippet . "DefaultValueAttribute(${1:byte value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultValueAttribute") (Description . "") (DisplayText . "DefaultValueAttribute(char value)") (RequiredNamespaceImport) (MethodHeader . "DefaultValueAttribute(char value)") (ReturnType) (Snippet . "DefaultValueAttribute(${1:char value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultValueAttribute") (Description . "") (DisplayText . "DefaultValueAttribute(double value)") (RequiredNamespaceImport) (MethodHeader . "DefaultValueAttribute(double value)") (ReturnType) (Snippet . "DefaultValueAttribute(${1:double value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultValueAttribute") (Description . "") (DisplayText . "DefaultValueAttribute(float value)") (RequiredNamespaceImport) (MethodHeader . "DefaultValueAttribute(float value)") (ReturnType) (Snippet . "DefaultValueAttribute(${1:float value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultValueAttribute") (Description . "") (DisplayText . "DefaultValueAttribute(int value)") (RequiredNamespaceImport) (MethodHeader . "DefaultValueAttribute(int value)") (ReturnType) (Snippet . "DefaultValueAttribute(${1:int value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultValueAttribute") (Description . "") (DisplayText . "DefaultValueAttribute(long value)") (RequiredNamespaceImport) (MethodHeader . "DefaultValueAttribute(long value)") (ReturnType) (Snippet . "DefaultValueAttribute(${1:long value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultValueAttribute") (Description . "") (DisplayText . "DefaultValueAttribute(object value)") (RequiredNamespaceImport) (MethodHeader . "DefaultValueAttribute(object value)") (ReturnType) (Snippet . "DefaultValueAttribute(${1:object value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultValueAttribute") (Description . "") (DisplayText . "DefaultValueAttribute(short value)") (RequiredNamespaceImport) (MethodHeader . "DefaultValueAttribute(short value)") (ReturnType) (Snippet . "DefaultValueAttribute(${1:short value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultValueAttribute") (Description . "") (DisplayText . "DefaultValueAttribute(string value)") (RequiredNamespaceImport) (MethodHeader . "DefaultValueAttribute(string value)") (ReturnType) (Snippet . "DefaultValueAttribute(${1:string value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DefaultValueAttribute") (Description . "") (DisplayText . "DefaultValueAttribute(Type type, string value)") (RequiredNamespaceImport) (MethodHeader . "DefaultValueAttribute(Type type, string value)") (ReturnType) (Snippet . "DefaultValueAttribute(${1:Type type}, ${2:string value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DefinedValues") (Description . "a Set of defined constant Values not coming from the database 
") (DisplayText . "DefinedValues") (RequiredNamespaceImport) (MethodHeader . "DefinedValues") (ReturnType . "BindingList<KeyValuePair<string, string>>") (Snippet . "DefinedValues$0") (Kind . "Property") (IsSuggestionMode . :json-false)) ((CompletionText . "Delegate") (Description . "") (DisplayText . "Delegate") (RequiredNamespaceImport) (MethodHeader . "Delegate") (ReturnType) (Snippet . "Delegate$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "Delegate") (Description . "") (DisplayText . "Delegate(object target, string method)") (RequiredNamespaceImport) (MethodHeader . "Delegate(object target, string method)") (ReturnType) (Snippet . "Delegate(${1:object target}, ${2:string method})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "Delegate") (Description . "") (DisplayText . "Delegate(Type target, string method)") (RequiredNamespaceImport) (MethodHeader . "Delegate(Type target, string method)") (ReturnType) (Snippet . "Delegate(${1:Type target}, ${2:string method})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DeleteCurrentLayoutCanExe") (Description . "") (DisplayText . "DeleteCurrentLayoutCanExe(Parameters p)") (RequiredNamespaceImport) (MethodHeader . "DeleteCurrentLayoutCanExe(Parameters p)") (ReturnType . "bool") (Snippet . "DeleteCurrentLayoutCanExe(${1:Parameters p})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DeleteCurrentLayoutExe") (Description . "") (DisplayText . "DeleteCurrentLayoutExe(Parameters p)") (RequiredNamespaceImport) (MethodHeader . "DeleteCurrentLayoutExe(Parameters p)") (ReturnType . "void") (Snippet . "DeleteCurrentLayoutExe(${1:Parameters p});$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DeleteDataConfirm") (Description . "") (DisplayText . "DeleteDataConfirm(object sender, ActionEventArgs e)") (RequiredNamespaceImport) (MethodHeader . "DeleteDataConfirm(object sender, ActionEventArgs e)") (ReturnType . "void") (Snippet . "DeleteDataConfirm(${1:object sender}, ${2:ActionEventArgs e});$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DeleteDimaCommand") (Description . "Gets or sets the DeleteDimaCommand as ICommand. 
") (DisplayText . "DeleteDimaCommand") (RequiredNamespaceImport) (MethodHeader . "DeleteDimaCommand") (ReturnType . "ICommand") (Snippet . "DeleteDimaCommand$0") (Kind . "Property") (IsSuggestionMode . :json-false)) ((CompletionText . "DeleteDimaCommandExecute") (Description . "") (DisplayText . "DeleteDimaCommandExecute(Parameters parameters)") (RequiredNamespaceImport) (MethodHeader . "DeleteDimaCommandExecute(Parameters parameters)") (ReturnType . "void") (Snippet . "DeleteDimaCommandExecute(${1:Parameters parameters});$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DeleteLayoutConfirm") (Description . "") (DisplayText . "DeleteLayoutConfirm(object sender, ActionEventArgs e)") (RequiredNamespaceImport) (MethodHeader . "DeleteLayoutConfirm(object sender, ActionEventArgs e)") (ReturnType . "void") (Snippet . "DeleteLayoutConfirm(${1:object sender}, ${2:ActionEventArgs e});$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DependencyCheckFinishedEventArgs") (Description . "") (DisplayText . "DependencyCheckFinishedEventArgs") (RequiredNamespaceImport) (MethodHeader . "DependencyCheckFinishedEventArgs") (ReturnType) (Snippet . "DependencyCheckFinishedEventArgs$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DependencyCheckFinishedEventArgs") (Description . "") (DisplayText . "DependencyCheckFinishedEventArgs(bool delete, DOBindingSource source)") (RequiredNamespaceImport) (MethodHeader . "DependencyCheckFinishedEventArgs(bool delete, DOBindingSource source)") (ReturnType) (Snippet . "DependencyCheckFinishedEventArgs(${1:bool delete}, ${2:DOBindingSource source})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DependencyMappingType") (Description . "") (DisplayText . "DependencyMappingType") (RequiredNamespaceImport) (MethodHeader . "DependencyMappingType") (ReturnType) (Snippet . "DependencyMappingType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DependencyMappingType") (Description . "DependencyMappingType class constructor
") (DisplayText . "DependencyMappingType()") (RequiredNamespaceImport) (MethodHeader . "DependencyMappingType()") (ReturnType) (Snippet . "DependencyMappingType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DesignerCategoryAttribute") (Description . "") (DisplayText . "DesignerCategoryAttribute") (RequiredNamespaceImport) (MethodHeader . "DesignerCategoryAttribute") (ReturnType) (Snippet . "DesignerCategoryAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DesignerCategoryAttribute") (Description . "") (DisplayText . "DesignerCategoryAttribute()") (RequiredNamespaceImport) (MethodHeader . "DesignerCategoryAttribute()") (ReturnType) (Snippet . "DesignerCategoryAttribute()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DesignerCategoryAttribute") (Description . "") (DisplayText . "DesignerCategoryAttribute(string category)") (RequiredNamespaceImport) (MethodHeader . "DesignerCategoryAttribute(string category)") (ReturnType) (Snippet . "DesignerCategoryAttribute(${1:string category})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DesignerSerializationVisibility") (Description . "") (DisplayText . "DesignerSerializationVisibility") (RequiredNamespaceImport) (MethodHeader . "DesignerSerializationVisibility") (ReturnType) (Snippet . "DesignerSerializationVisibility$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DesignerSerializationVisibilityAttribute") (Description . "") (DisplayText . "DesignerSerializationVisibilityAttribute") (RequiredNamespaceImport) (MethodHeader . "DesignerSerializationVisibilityAttribute") (ReturnType) (Snippet . "DesignerSerializationVisibilityAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DesignerSerializationVisibilityAttribute") (Description . "") (DisplayText . "DesignerSerializationVisibilityAttribute(DesignerSerializationVisibility visibility)") (RequiredNamespaceImport) (MethodHeader . "DesignerSerializationVisibilityAttribute(DesignerSerializationVisibility visibility)") (ReturnType) (Snippet . "DesignerSerializationVisibilityAttribute(${1:DesignerSerializationVisibility visibility})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DesignOnlyAttribute") (Description . "") (DisplayText . "DesignOnlyAttribute") (RequiredNamespaceImport) (MethodHeader . "DesignOnlyAttribute") (ReturnType) (Snippet . "DesignOnlyAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DesignOnlyAttribute") (Description . "") (DisplayText . "DesignOnlyAttribute(bool isDesignOnly)") (RequiredNamespaceImport) (MethodHeader . "DesignOnlyAttribute(bool isDesignOnly)") (ReturnType) (Snippet . "DesignOnlyAttribute(${1:bool isDesignOnly})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DesignTimeVisibleAttribute") (Description . "") (DisplayText . "DesignTimeVisibleAttribute") (RequiredNamespaceImport) (MethodHeader . "DesignTimeVisibleAttribute") (ReturnType) (Snippet . "DesignTimeVisibleAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DesignTimeVisibleAttribute") (Description . "") (DisplayText . "DesignTimeVisibleAttribute()") (RequiredNamespaceImport) (MethodHeader . "DesignTimeVisibleAttribute()") (ReturnType) (Snippet . "DesignTimeVisibleAttribute()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DesignTimeVisibleAttribute") (Description . "") (DisplayText . "DesignTimeVisibleAttribute(bool visible)") (RequiredNamespaceImport) (MethodHeader . "DesignTimeVisibleAttribute(bool visible)") (ReturnType) (Snippet . "DesignTimeVisibleAttribute(${1:bool visible})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DFilterBase") (Description . "") (DisplayText . "DFilterBase") (RequiredNamespaceImport) (MethodHeader . "DFilterBase") (ReturnType) (Snippet . "DFilterBase$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DFilterBase") (Description . "") (DisplayText . "DFilterBase(FilterType filterType)") (RequiredNamespaceImport) (MethodHeader . "DFilterBase(FilterType filterType)") (ReturnType) (Snippet . "DFilterBase(${1:FilterType filterType})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "Diagnostic") (Description . "") (DisplayText . "Diagnostic") (RequiredNamespaceImport) (MethodHeader . "Diagnostic") (ReturnType) (Snippet . "Diagnostic$0") (Kind . "Namespace") (IsSuggestionMode . :json-false)) ((CompletionText . "Dictionary") (Description . "") (DisplayText . "Dictionary<TKey, TValue>") (RequiredNamespaceImport) (MethodHeader . "Dictionary<TKey, TValue>") (ReturnType) (Snippet . "Dictionary<${1:TKey}, ${2:TValue}>$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "Dictionary") (Description . "") (DisplayText . "Dictionary<TKey, TValue>()") (RequiredNamespaceImport) (MethodHeader . "Dictionary<TKey, TValue>()") (ReturnType) (Snippet . "Dictionary<${1:TKey}, ${2:TValue}>()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "Dictionary") (Description . "") (DisplayText . "Dictionary<TKey, TValue>(IDictionary<TKey, TValue> dictionary)") (RequiredNamespaceImport) (MethodHeader . "Dictionary<TKey, TValue>(IDictionary<TKey, TValue> dictionary)") (ReturnType) (Snippet . "Dictionary<${1:TKey}, ${2:TValue}>(${3:IDictionary<TKey, TValue> dictionary})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "Dictionary") (Description . "") (DisplayText . "Dictionary<TKey, TValue>(IDictionary<TKey, TValue> dictionary, IEqualityComparer<TKey> comparer)") (RequiredNamespaceImport) (MethodHeader . "Dictionary<TKey, TValue>(IDictionary<TKey, TValue> dictionary, IEqualityComparer<TKey> comparer)") (ReturnType) (Snippet . "Dictionary<${1:TKey}, ${2:TValue}>(${3:IDictionary<TKey, TValue> dictionary}, ${4:IEqualityComparer<TKey> comparer})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "Dictionary") (Description . "") (DisplayText . "Dictionary<TKey, TValue>(IEqualityComparer<TKey> comparer)") (RequiredNamespaceImport) (MethodHeader . "Dictionary<TKey, TValue>(IEqualityComparer<TKey> comparer)") (ReturnType) (Snippet . "Dictionary<${1:TKey}, ${2:TValue}>(${3:IEqualityComparer<TKey> comparer})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "Dictionary") (Description . "") (DisplayText . "Dictionary<TKey, TValue>(int capacity)") (RequiredNamespaceImport) (MethodHeader . "Dictionary<TKey, TValue>(int capacity)") (ReturnType) (Snippet . "Dictionary<${1:TKey}, ${2:TValue}>(${3:int capacity})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "Dictionary") (Description . "") (DisplayText . "Dictionary<TKey, TValue>(int capacity, IEqualityComparer<TKey> comparer)") (RequiredNamespaceImport) (MethodHeader . "Dictionary<TKey, TValue>(int capacity, IEqualityComparer<TKey> comparer)") (ReturnType) (Snippet . "Dictionary<${1:TKey}, ${2:TValue}>(${3:int capacity}, ${4:IEqualityComparer<TKey> comparer})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "Dictionary") (Description . "") (DisplayText . "Dictionary<TKey, TValue>(SerializationInfo info, StreamingContext context)") (RequiredNamespaceImport) (MethodHeader . "Dictionary<TKey, TValue>(SerializationInfo info, StreamingContext context)") (ReturnType) (Snippet . "Dictionary<${1:TKey}, ${2:TValue}>(${3:SerializationInfo info}, ${4:StreamingContext context})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DictionaryBase") (Description . "") (DisplayText . "DictionaryBase") (RequiredNamespaceImport) (MethodHeader . "DictionaryBase") (ReturnType) (Snippet . "DictionaryBase$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DictionaryBase") (Description . "") (DisplayText . "DictionaryBase()") (RequiredNamespaceImport) (MethodHeader . "DictionaryBase()") (ReturnType) (Snippet . "DictionaryBase()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DictionaryEntry") (Description . "") (DisplayText . "DictionaryEntry") (RequiredNamespaceImport) (MethodHeader . "DictionaryEntry") (ReturnType) (Snippet . "DictionaryEntry$0") (Kind . "Struct") (IsSuggestionMode . :json-false)) ((CompletionText . "DictionaryEntry") (Description . "") (DisplayText . "DictionaryEntry()") (RequiredNamespaceImport) (MethodHeader . "DictionaryEntry()") (ReturnType) (Snippet . "DictionaryEntry()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DictionaryEntry") (Description . "") (DisplayText . "DictionaryEntry(object key, object value)") (RequiredNamespaceImport) (MethodHeader . "DictionaryEntry(object key, object value)") (ReturnType) (Snippet . "DictionaryEntry(${1:object key}, ${2:object value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DimaRecalcCommandExe") (Description . "") (DisplayText . "DimaRecalcCommandExe(Parameters parameters)") (RequiredNamespaceImport) (MethodHeader . "DimaRecalcCommandExe(Parameters parameters)") (ReturnType . "void") (Snippet . "DimaRecalcCommandExe(${1:Parameters parameters});$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DirtyValidator") (Description . "") (DisplayText . "DirtyValidator") (RequiredNamespaceImport) (MethodHeader . "DirtyValidator") (ReturnType) (Snippet . "DirtyValidator$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DirtyValidator") (Description . "") (DisplayText . "DirtyValidator()") (RequiredNamespaceImport) (MethodHeader . "DirtyValidator()") (ReturnType) (Snippet . "DirtyValidator()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DisciplinePopertychangedHandler") (Description . "") (DisplayText . "DisciplinePopertychangedHandler()") (RequiredNamespaceImport) (MethodHeader . "DisciplinePopertychangedHandler()") (ReturnType . "PropertyChangedEventHandler") (Snippet . "DisciplinePopertychangedHandler()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DisplayNameAttribute") (Description . "") (DisplayText . "DisplayNameAttribute") (RequiredNamespaceImport) (MethodHeader . "DisplayNameAttribute") (ReturnType) (Snippet . "DisplayNameAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DisplayNameAttribute") (Description . "") (DisplayText . "DisplayNameAttribute()") (RequiredNamespaceImport) (MethodHeader . "DisplayNameAttribute()") (ReturnType) (Snippet . "DisplayNameAttribute()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DisplayNameAttribute") (Description . "") (DisplayText . "DisplayNameAttribute(string displayName)") (RequiredNamespaceImport) (MethodHeader . "DisplayNameAttribute(string displayName)") (ReturnType) (Snippet . "DisplayNameAttribute(${1:string displayName})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DisplayTextEvaluator") (Description . "") (DisplayText . "DisplayTextEvaluator") (RequiredNamespaceImport) (MethodHeader . "DisplayTextEvaluator") (ReturnType) (Snippet . "DisplayTextEvaluator$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DisplayTextEvaluator") (Description . "") (DisplayText . "DisplayTextEvaluator(IDisplayTextEvaluatorOwner owner)") (RequiredNamespaceImport) (MethodHeader . "DisplayTextEvaluator(IDisplayTextEvaluatorOwner owner)") (ReturnType) (Snippet . "DisplayTextEvaluator(${1:IDisplayTextEvaluatorOwner owner})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DistanceControlType") (Description . "") (DisplayText . "DistanceControlType") (RequiredNamespaceImport) (MethodHeader . "DistanceControlType") (ReturnType) (Snippet . "DistanceControlType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DistanceControlType") (Description . "") (DisplayText . "DistanceControlType()") (RequiredNamespaceImport) (MethodHeader . "DistanceControlType()") (ReturnType) (Snippet . "DistanceControlType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DistanceCtrlType") (Description . "") (DisplayText . "DistanceCtrlType") (RequiredNamespaceImport) (MethodHeader . "DistanceCtrlType") (ReturnType) (Snippet . "DistanceCtrlType$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DistanceCtrlUnitType") (Description . "") (DisplayText . "DistanceCtrlUnitType") (RequiredNamespaceImport) (MethodHeader . "DistanceCtrlUnitType") (ReturnType) (Snippet . "DistanceCtrlUnitType$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DistanceEditorView") (Description . "Implements a model for an editable numeric view.
") (DisplayText . "DistanceEditorView") (RequiredNamespaceImport) (MethodHeader . "DistanceEditorView") (ReturnType) (Snippet . "DistanceEditorView$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DistanceEditorView") (Description . "") (DisplayText . "DistanceEditorView()") (RequiredNamespaceImport) (MethodHeader . "DistanceEditorView()") (ReturnType) (Snippet . "DistanceEditorView()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DistanceEditorView") (Description . "") (DisplayText . "DistanceEditorView(DistanceInputViewModel viewModel)") (RequiredNamespaceImport) (MethodHeader . "DistanceEditorView(DistanceInputViewModel viewModel)") (ReturnType) (Snippet . "DistanceEditorView(${1:DistanceInputViewModel viewModel})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DistanceInputViewModel") (Description . "") (DisplayText . "DistanceInputViewModel") (RequiredNamespaceImport) (MethodHeader . "DistanceInputViewModel") (ReturnType) (Snippet . "DistanceInputViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DistanceInputViewModel") (Description . "Initializes a new instance of the Fls.UI.Base.NumericInputViewModel class.
") (DisplayText . "DistanceInputViewModel()") (RequiredNamespaceImport) (MethodHeader . "DistanceInputViewModel()") (ReturnType) (Snippet . "DistanceInputViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DistanceInputViewModel") (Description . "") (DisplayText . "DistanceInputViewModel(decimal maxValue, decimal minValue)") (RequiredNamespaceImport) (MethodHeader . "DistanceInputViewModel(decimal maxValue, decimal minValue)") (ReturnType) (Snippet . "DistanceInputViewModel(${1:decimal maxValue}, ${2:decimal minValue})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DistanceInputViewModel") (Description . "Initializes a new instance of the Fls.UI.Base.NumericInputViewModel class.

elementId: The id of the UI element.
defaultValue: The default value.
startValue: The start value.") (DisplayText . "DistanceInputViewModel(UIItemId elementId, decimal defaultValue, decimal startValue)") (RequiredNamespaceImport) (MethodHeader . "DistanceInputViewModel(UIItemId elementId, decimal defaultValue, decimal startValue)") (ReturnType) (Snippet . "DistanceInputViewModel(${1:UIItemId elementId}, ${2:decimal defaultValue}, ${3:decimal startValue})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DistanceInputViewModel") (Description . "") (DisplayText . "DistanceInputViewModel(UIItemId elementId, decimal defaultValue, decimal startValue, int decimalPlaces, decimal incrementValue, decimal minValue, decimal maxValue, bool hasThousandMark, NumberStyle numberStyle)") (RequiredNamespaceImport) (MethodHeader . "DistanceInputViewModel(UIItemId elementId, decimal defaultValue, decimal startValue, int decimalPlaces, decimal incrementValue, decimal minValue, decimal maxValue, bool hasThousandMark, NumberStyle numberStyle)") (ReturnType) (Snippet . "DistanceInputViewModel(${1:UIItemId elementId}, ${2:decimal defaultValue}, ${3:decimal startValue}, ${4:int decimalPlaces}, ${5:decimal incrementValue}, ${6:decimal minValue}, ${7:decimal maxValue}, ${8:bool hasThousandMark}, ${9:NumberStyle numberStyle})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DistanceMetaData") (Description . "") (DisplayText . "DistanceMetaData") (RequiredNamespaceImport) (MethodHeader . "DistanceMetaData") (ReturnType) (Snippet . "DistanceMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DistanceMetaData") (Description . "") (DisplayText . "DistanceMetaData()") (RequiredNamespaceImport) (MethodHeader . "DistanceMetaData()") (ReturnType) (Snippet . "DistanceMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DLocalizationType") (Description . "") (DisplayText . "DLocalizationType") (RequiredNamespaceImport) (MethodHeader . "DLocalizationType") (ReturnType) (Snippet . "DLocalizationType$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DNamedQuery") (Description . "") (DisplayText . "DNamedQuery") (RequiredNamespaceImport) (MethodHeader . "DNamedQuery") (ReturnType) (Snippet . "DNamedQuery$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DNamedQuery") (Description . "") (DisplayText . "DNamedQuery(string name, Dictionary<string, List<string>> parameters, DDiff diff = null)") (RequiredNamespaceImport) (MethodHeader . "DNamedQuery(string name, Dictionary<string, List<string>> parameters, DDiff diff = null)") (ReturnType) (Snippet . "DNamedQuery(${1:string name}, ${2:Dictionary<string, List<string>> parameters}, ${3:DDiff diff = null})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DNamedQuery") (Description . "") (DisplayText . "DNamedQuery(string name, Dictionary<string, List<string>> parameters, IEnumerable<string> propertyNames, DDiff diff = null)") (RequiredNamespaceImport) (MethodHeader . "DNamedQuery(string name, Dictionary<string, List<string>> parameters, IEnumerable<string> propertyNames, DDiff diff = null)") (ReturnType) (Snippet . "DNamedQuery(${1:string name}, ${2:Dictionary<string, List<string>> parameters}, ${3:IEnumerable<string> propertyNames}, ${4:DDiff diff = null})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DNamedQuery") (Description . "") (DisplayText . "DNamedQuery(string name, Dictionary<string, string> parameters, DDiff diff = null)") (RequiredNamespaceImport) (MethodHeader . "DNamedQuery(string name, Dictionary<string, string> parameters, DDiff diff = null)") (ReturnType) (Snippet . "DNamedQuery(${1:string name}, ${2:Dictionary<string, string> parameters}, ${3:DDiff diff = null})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOAbsenceReason") (Description . "") (DisplayText . "DOAbsenceReason") (RequiredNamespaceImport) (MethodHeader . "DOAbsenceReason") (ReturnType) (Snippet . "DOAbsenceReason$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOAbsenceReason") (Description . "") (DisplayText . "DOAbsenceReason()") (RequiredNamespaceImport) (MethodHeader . "DOAbsenceReason()") (ReturnType) (Snippet . "DOAbsenceReason()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOAbsenceType") (Description . "") (DisplayText . "DOAbsenceType") (RequiredNamespaceImport) (MethodHeader . "DOAbsenceType") (ReturnType) (Snippet . "DOAbsenceType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOAbsenceType") (Description . "") (DisplayText . "DOAbsenceType()") (RequiredNamespaceImport) (MethodHeader . "DOAbsenceType()") (ReturnType) (Snippet . "DOAbsenceType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOAddress") (Description . "") (DisplayText . "DOAddress") (RequiredNamespaceImport) (MethodHeader . "DOAddress") (ReturnType) (Snippet . "DOAddress$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOAddress") (Description . "") (DisplayText . "DOAddress()") (RequiredNamespaceImport) (MethodHeader . "DOAddress()") (ReturnType) (Snippet . "DOAddress()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOAddressCheck") (Description . "") (DisplayText . "DOAddressCheck") (RequiredNamespaceImport) (MethodHeader . "DOAddressCheck") (ReturnType) (Snippet . "DOAddressCheck$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOAddressCheck") (Description . "") (DisplayText . "DOAddressCheck()") (RequiredNamespaceImport) (MethodHeader . "DOAddressCheck()") (ReturnType) (Snippet . "DOAddressCheck()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOAddressError") (Description . "") (DisplayText . "DOAddressError") (RequiredNamespaceImport) (MethodHeader . "DOAddressError") (ReturnType) (Snippet . "DOAddressError$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOAddressError") (Description . "") (DisplayText . "DOAddressError()") (RequiredNamespaceImport) (MethodHeader . "DOAddressError()") (ReturnType) (Snippet . "DOAddressError()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOArticle") (Description . "") (DisplayText . "DOArticle") (RequiredNamespaceImport) (MethodHeader . "DOArticle") (ReturnType) (Snippet . "DOArticle$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOArticle") (Description . "") (DisplayText . "DOArticle()") (RequiredNamespaceImport) (MethodHeader . "DOArticle()") (ReturnType) (Snippet . "DOArticle()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOAsset") (Description . "") (DisplayText . "DOAsset") (RequiredNamespaceImport) (MethodHeader . "DOAsset") (ReturnType) (Snippet . "DOAsset$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOAsset") (Description . "") (DisplayText . "DOAsset()") (RequiredNamespaceImport) (MethodHeader . "DOAsset()") (ReturnType) (Snippet . "DOAsset()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOAssetPurpose") (Description . "") (DisplayText . "DOAssetPurpose") (RequiredNamespaceImport) (MethodHeader . "DOAssetPurpose") (ReturnType) (Snippet . "DOAssetPurpose$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOAssetPurpose") (Description . "") (DisplayText . "DOAssetPurpose()") (RequiredNamespaceImport) (MethodHeader . "DOAssetPurpose()") (ReturnType) (Snippet . "DOAssetPurpose()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOAttachmentFilter") (Description . "") (DisplayText . "DOAttachmentFilter") (RequiredNamespaceImport) (MethodHeader . "DOAttachmentFilter") (ReturnType) (Snippet . "DOAttachmentFilter$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOAttachmentFilter") (Description . "") (DisplayText . "DOAttachmentFilter()") (RequiredNamespaceImport) (MethodHeader . "DOAttachmentFilter()") (ReturnType) (Snippet . "DOAttachmentFilter()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOAttachments") (Description . "") (DisplayText . "DOAttachments") (RequiredNamespaceImport) (MethodHeader . "DOAttachments") (ReturnType) (Snippet . "DOAttachments$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOAttachments") (Description . "") (DisplayText . "DOAttachments()") (RequiredNamespaceImport) (MethodHeader . "DOAttachments()") (ReturnType) (Snippet . "DOAttachments()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOBase") (Description . "") (DisplayText . "DOBase") (RequiredNamespaceImport) (MethodHeader . "DOBase") (ReturnType) (Snippet . "DOBase$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOBase") (Description . "") (DisplayText . "DOBase()") (RequiredNamespaceImport) (MethodHeader . "DOBase()") (ReturnType) (Snippet . "DOBase()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOBrand") (Description . "") (DisplayText . "DOBrand") (RequiredNamespaceImport) (MethodHeader . "DOBrand") (ReturnType) (Snippet . "DOBrand$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOBrand") (Description . "") (DisplayText . "DOBrand()") (RequiredNamespaceImport) (MethodHeader . "DOBrand()") (ReturnType) (Snippet . "DOBrand()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOCallClassification") (Description . "") (DisplayText . "DOCallClassification") (RequiredNamespaceImport) (MethodHeader . "DOCallClassification") (ReturnType) (Snippet . "DOCallClassification$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOCallClassification") (Description . "") (DisplayText . "DOCallClassification()") (RequiredNamespaceImport) (MethodHeader . "DOCallClassification()") (ReturnType) (Snippet . "DOCallClassification()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOCallstate") (Description . "") (DisplayText . "DOCallstate") (RequiredNamespaceImport) (MethodHeader . "DOCallstate") (ReturnType) (Snippet . "DOCallstate$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOCallstate") (Description . "") (DisplayText . "DOCallstate()") (RequiredNamespaceImport) (MethodHeader . "DOCallstate()") (ReturnType) (Snippet . "DOCallstate()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOCarrier") (Description . "") (DisplayText . "DOCarrier") (RequiredNamespaceImport) (MethodHeader . "DOCarrier") (ReturnType) (Snippet . "DOCarrier$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOCarrier") (Description . "") (DisplayText . "DOCarrier()") (RequiredNamespaceImport) (MethodHeader . "DOCarrier()") (ReturnType) (Snippet . "DOCarrier()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DockPanelDesignTimeActionsProvider") (Description . "") (DisplayText . "DockPanelDesignTimeActionsProvider") (RequiredNamespaceImport) (MethodHeader . "DockPanelDesignTimeActionsProvider") (ReturnType) (Snippet . "DockPanelDesignTimeActionsProvider$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DockPanelDesignTimeActionsProvider") (Description . "") (DisplayText . "DockPanelDesignTimeActionsProvider()") (RequiredNamespaceImport) (MethodHeader . "DockPanelDesignTimeActionsProvider()") (ReturnType) (Snippet . "DockPanelDesignTimeActionsProvider()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DockPanelDesignTimeBoundsProvider") (Description . "") (DisplayText . "DockPanelDesignTimeBoundsProvider") (RequiredNamespaceImport) (MethodHeader . "DockPanelDesignTimeBoundsProvider") (ReturnType) (Snippet . "DockPanelDesignTimeBoundsProvider$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DockPanelDesignTimeBoundsProvider") (Description . "") (DisplayText . "DockPanelDesignTimeBoundsProvider()") (RequiredNamespaceImport) (MethodHeader . "DockPanelDesignTimeBoundsProvider()") (ReturnType) (Snippet . "DockPanelDesignTimeBoundsProvider()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOClientLayout") (Description . "") (DisplayText . "DOClientLayout") (RequiredNamespaceImport) (MethodHeader . "DOClientLayout") (ReturnType) (Snippet . "DOClientLayout$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOClientLayout") (Description . "") (DisplayText . "DOClientLayout()") (RequiredNamespaceImport) (MethodHeader . "DOClientLayout()") (ReturnType) (Snippet . "DOClientLayout()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOClientLayout2User") (Description . "") (DisplayText . "DOClientLayout2User") (RequiredNamespaceImport) (MethodHeader . "DOClientLayout2User") (ReturnType) (Snippet . "DOClientLayout2User$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOClientLayout2User") (Description . "") (DisplayText . "DOClientLayout2User()") (RequiredNamespaceImport) (MethodHeader . "DOClientLayout2User()") (ReturnType) (Snippet . "DOClientLayout2User()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOClientUpdateHistory") (Description . "") (DisplayText . "DOClientUpdateHistory") (RequiredNamespaceImport) (MethodHeader . "DOClientUpdateHistory") (ReturnType) (Snippet . "DOClientUpdateHistory$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOClientUpdateHistory") (Description . "") (DisplayText . "DOClientUpdateHistory()") (RequiredNamespaceImport) (MethodHeader . "DOClientUpdateHistory()") (ReturnType) (Snippet . "DOClientUpdateHistory()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DoConditionsAllPropertiees") (Description . "") (DisplayText . "DoConditionsAllPropertiees(DOBindingSource source, DOBase data)") (RequiredNamespaceImport) (MethodHeader . "DoConditionsAllPropertiees(DOBindingSource source, DOBase data)") (ReturnType . "void") (Snippet . "DoConditionsAllPropertiees(${1:DOBindingSource source}, ${2:DOBase data});$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DocumentFormat") (Description . "") (DisplayText . "DocumentFormat") (RequiredNamespaceImport) (MethodHeader . "DocumentFormat") (ReturnType) (Snippet . "DocumentFormat$0") (Kind . "Namespace") (IsSuggestionMode . :json-false)) ((CompletionText . "DocumentManagerAppearances") (Description . "") (DisplayText . "DocumentManagerAppearances") (RequiredNamespaceImport) (MethodHeader . "DocumentManagerAppearances") (ReturnType) (Snippet . "DocumentManagerAppearances$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DocumentManagerAppearances") (Description . "") (DisplayText . "DocumentManagerAppearances(IAppearanceOwner owner)") (RequiredNamespaceImport) (MethodHeader . "DocumentManagerAppearances(IAppearanceOwner owner)") (ReturnType) (Snippet . "DocumentManagerAppearances(${1:IAppearanceOwner owner})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOCustomerInstallation") (Description . "") (DisplayText . "DOCustomerInstallation") (RequiredNamespaceImport) (MethodHeader . "DOCustomerInstallation") (ReturnType) (Snippet . "DOCustomerInstallation$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOCustomerInstallation") (Description . "") (DisplayText . "DOCustomerInstallation()") (RequiredNamespaceImport) (MethodHeader . "DOCustomerInstallation()") (ReturnType) (Snippet . "DOCustomerInstallation()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DoDataLoadingStatusChangedAction") (Description . "") (DisplayText . "DoDataLoadingStatusChangedAction(LoadingStatus oldValue, LoadingStatus current)") (RequiredNamespaceImport) (MethodHeader . "DoDataLoadingStatusChangedAction(LoadingStatus oldValue, LoadingStatus current)") (ReturnType . "void") (Snippet . "DoDataLoadingStatusChangedAction(${1:LoadingStatus oldValue}, ${2:LoadingStatus current});$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DODataSource") (Description . "") (DisplayText . "DODataSource") (RequiredNamespaceImport) (MethodHeader . "DODataSource") (ReturnType) (Snippet . "DODataSource$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DODataSource") (Description . "") (DisplayText . "DODataSource(DEntity entity, IDOBaseRepository rep, IEntityValidation validator = null, eInitAction initAction = LoadAll)") (RequiredNamespaceImport) (MethodHeader . "DODataSource(DEntity entity, IDOBaseRepository rep, IEntityValidation validator = null, eInitAction initAction = LoadAll)") (ReturnType) (Snippet . "DODataSource(${1:DEntity entity}, ${2:IDOBaseRepository rep}, ${3:IEntityValidation validator = null}, ${4:eInitAction initAction = LoadAll})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DODataSource") (Description . "") (DisplayText . "DODataSource(DEntity entity, IDOBaseRepository rep, IEnumerable<DProperty> propertiesToRead, IEntityValidation validator = null)") (RequiredNamespaceImport) (MethodHeader . "DODataSource(DEntity entity, IDOBaseRepository rep, IEnumerable<DProperty> propertiesToRead, IEntityValidation validator = null)") (ReturnType) (Snippet . "DODataSource(${1:DEntity entity}, ${2:IDOBaseRepository rep}, ${3:IEnumerable<DProperty> propertiesToRead}, ${4:IEntityValidation validator = null})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DODataSource") (Description . "") (DisplayText . "DODataSource(DEntity entity, IDOBaseRepository rep, IEnumerable<string> propertyNames, IEntityValidation validator = null, eInitAction initAction = LoadAll)") (RequiredNamespaceImport) (MethodHeader . "DODataSource(DEntity entity, IDOBaseRepository rep, IEnumerable<string> propertyNames, IEntityValidation validator = null, eInitAction initAction = LoadAll)") (ReturnType) (Snippet . "DODataSource(${1:DEntity entity}, ${2:IDOBaseRepository rep}, ${3:IEnumerable<string> propertyNames}, ${4:IEntityValidation validator = null}, ${5:eInitAction initAction = LoadAll})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DODataSourceFactory") (Description . "") (DisplayText . "DODataSourceFactory") (RequiredNamespaceImport) (MethodHeader . "DODataSourceFactory") (ReturnType) (Snippet . "DODataSourceFactory$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DODataSourceFactory") (Description . "") (DisplayText . "DODataSourceFactory(IDOBaseRepository rep)") (RequiredNamespaceImport) (MethodHeader . "DODataSourceFactory(IDOBaseRepository rep)") (ReturnType) (Snippet . "DODataSourceFactory(${1:IDOBaseRepository rep})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DoDataUpdate") (Description . "") (DisplayText . "DoDataUpdate(Guid testInstance)") (RequiredNamespaceImport) (MethodHeader . "DoDataUpdate(Guid testInstance)") (ReturnType . "void") (Snippet . "DoDataUpdate(${1:Guid testInstance});$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DODataView") (Description . "") (DisplayText . "DODataView") (RequiredNamespaceImport) (MethodHeader . "DODataView") (ReturnType) (Snippet . "DODataView$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DODataView") (Description . "") (DisplayText . "DODataView(DODataSource dataSource, string clientFilterId = null, eInitAction initAction = LoadAll)") (RequiredNamespaceImport) (MethodHeader . "DODataView(DODataSource dataSource, string clientFilterId = null, eInitAction initAction = LoadAll)") (ReturnType) (Snippet . "DODataView(${1:DODataSource dataSource}, ${2:string clientFilterId = null}, ${3:eInitAction initAction = LoadAll})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DODataViewDirect") (Description . "") (DisplayText . "DODataViewDirect") (RequiredNamespaceImport) (MethodHeader . "DODataViewDirect") (ReturnType) (Snippet . "DODataViewDirect$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DODataViewDirect") (Description . "") (DisplayText . "DODataViewDirect(DODataSource dataSource, string clientFilterId = null, eInitAction initAction = LoadAll)") (RequiredNamespaceImport) (MethodHeader . "DODataViewDirect(DODataSource dataSource, string clientFilterId = null, eInitAction initAction = LoadAll)") (ReturnType) (Snippet . "DODataViewDirect(${1:DODataSource dataSource}, ${2:string clientFilterId = null}, ${3:eInitAction initAction = LoadAll})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEngineerMessage") (Description . "") (DisplayText . "DOEngineerMessage") (RequiredNamespaceImport) (MethodHeader . "DOEngineerMessage") (ReturnType) (Snippet . "DOEngineerMessage$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEngineerMessage") (Description . "") (DisplayText . "DOEngineerMessage()") (RequiredNamespaceImport) (MethodHeader . "DOEngineerMessage()") (ReturnType) (Snippet . "DOEngineerMessage()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumAppointSuggOverbooking") (Description . "") (DisplayText . "DOEnumAppointSuggOverbooking") (RequiredNamespaceImport) (MethodHeader . "DOEnumAppointSuggOverbooking") (ReturnType) (Snippet . "DOEnumAppointSuggOverbooking$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumAppointSuggOverbooking") (Description . "") (DisplayText . "DOEnumAppointSuggOverbooking()") (RequiredNamespaceImport) (MethodHeader . "DOEnumAppointSuggOverbooking()") (ReturnType) (Snippet . "DOEnumAppointSuggOverbooking()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumAssetPurpose") (Description . "") (DisplayText . "DOEnumAssetPurpose") (RequiredNamespaceImport) (MethodHeader . "DOEnumAssetPurpose") (ReturnType) (Snippet . "DOEnumAssetPurpose$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumAssetPurpose") (Description . "") (DisplayText . "DOEnumAssetPurpose()") (RequiredNamespaceImport) (MethodHeader . "DOEnumAssetPurpose()") (ReturnType) (Snippet . "DOEnumAssetPurpose()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumClientLayoutType") (Description . "") (DisplayText . "DOEnumClientLayoutType") (RequiredNamespaceImport) (MethodHeader . "DOEnumClientLayoutType") (ReturnType) (Snippet . "DOEnumClientLayoutType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumClientLayoutType") (Description . "") (DisplayText . "DOEnumClientLayoutType()") (RequiredNamespaceImport) (MethodHeader . "DOEnumClientLayoutType()") (ReturnType) (Snippet . "DOEnumClientLayoutType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumContactMedia") (Description . "") (DisplayText . "DOEnumContactMedia") (RequiredNamespaceImport) (MethodHeader . "DOEnumContactMedia") (ReturnType) (Snippet . "DOEnumContactMedia$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumContactMedia") (Description . "") (DisplayText . "DOEnumContactMedia()") (RequiredNamespaceImport) (MethodHeader . "DOEnumContactMedia()") (ReturnType) (Snippet . "DOEnumContactMedia()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumDeliveryStatus") (Description . "") (DisplayText . "DOEnumDeliveryStatus") (RequiredNamespaceImport) (MethodHeader . "DOEnumDeliveryStatus") (ReturnType) (Snippet . "DOEnumDeliveryStatus$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumDeliveryStatus") (Description . "") (DisplayText . "DOEnumDeliveryStatus()") (RequiredNamespaceImport) (MethodHeader . "DOEnumDeliveryStatus()") (ReturnType) (Snippet . "DOEnumDeliveryStatus()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumFillTaskSelection") (Description . "") (DisplayText . "DOEnumFillTaskSelection") (RequiredNamespaceImport) (MethodHeader . "DOEnumFillTaskSelection") (ReturnType) (Snippet . "DOEnumFillTaskSelection$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumFillTaskSelection") (Description . "") (DisplayText . "DOEnumFillTaskSelection()") (RequiredNamespaceImport) (MethodHeader . "DOEnumFillTaskSelection()") (ReturnType) (Snippet . "DOEnumFillTaskSelection()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumMaterialTableType") (Description . "") (DisplayText . "DOEnumMaterialTableType") (RequiredNamespaceImport) (MethodHeader . "DOEnumMaterialTableType") (ReturnType) (Snippet . "DOEnumMaterialTableType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumMaterialTableType") (Description . "") (DisplayText . "DOEnumMaterialTableType()") (RequiredNamespaceImport) (MethodHeader . "DOEnumMaterialTableType()") (ReturnType) (Snippet . "DOEnumMaterialTableType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumNightOptimizeFixCalls") (Description . "") (DisplayText . "DOEnumNightOptimizeFixCalls") (RequiredNamespaceImport) (MethodHeader . "DOEnumNightOptimizeFixCalls") (ReturnType) (Snippet . "DOEnumNightOptimizeFixCalls$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumNightOptimizeFixCalls") (Description . "") (DisplayText . "DOEnumNightOptimizeFixCalls()") (RequiredNamespaceImport) (MethodHeader . "DOEnumNightOptimizeFixCalls()") (ReturnType) (Snippet . "DOEnumNightOptimizeFixCalls()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumObjectStatus") (Description . "") (DisplayText . "DOEnumObjectStatus") (RequiredNamespaceImport) (MethodHeader . "DOEnumObjectStatus") (ReturnType) (Snippet . "DOEnumObjectStatus$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumObjectStatus") (Description . "") (DisplayText . "DOEnumObjectStatus()") (RequiredNamespaceImport) (MethodHeader . "DOEnumObjectStatus()") (ReturnType) (Snippet . "DOEnumObjectStatus()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumPasswordPolicy") (Description . "") (DisplayText . "DOEnumPasswordPolicy") (RequiredNamespaceImport) (MethodHeader . "DOEnumPasswordPolicy") (ReturnType) (Snippet . "DOEnumPasswordPolicy$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumPasswordPolicy") (Description . "") (DisplayText . "DOEnumPasswordPolicy()") (RequiredNamespaceImport) (MethodHeader . "DOEnumPasswordPolicy()") (ReturnType) (Snippet . "DOEnumPasswordPolicy()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumPerfomanceRecordBaseType") (Description . "") (DisplayText . "DOEnumPerfomanceRecordBaseType") (RequiredNamespaceImport) (MethodHeader . "DOEnumPerfomanceRecordBaseType") (ReturnType) (Snippet . "DOEnumPerfomanceRecordBaseType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumPerfomanceRecordBaseType") (Description . "") (DisplayText . "DOEnumPerfomanceRecordBaseType()") (RequiredNamespaceImport) (MethodHeader . "DOEnumPerfomanceRecordBaseType()") (ReturnType) (Snippet . "DOEnumPerfomanceRecordBaseType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumPerformanceRecordStatus") (Description . "") (DisplayText . "DOEnumPerformanceRecordStatus") (RequiredNamespaceImport) (MethodHeader . "DOEnumPerformanceRecordStatus") (ReturnType) (Snippet . "DOEnumPerformanceRecordStatus$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumPerformanceRecordStatus") (Description . "") (DisplayText . "DOEnumPerformanceRecordStatus()") (RequiredNamespaceImport) (MethodHeader . "DOEnumPerformanceRecordStatus()") (ReturnType) (Snippet . "DOEnumPerformanceRecordStatus()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumProjectStatus") (Description . "") (DisplayText . "DOEnumProjectStatus") (RequiredNamespaceImport) (MethodHeader . "DOEnumProjectStatus") (ReturnType) (Snippet . "DOEnumProjectStatus$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumProjectStatus") (Description . "") (DisplayText . "DOEnumProjectStatus()") (RequiredNamespaceImport) (MethodHeader . "DOEnumProjectStatus()") (ReturnType) (Snippet . "DOEnumProjectStatus()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumTaskAddressType") (Description . "") (DisplayText . "DOEnumTaskAddressType") (RequiredNamespaceImport) (MethodHeader . "DOEnumTaskAddressType") (ReturnType) (Snippet . "DOEnumTaskAddressType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumTaskAddressType") (Description . "") (DisplayText . "DOEnumTaskAddressType()") (RequiredNamespaceImport) (MethodHeader . "DOEnumTaskAddressType()") (ReturnType) (Snippet . "DOEnumTaskAddressType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumTaskDeferralReason") (Description . "") (DisplayText . "DOEnumTaskDeferralReason") (RequiredNamespaceImport) (MethodHeader . "DOEnumTaskDeferralReason") (ReturnType) (Snippet . "DOEnumTaskDeferralReason$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumTaskDeferralReason") (Description . "") (DisplayText . "DOEnumTaskDeferralReason()") (RequiredNamespaceImport) (MethodHeader . "DOEnumTaskDeferralReason()") (ReturnType) (Snippet . "DOEnumTaskDeferralReason()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumTaskEscalationReason") (Description . "") (DisplayText . "DOEnumTaskEscalationReason") (RequiredNamespaceImport) (MethodHeader . "DOEnumTaskEscalationReason") (ReturnType) (Snippet . "DOEnumTaskEscalationReason$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumTaskEscalationReason") (Description . "") (DisplayText . "DOEnumTaskEscalationReason()") (RequiredNamespaceImport) (MethodHeader . "DOEnumTaskEscalationReason()") (ReturnType) (Snippet . "DOEnumTaskEscalationReason()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumTaskEscalationState") (Description . "") (DisplayText . "DOEnumTaskEscalationState") (RequiredNamespaceImport) (MethodHeader . "DOEnumTaskEscalationState") (ReturnType) (Snippet . "DOEnumTaskEscalationState$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumTaskEscalationState") (Description . "") (DisplayText . "DOEnumTaskEscalationState()") (RequiredNamespaceImport) (MethodHeader . "DOEnumTaskEscalationState()") (ReturnType) (Snippet . "DOEnumTaskEscalationState()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumTaskEventType") (Description . "") (DisplayText . "DOEnumTaskEventType") (RequiredNamespaceImport) (MethodHeader . "DOEnumTaskEventType") (ReturnType) (Snippet . "DOEnumTaskEventType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumTaskEventType") (Description . "") (DisplayText . "DOEnumTaskEventType()") (RequiredNamespaceImport) (MethodHeader . "DOEnumTaskEventType()") (ReturnType) (Snippet . "DOEnumTaskEventType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumTaskMainType") (Description . "") (DisplayText . "DOEnumTaskMainType") (RequiredNamespaceImport) (MethodHeader . "DOEnumTaskMainType") (ReturnType) (Snippet . "DOEnumTaskMainType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumTaskMainType") (Description . "") (DisplayText . "DOEnumTaskMainType()") (RequiredNamespaceImport) (MethodHeader . "DOEnumTaskMainType()") (ReturnType) (Snippet . "DOEnumTaskMainType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumTaskNotification") (Description . "") (DisplayText . "DOEnumTaskNotification") (RequiredNamespaceImport) (MethodHeader . "DOEnumTaskNotification") (ReturnType) (Snippet . "DOEnumTaskNotification$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumTaskNotification") (Description . "") (DisplayText . "DOEnumTaskNotification()") (RequiredNamespaceImport) (MethodHeader . "DOEnumTaskNotification()") (ReturnType) (Snippet . "DOEnumTaskNotification()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumTaskOutsourcingType") (Description . "") (DisplayText . "DOEnumTaskOutsourcingType") (RequiredNamespaceImport) (MethodHeader . "DOEnumTaskOutsourcingType") (ReturnType) (Snippet . "DOEnumTaskOutsourcingType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumTaskOutsourcingType") (Description . "") (DisplayText . "DOEnumTaskOutsourcingType()") (RequiredNamespaceImport) (MethodHeader . "DOEnumTaskOutsourcingType()") (ReturnType) (Snippet . "DOEnumTaskOutsourcingType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumTaskPriority") (Description . "") (DisplayText . "DOEnumTaskPriority") (RequiredNamespaceImport) (MethodHeader . "DOEnumTaskPriority") (ReturnType) (Snippet . "DOEnumTaskPriority$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumTaskPriority") (Description . "") (DisplayText . "DOEnumTaskPriority()") (RequiredNamespaceImport) (MethodHeader . "DOEnumTaskPriority()") (ReturnType) (Snippet . "DOEnumTaskPriority()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumTaskRelationType") (Description . "") (DisplayText . "DOEnumTaskRelationType") (RequiredNamespaceImport) (MethodHeader . "DOEnumTaskRelationType") (ReturnType) (Snippet . "DOEnumTaskRelationType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumTaskRelationType") (Description . "") (DisplayText . "DOEnumTaskRelationType()") (RequiredNamespaceImport) (MethodHeader . "DOEnumTaskRelationType()") (ReturnType) (Snippet . "DOEnumTaskRelationType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumTaskRetentionType") (Description . "") (DisplayText . "DOEnumTaskRetentionType") (RequiredNamespaceImport) (MethodHeader . "DOEnumTaskRetentionType") (ReturnType) (Snippet . "DOEnumTaskRetentionType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumTaskRetentionType") (Description . "") (DisplayText . "DOEnumTaskRetentionType()") (RequiredNamespaceImport) (MethodHeader . "DOEnumTaskRetentionType()") (ReturnType) (Snippet . "DOEnumTaskRetentionType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumTaskSequenceGroup") (Description . "") (DisplayText . "DOEnumTaskSequenceGroup") (RequiredNamespaceImport) (MethodHeader . "DOEnumTaskSequenceGroup") (ReturnType) (Snippet . "DOEnumTaskSequenceGroup$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumTaskSequenceGroup") (Description . "") (DisplayText . "DOEnumTaskSequenceGroup()") (RequiredNamespaceImport) (MethodHeader . "DOEnumTaskSequenceGroup()") (ReturnType) (Snippet . "DOEnumTaskSequenceGroup()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumTaskServiceType") (Description . "") (DisplayText . "DOEnumTaskServiceType") (RequiredNamespaceImport) (MethodHeader . "DOEnumTaskServiceType") (ReturnType) (Snippet . "DOEnumTaskServiceType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumTaskServiceType") (Description . "") (DisplayText . "DOEnumTaskServiceType()") (RequiredNamespaceImport) (MethodHeader . "DOEnumTaskServiceType()") (ReturnType) (Snippet . "DOEnumTaskServiceType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumTaskStatus") (Description . "") (DisplayText . "DOEnumTaskStatus") (RequiredNamespaceImport) (MethodHeader . "DOEnumTaskStatus") (ReturnType) (Snippet . "DOEnumTaskStatus$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumTaskStatus") (Description . "") (DisplayText . "DOEnumTaskStatus()") (RequiredNamespaceImport) (MethodHeader . "DOEnumTaskStatus()") (ReturnType) (Snippet . "DOEnumTaskStatus()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumTaskTransportType") (Description . "") (DisplayText . "DOEnumTaskTransportType") (RequiredNamespaceImport) (MethodHeader . "DOEnumTaskTransportType") (ReturnType) (Snippet . "DOEnumTaskTransportType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumTaskTransportType") (Description . "") (DisplayText . "DOEnumTaskTransportType()") (RequiredNamespaceImport) (MethodHeader . "DOEnumTaskTransportType()") (ReturnType) (Snippet . "DOEnumTaskTransportType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumTaskTypeSymbol") (Description . "") (DisplayText . "DOEnumTaskTypeSymbol") (RequiredNamespaceImport) (MethodHeader . "DOEnumTaskTypeSymbol") (ReturnType) (Snippet . "DOEnumTaskTypeSymbol$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumTaskTypeSymbol") (Description . "") (DisplayText . "DOEnumTaskTypeSymbol()") (RequiredNamespaceImport) (MethodHeader . "DOEnumTaskTypeSymbol()") (ReturnType) (Snippet . "DOEnumTaskTypeSymbol()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumTourDataAbsence") (Description . "") (DisplayText . "DOEnumTourDataAbsence") (RequiredNamespaceImport) (MethodHeader . "DOEnumTourDataAbsence") (ReturnType) (Snippet . "DOEnumTourDataAbsence$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumTourDataAbsence") (Description . "") (DisplayText . "DOEnumTourDataAbsence()") (RequiredNamespaceImport) (MethodHeader . "DOEnumTourDataAbsence()") (ReturnType) (Snippet . "DOEnumTourDataAbsence()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumTravelType") (Description . "") (DisplayText . "DOEnumTravelType") (RequiredNamespaceImport) (MethodHeader . "DOEnumTravelType") (ReturnType) (Snippet . "DOEnumTravelType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOEnumTravelType") (Description . "") (DisplayText . "DOEnumTravelType()") (RequiredNamespaceImport) (MethodHeader . "DOEnumTravelType()") (ReturnType) (Snippet . "DOEnumTravelType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOFeedback") (Description . "") (DisplayText . "DOFeedback") (RequiredNamespaceImport) (MethodHeader . "DOFeedback") (ReturnType) (Snippet . "DOFeedback$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOFeedback") (Description . "") (DisplayText . "DOFeedback()") (RequiredNamespaceImport) (MethodHeader . "DOFeedback()") (ReturnType) (Snippet . "DOFeedback()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOLargeScaleOperation") (Description . "") (DisplayText . "DOLargeScaleOperation") (RequiredNamespaceImport) (MethodHeader . "DOLargeScaleOperation") (ReturnType) (Snippet . "DOLargeScaleOperation$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOLargeScaleOperation") (Description . "") (DisplayText . "DOLargeScaleOperation()") (RequiredNamespaceImport) (MethodHeader . "DOLargeScaleOperation()") (ReturnType) (Snippet . "DOLargeScaleOperation()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOLargeScaleOperationPc") (Description . "") (DisplayText . "DOLargeScaleOperationPc") (RequiredNamespaceImport) (MethodHeader . "DOLargeScaleOperationPc") (ReturnType) (Snippet . "DOLargeScaleOperationPc$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOLargeScaleOperationPc") (Description . "") (DisplayText . "DOLargeScaleOperationPc()") (RequiredNamespaceImport) (MethodHeader . "DOLargeScaleOperationPc()") (ReturnType) (Snippet . "DOLargeScaleOperationPc()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOListFactory") (Description . "") (DisplayText . "DOListFactory") (RequiredNamespaceImport) (MethodHeader . "DOListFactory") (ReturnType) (Snippet . "DOListFactory$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOListFactory") (Description . "") (DisplayText . "DOListFactory()") (RequiredNamespaceImport) (MethodHeader . "DOListFactory()") (ReturnType) (Snippet . "DOListFactory()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMailServer") (Description . "") (DisplayText . "DOMailServer") (RequiredNamespaceImport) (MethodHeader . "DOMailServer") (ReturnType) (Snippet . "DOMailServer$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMailServer") (Description . "") (DisplayText . "DOMailServer()") (RequiredNamespaceImport) (MethodHeader . "DOMailServer()") (ReturnType) (Snippet . "DOMailServer()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOManufacturer") (Description . "") (DisplayText . "DOManufacturer") (RequiredNamespaceImport) (MethodHeader . "DOManufacturer") (ReturnType) (Snippet . "DOManufacturer$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOManufacturer") (Description . "") (DisplayText . "DOManufacturer()") (RequiredNamespaceImport) (MethodHeader . "DOManufacturer()") (ReturnType) (Snippet . "DOManufacturer()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMasterDataLog") (Description . "") (DisplayText . "DOMasterDataLog") (RequiredNamespaceImport) (MethodHeader . "DOMasterDataLog") (ReturnType) (Snippet . "DOMasterDataLog$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMasterDataLog") (Description . "") (DisplayText . "DOMasterDataLog()") (RequiredNamespaceImport) (MethodHeader . "DOMasterDataLog()") (ReturnType) (Snippet . "DOMasterDataLog()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMasterRoute") (Description . "") (DisplayText . "DOMasterRoute") (RequiredNamespaceImport) (MethodHeader . "DOMasterRoute") (ReturnType) (Snippet . "DOMasterRoute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMasterRoute") (Description . "") (DisplayText . "DOMasterRoute()") (RequiredNamespaceImport) (MethodHeader . "DOMasterRoute()") (ReturnType) (Snippet . "DOMasterRoute()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMasterRoutePc") (Description . "") (DisplayText . "DOMasterRoutePc") (RequiredNamespaceImport) (MethodHeader . "DOMasterRoutePc") (ReturnType) (Snippet . "DOMasterRoutePc$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMasterRoutePc") (Description . "") (DisplayText . "DOMasterRoutePc()") (RequiredNamespaceImport) (MethodHeader . "DOMasterRoutePc()") (ReturnType) (Snippet . "DOMasterRoutePc()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterial") (Description . "") (DisplayText . "DOMaterial") (RequiredNamespaceImport) (MethodHeader . "DOMaterial") (ReturnType) (Snippet . "DOMaterial$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterial") (Description . "") (DisplayText . "DOMaterial()") (RequiredNamespaceImport) (MethodHeader . "DOMaterial()") (ReturnType) (Snippet . "DOMaterial()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialGroup") (Description . "") (DisplayText . "DOMaterialGroup") (RequiredNamespaceImport) (MethodHeader . "DOMaterialGroup") (ReturnType) (Snippet . "DOMaterialGroup$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialGroup") (Description . "") (DisplayText . "DOMaterialGroup()") (RequiredNamespaceImport) (MethodHeader . "DOMaterialGroup()") (ReturnType) (Snippet . "DOMaterialGroup()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialMaster") (Description . "") (DisplayText . "DOMaterialMaster") (RequiredNamespaceImport) (MethodHeader . "DOMaterialMaster") (ReturnType) (Snippet . "DOMaterialMaster$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialMaster") (Description . "") (DisplayText . "DOMaterialMaster()") (RequiredNamespaceImport) (MethodHeader . "DOMaterialMaster()") (ReturnType) (Snippet . "DOMaterialMaster()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialOrder") (Description . "") (DisplayText . "DOMaterialOrder") (RequiredNamespaceImport) (MethodHeader . "DOMaterialOrder") (ReturnType) (Snippet . "DOMaterialOrder$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialOrder") (Description . "") (DisplayText . "DOMaterialOrder()") (RequiredNamespaceImport) (MethodHeader . "DOMaterialOrder()") (ReturnType) (Snippet . "DOMaterialOrder()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialPosting") (Description . "") (DisplayText . "DOMaterialPosting") (RequiredNamespaceImport) (MethodHeader . "DOMaterialPosting") (ReturnType) (Snippet . "DOMaterialPosting$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialPosting") (Description . "") (DisplayText . "DOMaterialPosting()") (RequiredNamespaceImport) (MethodHeader . "DOMaterialPosting()") (ReturnType) (Snippet . "DOMaterialPosting()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialRelevance") (Description . "") (DisplayText . "DOMaterialRelevance") (RequiredNamespaceImport) (MethodHeader . "DOMaterialRelevance") (ReturnType) (Snippet . "DOMaterialRelevance$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialRelevance") (Description . "") (DisplayText . "DOMaterialRelevance()") (RequiredNamespaceImport) (MethodHeader . "DOMaterialRelevance()") (ReturnType) (Snippet . "DOMaterialRelevance()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialStock") (Description . "") (DisplayText . "DOMaterialStock") (RequiredNamespaceImport) (MethodHeader . "DOMaterialStock") (ReturnType) (Snippet . "DOMaterialStock$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialStock") (Description . "") (DisplayText . "DOMaterialStock()") (RequiredNamespaceImport) (MethodHeader . "DOMaterialStock()") (ReturnType) (Snippet . "DOMaterialStock()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialStockLocation") (Description . "") (DisplayText . "DOMaterialStockLocation") (RequiredNamespaceImport) (MethodHeader . "DOMaterialStockLocation") (ReturnType) (Snippet . "DOMaterialStockLocation$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialStockLocation") (Description . "") (DisplayText . "DOMaterialStockLocation()") (RequiredNamespaceImport) (MethodHeader . "DOMaterialStockLocation()") (ReturnType) (Snippet . "DOMaterialStockLocation()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialStockLocationMA") (Description . "") (DisplayText . "DOMaterialStockLocationMA") (RequiredNamespaceImport) (MethodHeader . "DOMaterialStockLocationMA") (ReturnType) (Snippet . "DOMaterialStockLocationMA$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialStockLocationMA") (Description . "") (DisplayText . "DOMaterialStockLocationMA()") (RequiredNamespaceImport) (MethodHeader . "DOMaterialStockLocationMA()") (ReturnType) (Snippet . "DOMaterialStockLocationMA()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMobileConfiguration") (Description . "") (DisplayText . "DOMobileConfiguration") (RequiredNamespaceImport) (MethodHeader . "DOMobileConfiguration") (ReturnType) (Snippet . "DOMobileConfiguration$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMobileConfiguration") (Description . "") (DisplayText . "DOMobileConfiguration()") (RequiredNamespaceImport) (MethodHeader . "DOMobileConfiguration()") (ReturnType) (Snippet . "DOMobileConfiguration()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DoModificationTest") (Description . "") (DisplayText . "DoModificationTest()") (RequiredNamespaceImport) (MethodHeader . "DoModificationTest()") (ReturnType . "ModificationTestAutoRefreshStatus") (Snippet . "DoModificationTest()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMsdAppHeader") (Description . "") (DisplayText . "DOMsdAppHeader") (RequiredNamespaceImport) (MethodHeader . "DOMsdAppHeader") (ReturnType) (Snippet . "DOMsdAppHeader$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMsdAppHeader") (Description . "") (DisplayText . "DOMsdAppHeader()") (RequiredNamespaceImport) (MethodHeader . "DOMsdAppHeader()") (ReturnType) (Snippet . "DOMsdAppHeader()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMsdAppLine") (Description . "") (DisplayText . "DOMsdAppLine") (RequiredNamespaceImport) (MethodHeader . "DOMsdAppLine") (ReturnType) (Snippet . "DOMsdAppLine$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMsdAppLine") (Description . "") (DisplayText . "DOMsdAppLine()") (RequiredNamespaceImport) (MethodHeader . "DOMsdAppLine()") (ReturnType) (Snippet . "DOMsdAppLine()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMSDArticles") (Description . "") (DisplayText . "DOMSDArticles") (RequiredNamespaceImport) (MethodHeader . "DOMSDArticles") (ReturnType) (Snippet . "DOMSDArticles$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMSDArticles") (Description . "") (DisplayText . "DOMSDArticles()") (RequiredNamespaceImport) (MethodHeader . "DOMSDArticles()") (ReturnType) (Snippet . "DOMSDArticles()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMWITestTable") (Description . "") (DisplayText . "DOMWITestTable") (RequiredNamespaceImport) (MethodHeader . "DOMWITestTable") (ReturnType) (Snippet . "DOMWITestTable$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMWITestTable") (Description . "") (DisplayText . "DOMWITestTable()") (RequiredNamespaceImport) (MethodHeader . "DOMWITestTable()") (ReturnType) (Snippet . "DOMWITestTable()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMWITestTable2") (Description . "") (DisplayText . "DOMWITestTable2") (RequiredNamespaceImport) (MethodHeader . "DOMWITestTable2") (ReturnType) (Snippet . "DOMWITestTable2$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMWITestTable2") (Description . "") (DisplayText . "DOMWITestTable2()") (RequiredNamespaceImport) (MethodHeader . "DOMWITestTable2()") (ReturnType) (Snippet . "DOMWITestTable2()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOObjectTypeParents") (Description . "") (DisplayText . "DOObjectTypeParents") (RequiredNamespaceImport) (MethodHeader . "DOObjectTypeParents") (ReturnType) (Snippet . "DOObjectTypeParents$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOObjectTypeParents") (Description . "") (DisplayText . "DOObjectTypeParents()") (RequiredNamespaceImport) (MethodHeader . "DOObjectTypeParents()") (ReturnType) (Snippet . "DOObjectTypeParents()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOOrderPackageLocation") (Description . "") (DisplayText . "DOOrderPackageLocation") (RequiredNamespaceImport) (MethodHeader . "DOOrderPackageLocation") (ReturnType) (Snippet . "DOOrderPackageLocation$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOOrderPackageLocation") (Description . "") (DisplayText . "DOOrderPackageLocation()") (RequiredNamespaceImport) (MethodHeader . "DOOrderPackageLocation()") (ReturnType) (Snippet . "DOOrderPackageLocation()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOOrderPackageLocation2TaskType") (Description . "") (DisplayText . "DOOrderPackageLocation2TaskType") (RequiredNamespaceImport) (MethodHeader . "DOOrderPackageLocation2TaskType") (ReturnType) (Snippet . "DOOrderPackageLocation2TaskType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOOrderPackageLocation2TaskType") (Description . "") (DisplayText . "DOOrderPackageLocation2TaskType()") (RequiredNamespaceImport) (MethodHeader . "DOOrderPackageLocation2TaskType()") (ReturnType) (Snippet . "DOOrderPackageLocation2TaskType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOOrderReturnsReason") (Description . "") (DisplayText . "DOOrderReturnsReason") (RequiredNamespaceImport) (MethodHeader . "DOOrderReturnsReason") (ReturnType) (Snippet . "DOOrderReturnsReason$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOOrderReturnsReason") (Description . "") (DisplayText . "DOOrderReturnsReason()") (RequiredNamespaceImport) (MethodHeader . "DOOrderReturnsReason()") (ReturnType) (Snippet . "DOOrderReturnsReason()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOOrderVerification") (Description . "") (DisplayText . "DOOrderVerification") (RequiredNamespaceImport) (MethodHeader . "DOOrderVerification") (ReturnType) (Snippet . "DOOrderVerification$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOOrderVerification") (Description . "") (DisplayText . "DOOrderVerification()") (RequiredNamespaceImport) (MethodHeader . "DOOrderVerification()") (ReturnType) (Snippet . "DOOrderVerification()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOPortalConfiguration") (Description . "") (DisplayText . "DOPortalConfiguration") (RequiredNamespaceImport) (MethodHeader . "DOPortalConfiguration") (ReturnType) (Snippet . "DOPortalConfiguration$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOPortalConfiguration") (Description . "") (DisplayText . "DOPortalConfiguration()") (RequiredNamespaceImport) (MethodHeader . "DOPortalConfiguration()") (ReturnType) (Snippet . "DOPortalConfiguration()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOPostalCode") (Description . "") (DisplayText . "DOPostalCode") (RequiredNamespaceImport) (MethodHeader . "DOPostalCode") (ReturnType) (Snippet . "DOPostalCode$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOPostalCode") (Description . "") (DisplayText . "DOPostalCode()") (RequiredNamespaceImport) (MethodHeader . "DOPostalCode()") (ReturnType) (Snippet . "DOPostalCode()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOProjectPerformanceRecord") (Description . "") (DisplayText . "DOProjectPerformanceRecord") (RequiredNamespaceImport) (MethodHeader . "DOProjectPerformanceRecord") (ReturnType) (Snippet . "DOProjectPerformanceRecord$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOProjectPerformanceRecord") (Description . "") (DisplayText . "DOProjectPerformanceRecord()") (RequiredNamespaceImport) (MethodHeader . "DOProjectPerformanceRecord()") (ReturnType) (Snippet . "DOProjectPerformanceRecord()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOProjectPerformanceRecordType") (Description . "") (DisplayText . "DOProjectPerformanceRecordType") (RequiredNamespaceImport) (MethodHeader . "DOProjectPerformanceRecordType") (ReturnType) (Snippet . "DOProjectPerformanceRecordType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOProjectPerformanceRecordType") (Description . "") (DisplayText . "DOProjectPerformanceRecordType()") (RequiredNamespaceImport) (MethodHeader . "DOProjectPerformanceRecordType()") (ReturnType) (Snippet . "DOProjectPerformanceRecordType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOProjectRoadMap") (Description . "") (DisplayText . "DOProjectRoadMap") (RequiredNamespaceImport) (MethodHeader . "DOProjectRoadMap") (ReturnType) (Snippet . "DOProjectRoadMap$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOProjectRoadMap") (Description . "") (DisplayText . "DOProjectRoadMap()") (RequiredNamespaceImport) (MethodHeader . "DOProjectRoadMap()") (ReturnType) (Snippet . "DOProjectRoadMap()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOPurchase") (Description . "") (DisplayText . "DOPurchase") (RequiredNamespaceImport) (MethodHeader . "DOPurchase") (ReturnType) (Snippet . "DOPurchase$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOPurchase") (Description . "") (DisplayText . "DOPurchase()") (RequiredNamespaceImport) (MethodHeader . "DOPurchase()") (ReturnType) (Snippet . "DOPurchase()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOPurchasePackage") (Description . "") (DisplayText . "DOPurchasePackage") (RequiredNamespaceImport) (MethodHeader . "DOPurchasePackage") (ReturnType) (Snippet . "DOPurchasePackage$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOPurchasePackage") (Description . "") (DisplayText . "DOPurchasePackage()") (RequiredNamespaceImport) (MethodHeader . "DOPurchasePackage()") (ReturnType) (Snippet . "DOPurchasePackage()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOPurchasePackageHistory") (Description . "") (DisplayText . "DOPurchasePackageHistory") (RequiredNamespaceImport) (MethodHeader . "DOPurchasePackageHistory") (ReturnType) (Snippet . "DOPurchasePackageHistory$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOPurchasePackageHistory") (Description . "") (DisplayText . "DOPurchasePackageHistory()") (RequiredNamespaceImport) (MethodHeader . "DOPurchasePackageHistory()") (ReturnType) (Snippet . "DOPurchasePackageHistory()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOSCService2Call") (Description . "") (DisplayText . "DOSCService2Call") (RequiredNamespaceImport) (MethodHeader . "DOSCService2Call") (ReturnType) (Snippet . "DOSCService2Call$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOSCService2Call") (Description . "") (DisplayText . "DOSCService2Call()") (RequiredNamespaceImport) (MethodHeader . "DOSCService2Call()") (ReturnType) (Snippet . "DOSCService2Call()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOSCService2MaterialType") (Description . "") (DisplayText . "DOSCService2MaterialType") (RequiredNamespaceImport) (MethodHeader . "DOSCService2MaterialType") (ReturnType) (Snippet . "DOSCService2MaterialType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOSCService2MaterialType") (Description . "") (DisplayText . "DOSCService2MaterialType()") (RequiredNamespaceImport) (MethodHeader . "DOSCService2MaterialType()") (ReturnType) (Snippet . "DOSCService2MaterialType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOSCService2Purchase") (Description . "") (DisplayText . "DOSCService2Purchase") (RequiredNamespaceImport) (MethodHeader . "DOSCService2Purchase") (ReturnType) (Snippet . "DOSCService2Purchase$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOSCService2Purchase") (Description . "") (DisplayText . "DOSCService2Purchase()") (RequiredNamespaceImport) (MethodHeader . "DOSCService2Purchase()") (ReturnType) (Snippet . "DOSCService2Purchase()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOSCService2TaskType") (Description . "") (DisplayText . "DOSCService2TaskType") (RequiredNamespaceImport) (MethodHeader . "DOSCService2TaskType") (ReturnType) (Snippet . "DOSCService2TaskType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOSCService2TaskType") (Description . "") (DisplayText . "DOSCService2TaskType()") (RequiredNamespaceImport) (MethodHeader . "DOSCService2TaskType()") (ReturnType) (Snippet . "DOSCService2TaskType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOSCServiceDefault") (Description . "") (DisplayText . "DOSCServiceDefault") (RequiredNamespaceImport) (MethodHeader . "DOSCServiceDefault") (ReturnType) (Snippet . "DOSCServiceDefault$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOSCServiceDefault") (Description . "") (DisplayText . "DOSCServiceDefault()") (RequiredNamespaceImport) (MethodHeader . "DOSCServiceDefault()") (ReturnType) (Snippet . "DOSCServiceDefault()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOSCServiceHierarchy") (Description . "") (DisplayText . "DOSCServiceHierarchy") (RequiredNamespaceImport) (MethodHeader . "DOSCServiceHierarchy") (ReturnType) (Snippet . "DOSCServiceHierarchy$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOSCServiceHierarchy") (Description . "") (DisplayText . "DOSCServiceHierarchy()") (RequiredNamespaceImport) (MethodHeader . "DOSCServiceHierarchy()") (ReturnType) (Snippet . "DOSCServiceHierarchy()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOStockState") (Description . "") (DisplayText . "DOStockState") (RequiredNamespaceImport) (MethodHeader . "DOStockState") (ReturnType) (Snippet . "DOStockState$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOStockState") (Description . "") (DisplayText . "DOStockState()") (RequiredNamespaceImport) (MethodHeader . "DOStockState()") (ReturnType) (Snippet . "DOStockState()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOSubcontractor") (Description . "") (DisplayText . "DOSubcontractor") (RequiredNamespaceImport) (MethodHeader . "DOSubcontractor") (ReturnType) (Snippet . "DOSubcontractor$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOSubcontractor") (Description . "") (DisplayText . "DOSubcontractor()") (RequiredNamespaceImport) (MethodHeader . "DOSubcontractor()") (ReturnType) (Snippet . "DOSubcontractor()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOSyncData") (Description . "") (DisplayText . "DOSyncData") (RequiredNamespaceImport) (MethodHeader . "DOSyncData") (ReturnType) (Snippet . "DOSyncData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOSyncData") (Description . "") (DisplayText . "DOSyncData()") (RequiredNamespaceImport) (MethodHeader . "DOSyncData()") (ReturnType) (Snippet . "DOSyncData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTask") (Description . "") (DisplayText . "DOTask") (RequiredNamespaceImport) (MethodHeader . "DOTask") (ReturnType) (Snippet . "DOTask$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTask") (Description . "") (DisplayText . "DOTask()") (RequiredNamespaceImport) (MethodHeader . "DOTask()") (ReturnType) (Snippet . "DOTask()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTask2") (Description . "") (DisplayText . "DOTask2") (RequiredNamespaceImport) (MethodHeader . "DOTask2") (ReturnType) (Snippet . "DOTask2$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTask2") (Description . "") (DisplayText . "DOTask2()") (RequiredNamespaceImport) (MethodHeader . "DOTask2()") (ReturnType) (Snippet . "DOTask2()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTask2Purchase") (Description . "") (DisplayText . "DOTask2Purchase") (RequiredNamespaceImport) (MethodHeader . "DOTask2Purchase") (ReturnType) (Snippet . "DOTask2Purchase$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTask2Purchase") (Description . "") (DisplayText . "DOTask2Purchase()") (RequiredNamespaceImport) (MethodHeader . "DOTask2Purchase()") (ReturnType) (Snippet . "DOTask2Purchase()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTaskHistory") (Description . "") (DisplayText . "DOTaskHistory") (RequiredNamespaceImport) (MethodHeader . "DOTaskHistory") (ReturnType) (Snippet . "DOTaskHistory$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTaskHistory") (Description . "") (DisplayText . "DOTaskHistory()") (RequiredNamespaceImport) (MethodHeader . "DOTaskHistory()") (ReturnType) (Snippet . "DOTaskHistory()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTaskTimeFrames") (Description . "") (DisplayText . "DOTaskTimeFrames") (RequiredNamespaceImport) (MethodHeader . "DOTaskTimeFrames") (ReturnType) (Snippet . "DOTaskTimeFrames$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTaskTimeFrames") (Description . "") (DisplayText . "DOTaskTimeFrames()") (RequiredNamespaceImport) (MethodHeader . "DOTaskTimeFrames()") (ReturnType) (Snippet . "DOTaskTimeFrames()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTaskType") (Description . "") (DisplayText . "DOTaskType") (RequiredNamespaceImport) (MethodHeader . "DOTaskType") (ReturnType) (Snippet . "DOTaskType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTaskType") (Description . "") (DisplayText . "DOTaskType()") (RequiredNamespaceImport) (MethodHeader . "DOTaskType()") (ReturnType) (Snippet . "DOTaskType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTeam") (Description . "") (DisplayText . "DOTeam") (RequiredNamespaceImport) (MethodHeader . "DOTeam") (ReturnType) (Snippet . "DOTeam$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTeam") (Description . "") (DisplayText . "DOTeam()") (RequiredNamespaceImport) (MethodHeader . "DOTeam()") (ReturnType) (Snippet . "DOTeam()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTeamStat") (Description . "") (DisplayText . "DOTeamStat") (RequiredNamespaceImport) (MethodHeader . "DOTeamStat") (ReturnType) (Snippet . "DOTeamStat$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTeamStat") (Description . "") (DisplayText . "DOTeamStat()") (RequiredNamespaceImport) (MethodHeader . "DOTeamStat()") (ReturnType) (Snippet . "DOTeamStat()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTNTStatus") (Description . "") (DisplayText . "DOTNTStatus") (RequiredNamespaceImport) (MethodHeader . "DOTNTStatus") (ReturnType) (Snippet . "DOTNTStatus$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTNTStatus") (Description . "") (DisplayText . "DOTNTStatus()") (RequiredNamespaceImport) (MethodHeader . "DOTNTStatus()") (ReturnType) (Snippet . "DOTNTStatus()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTNTStatusToTask") (Description . "") (DisplayText . "DOTNTStatusToTask") (RequiredNamespaceImport) (MethodHeader . "DOTNTStatusToTask") (ReturnType) (Snippet . "DOTNTStatusToTask$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTNTStatusToTask") (Description . "") (DisplayText . "DOTNTStatusToTask()") (RequiredNamespaceImport) (MethodHeader . "DOTNTStatusToTask()") (ReturnType) (Snippet . "DOTNTStatusToTask()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOToolTourData") (Description . "") (DisplayText . "DOToolTourData") (RequiredNamespaceImport) (MethodHeader . "DOToolTourData") (ReturnType) (Snippet . "DOToolTourData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOToolTourData") (Description . "") (DisplayText . "DOToolTourData()") (RequiredNamespaceImport) (MethodHeader . "DOToolTourData()") (ReturnType) (Snippet . "DOToolTourData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTourAddress") (Description . "") (DisplayText . "DOTourAddress") (RequiredNamespaceImport) (MethodHeader . "DOTourAddress") (ReturnType) (Snippet . "DOTourAddress$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTourAddress") (Description . "") (DisplayText . "DOTourAddress()") (RequiredNamespaceImport) (MethodHeader . "DOTourAddress()") (ReturnType) (Snippet . "DOTourAddress()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTourData") (Description . "") (DisplayText . "DOTourData") (RequiredNamespaceImport) (MethodHeader . "DOTourData") (ReturnType) (Snippet . "DOTourData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTourData") (Description . "") (DisplayText . "DOTourData()") (RequiredNamespaceImport) (MethodHeader . "DOTourData()") (ReturnType) (Snippet . "DOTourData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTourLabel") (Description . "") (DisplayText . "DOTourLabel") (RequiredNamespaceImport) (MethodHeader . "DOTourLabel") (ReturnType) (Snippet . "DOTourLabel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTourLabel") (Description . "") (DisplayText . "DOTourLabel()") (RequiredNamespaceImport) (MethodHeader . "DOTourLabel()") (ReturnType) (Snippet . "DOTourLabel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTracking") (Description . "") (DisplayText . "DOTracking") (RequiredNamespaceImport) (MethodHeader . "DOTracking") (ReturnType) (Snippet . "DOTracking$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTracking") (Description . "") (DisplayText . "DOTracking()") (RequiredNamespaceImport) (MethodHeader . "DOTracking()") (ReturnType) (Snippet . "DOTracking()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTrackingDevice") (Description . "") (DisplayText . "DOTrackingDevice") (RequiredNamespaceImport) (MethodHeader . "DOTrackingDevice") (ReturnType) (Snippet . "DOTrackingDevice$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTrackingDevice") (Description . "") (DisplayText . "DOTrackingDevice()") (RequiredNamespaceImport) (MethodHeader . "DOTrackingDevice()") (ReturnType) (Snippet . "DOTrackingDevice()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTrackingEngineer") (Description . "") (DisplayText . "DOTrackingEngineer") (RequiredNamespaceImport) (MethodHeader . "DOTrackingEngineer") (ReturnType) (Snippet . "DOTrackingEngineer$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTrackingEngineer") (Description . "") (DisplayText . "DOTrackingEngineer()") (RequiredNamespaceImport) (MethodHeader . "DOTrackingEngineer()") (ReturnType) (Snippet . "DOTrackingEngineer()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTrackingPosition") (Description . "") (DisplayText . "DOTrackingPosition") (RequiredNamespaceImport) (MethodHeader . "DOTrackingPosition") (ReturnType) (Snippet . "DOTrackingPosition$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTrackingPosition") (Description . "") (DisplayText . "DOTrackingPosition()") (RequiredNamespaceImport) (MethodHeader . "DOTrackingPosition()") (ReturnType) (Snippet . "DOTrackingPosition()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTrackingReport") (Description . "") (DisplayText . "DOTrackingReport") (RequiredNamespaceImport) (MethodHeader . "DOTrackingReport") (ReturnType) (Snippet . "DOTrackingReport$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTrackingReport") (Description . "") (DisplayText . "DOTrackingReport()") (RequiredNamespaceImport) (MethodHeader . "DOTrackingReport()") (ReturnType) (Snippet . "DOTrackingReport()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTrackingVehicle") (Description . "") (DisplayText . "DOTrackingVehicle") (RequiredNamespaceImport) (MethodHeader . "DOTrackingVehicle") (ReturnType) (Snippet . "DOTrackingVehicle$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTrackingVehicle") (Description . "") (DisplayText . "DOTrackingVehicle()") (RequiredNamespaceImport) (MethodHeader . "DOTrackingVehicle()") (ReturnType) (Snippet . "DOTrackingVehicle()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTransferPoint") (Description . "") (DisplayText . "DOTransferPoint") (RequiredNamespaceImport) (MethodHeader . "DOTransferPoint") (ReturnType) (Snippet . "DOTransferPoint$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOTransferPoint") (Description . "") (DisplayText . "DOTransferPoint()") (RequiredNamespaceImport) (MethodHeader . "DOTransferPoint()") (ReturnType) (Snippet . "DOTransferPoint()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DoubleClickedHandler") (Description . "") (DisplayText . "DoubleClickedHandler(object sender, ActionEventArgs e)") (RequiredNamespaceImport) (MethodHeader . "DoubleClickedHandler(object sender, ActionEventArgs e)") (ReturnType . "void") (Snippet . "DoubleClickedHandler(${1:object sender}, ${2:ActionEventArgs e});$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DoubleValue") (Description . "Implements a model for double value.
") (DisplayText . "DoubleValue") (RequiredNamespaceImport) (MethodHeader . "DoubleValue") (ReturnType) (Snippet . "DoubleValue$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DoubleValue") (Description . "Initializes a new instance of the Fls.Base.DoubleValue class.
") (DisplayText . "DoubleValue()") (RequiredNamespaceImport) (MethodHeader . "DoubleValue()") (ReturnType) (Snippet . "DoubleValue()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DoubleValue") (Description . "Initializes a new instance of the Fls.Base.DoubleValue class.

value: The start value.") (DisplayText . "DoubleValue(double value)") (RequiredNamespaceImport) (MethodHeader . "DoubleValue(double value)") (ReturnType) (Snippet . "DoubleValue(${1:double value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOWasteType") (Description . "") (DisplayText . "DOWasteType") (RequiredNamespaceImport) (MethodHeader . "DOWasteType") (ReturnType) (Snippet . "DOWasteType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOWasteType") (Description . "") (DisplayText . "DOWasteType()") (RequiredNamespaceImport) (MethodHeader . "DOWasteType()") (ReturnType) (Snippet . "DOWasteType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DownloadWorkFlowRequest") (Description . "") (DisplayText . "DownloadWorkFlowRequest") (RequiredNamespaceImport) (MethodHeader . "DownloadWorkFlowRequest") (ReturnType) (Snippet . "DownloadWorkFlowRequest$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DownloadWorkFlowRequest") (Description . "") (DisplayText . "DownloadWorkFlowRequest()") (RequiredNamespaceImport) (MethodHeader . "DownloadWorkFlowRequest()") (ReturnType) (Snippet . "DownloadWorkFlowRequest()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DownloadWorkFlowResponse") (Description . "") (DisplayText . "DownloadWorkFlowResponse") (RequiredNamespaceImport) (MethodHeader . "DownloadWorkFlowResponse") (ReturnType) (Snippet . "DownloadWorkFlowResponse$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DownloadWorkFlowResponse") (Description . "") (DisplayText . "DownloadWorkFlowResponse()") (RequiredNamespaceImport) (MethodHeader . "DownloadWorkFlowResponse()") (ReturnType) (Snippet . "DownloadWorkFlowResponse()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOWorkerJournal") (Description . "") (DisplayText . "DOWorkerJournal") (RequiredNamespaceImport) (MethodHeader . "DOWorkerJournal") (ReturnType) (Snippet . "DOWorkerJournal$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOWorkerJournal") (Description . "") (DisplayText . "DOWorkerJournal()") (RequiredNamespaceImport) (MethodHeader . "DOWorkerJournal()") (ReturnType) (Snippet . "DOWorkerJournal()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DoWorkEventArgs") (Description . "") (DisplayText . "DoWorkEventArgs") (RequiredNamespaceImport) (MethodHeader . "DoWorkEventArgs") (ReturnType) (Snippet . "DoWorkEventArgs$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DoWorkEventArgs") (Description . "") (DisplayText . "DoWorkEventArgs(object argument)") (RequiredNamespaceImport) (MethodHeader . "DoWorkEventArgs(object argument)") (ReturnType) (Snippet . "DoWorkEventArgs(${1:object argument})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DoWorkEventHandler") (Description . "") (DisplayText . "DoWorkEventHandler") (RequiredNamespaceImport) (MethodHeader . "DoWorkEventHandler") (ReturnType) (Snippet . "DoWorkEventHandler$0") (Kind . "Delegate") (IsSuggestionMode . :json-false)) ((CompletionText . "DoWorkEventHandler") (Description . "") (DisplayText . "DoWorkEventHandler(object @object, IntPtr method)") (RequiredNamespaceImport) (MethodHeader . "DoWorkEventHandler(object @object, IntPtr method)") (ReturnType) (Snippet . "DoWorkEventHandler(${1:object @object}, ${2:IntPtr method})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOWorkingTimeTemplate") (Description . "") (DisplayText . "DOWorkingTimeTemplate") (RequiredNamespaceImport) (MethodHeader . "DOWorkingTimeTemplate") (ReturnType) (Snippet . "DOWorkingTimeTemplate$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOWorkingTimeTemplate") (Description . "") (DisplayText . "DOWorkingTimeTemplate()") (RequiredNamespaceImport) (MethodHeader . "DOWorkingTimeTemplate()") (ReturnType) (Snippet . "DOWorkingTimeTemplate()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DPacket") (Description . "") (DisplayText . "DPacket") (RequiredNamespaceImport) (MethodHeader . "DPacket") (ReturnType) (Snippet . "DPacket$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DQueryBase") (Description . "") (DisplayText . "DQueryBase") (RequiredNamespaceImport) (MethodHeader . "DQueryBase") (ReturnType) (Snippet . "DQueryBase$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DQueryBase") (Description . "") (DisplayText . "DQueryBase()") (RequiredNamespaceImport) (MethodHeader . "DQueryBase()") (ReturnType) (Snippet . "DQueryBase()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DragDropHelper") (Description . "Implements a helper class fro drag drop between WPF and forms.
") (DisplayText . "DragDropHelper") (RequiredNamespaceImport) (MethodHeader . "DragDropHelper") (ReturnType) (Snippet . "DragDropHelper$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DragDropHelper") (Description . "Initializes a new instance of the DragDropHelper class.

objToDrag: The object to drag.") (DisplayText . "DragDropHelper(object objToDrag)") (RequiredNamespaceImport) (MethodHeader . "DragDropHelper(object objToDrag)") (ReturnType) (Snippet . "DragDropHelper(${1:object objToDrag})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DragDropHelper") (Description . "Initializes a new instance of the DragDropHelper class.

objToDrag: The object to drag.") (DisplayText . "DragDropHelper(string sourceId, object source, object objToDrag, object dragHandler, bool isControlPressed)") (RequiredNamespaceImport) (MethodHeader . "DragDropHelper(string sourceId, object source, object objToDrag, object dragHandler, bool isControlPressed)") (ReturnType) (Snippet . "DragDropHelper(${1:string sourceId}, ${2:object source}, ${3:object objToDrag}, ${4:object dragHandler}, ${5:bool isControlPressed})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DragHandler") (Description . "Implements a model for a drag helper. 
") (DisplayText . "DragHandler") (RequiredNamespaceImport) (MethodHeader . "DragHandler") (ReturnType) (Snippet . "DragHandler$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DragHandler") (Description . "Initializes a new instance of the Fls.Controls.Forms.DevExpressBase.DragHandler class. 

source: The source control. 
getAllowedDragEffects: A delegate which returns the allowed drag effects. 
getDragObject: A delegate which returns the drag object. 
handleDragDropEffects: A delegate which handles the drag results. ") (DisplayText . "DragHandler(Control source, Func<object, DragDropEffects> getAllowedDragEffects, Func<object, MouseEventArgs, object> getDragObject, Action<object, DragDropEffects> handleDragDropEffects)") (RequiredNamespaceImport) (MethodHeader . "DragHandler(Control source, Func<object, DragDropEffects> getAllowedDragEffects, Func<object, MouseEventArgs, object> getDragObject, Action<object, DragDropEffects> handleDragDropEffects)") (ReturnType) (Snippet . "DragHandler(${1:Control source}, ${2:Func<object, DragDropEffects> getAllowedDragEffects}, ${3:Func<object, MouseEventArgs, object> getDragObject}, ${4:Action<object, DragDropEffects> handleDragDropEffects})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DragHandlerEventArgs") (Description . "Implements a model for drag event arguments.
") (DisplayText . "DragHandlerEventArgs") (RequiredNamespaceImport) (MethodHeader . "DragHandlerEventArgs") (ReturnType) (Snippet . "DragHandlerEventArgs$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DragHandlerEventArgs") (Description . "Initializes a new instance of the Fls.Controls.Forms.DevExpressBase.DragHandlerEventArgs class.

state: The drag state.") (DisplayText . "DragHandlerEventArgs(DragState state)") (RequiredNamespaceImport) (MethodHeader . "DragHandlerEventArgs(DragState state)") (ReturnType) (Snippet . "DragHandlerEventArgs(${1:DragState state})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DragHelperEventArgs") (Description . "Implements a model for 
") (DisplayText . "DragHelperEventArgs") (RequiredNamespaceImport) (MethodHeader . "DragHelperEventArgs") (ReturnType) (Snippet . "DragHelperEventArgs$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DragHelperEventArgs") (Description . "") (DisplayText . "DragHelperEventArgs()") (RequiredNamespaceImport) (MethodHeader . "DragHelperEventArgs()") (ReturnType) (Snippet . "DragHelperEventArgs()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DragHelperEventArgs") (Description . "") (DisplayText . "DragHelperEventArgs(DragDropHelper helper)") (RequiredNamespaceImport) (MethodHeader . "DragHelperEventArgs(DragDropHelper helper)") (ReturnType) (Snippet . "DragHelperEventArgs(${1:DragDropHelper helper})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DragState") (Description . "The different states with in a drag and drop. 
") (DisplayText . "DragState") (RequiredNamespaceImport) (MethodHeader . "DragState") (ReturnType) (Snippet . "DragState$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DriverManagementViewModel") (Description . "") (DisplayText . "DriverManagementViewModel") (RequiredNamespaceImport) (MethodHeader . "DriverManagementViewModel") (ReturnType) (Snippet . "DriverManagementViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DriverManagementViewModel") (Description . "") (DisplayText . "DriverManagementViewModel()") (RequiredNamespaceImport) (MethodHeader . "DriverManagementViewModel()") (ReturnType) (Snippet . "DriverManagementViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DropHandler") (Description . "Implements a model for handling the dropping of an item.
") (DisplayText . "DropHandler") (RequiredNamespaceImport) (MethodHeader . "DropHandler") (ReturnType) (Snippet . "DropHandler$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DropHandler") (Description . "Initializes a new instance of the Fls.Controls.Forms.DevExpressBase.DropHandler class.
") (DisplayText . "DropHandler()") (RequiredNamespaceImport) (MethodHeader . "DropHandler()") (ReturnType) (Snippet . "DropHandler()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DropHandler") (Description . "Initializes a new instance of the Fls.Controls.Forms.DevExpressBase.DropHandler class.

control: The control which allows droppings
getAllowedEffects: The allowed effects handler.
allowedTypes: The allowed types.
dropAction: The drop action handler.") (DisplayText . "DropHandler(Control control, Func<object, VectorBase, DragDropEffects> getAllowedEffects, Type[] allowedTypes, Action<object, DragDropEffects, VectorBase, DragDropHelper> dropAction)") (RequiredNamespaceImport) (MethodHeader . "DropHandler(Control control, Func<object, VectorBase, DragDropEffects> getAllowedEffects, Type[] allowedTypes, Action<object, DragDropEffects, VectorBase, DragDropHelper> dropAction)") (ReturnType) (Snippet . "DropHandler(${1:Control control}, ${2:Func<object, VectorBase, DragDropEffects> getAllowedEffects}, ${3:Type[] allowedTypes}, ${4:Action<object, DragDropEffects, VectorBase, DragDropHelper> dropAction})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DSearchType") (Description . "") (DisplayText . "DSearchType") (RequiredNamespaceImport) (MethodHeader . "DSearchType") (ReturnType) (Snippet . "DSearchType$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DState") (Description . "") (DisplayText . "DState") (RequiredNamespaceImport) (MethodHeader . "DState") (ReturnType) (Snippet . "DState$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DuplicateWaitObjectException") (Description . "") (DisplayText . "DuplicateWaitObjectException") (RequiredNamespaceImport) (MethodHeader . "DuplicateWaitObjectException") (ReturnType) (Snippet . "DuplicateWaitObjectException$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DuplicateWaitObjectException") (Description . "") (DisplayText . "DuplicateWaitObjectException()") (RequiredNamespaceImport) (MethodHeader . "DuplicateWaitObjectException()") (ReturnType) (Snippet . "DuplicateWaitObjectException()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DuplicateWaitObjectException") (Description . "") (DisplayText . "DuplicateWaitObjectException(SerializationInfo info, StreamingContext context)") (RequiredNamespaceImport) (MethodHeader . "DuplicateWaitObjectException(SerializationInfo info, StreamingContext context)") (ReturnType) (Snippet . "DuplicateWaitObjectException(${1:SerializationInfo info}, ${2:StreamingContext context})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DuplicateWaitObjectException") (Description . "") (DisplayText . "DuplicateWaitObjectException(string message, Exception innerException)") (RequiredNamespaceImport) (MethodHeader . "DuplicateWaitObjectException(string message, Exception innerException)") (ReturnType) (Snippet . "DuplicateWaitObjectException(${1:string message}, ${2:Exception innerException})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DuplicateWaitObjectException") (Description . "") (DisplayText . "DuplicateWaitObjectException(string parameterName)") (RequiredNamespaceImport) (MethodHeader . "DuplicateWaitObjectException(string parameterName)") (ReturnType) (Snippet . "DuplicateWaitObjectException(${1:string parameterName})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DuplicateWaitObjectException") (Description . "") (DisplayText . "DuplicateWaitObjectException(string parameterName, string message)") (RequiredNamespaceImport) (MethodHeader . "DuplicateWaitObjectException(string parameterName, string message)") (ReturnType) (Snippet . "DuplicateWaitObjectException(${1:string parameterName}, ${2:string message})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DurationView") (Description . "") (DisplayText . "DurationView") (RequiredNamespaceImport) (MethodHeader . "DurationView") (ReturnType) (Snippet . "DurationView$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DurationView") (Description . "") (DisplayText . "DurationView(DurationViewModel viewModel)") (RequiredNamespaceImport) (MethodHeader . "DurationView(DurationViewModel viewModel)") (ReturnType) (Snippet . "DurationView(${1:DurationViewModel viewModel})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DurationViewModel") (Description . "TODO: Update summary.
") (DisplayText . "DurationViewModel") (RequiredNamespaceImport) (MethodHeader . "DurationViewModel") (ReturnType) (Snippet . "DurationViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DurationViewModel") (Description . "") (DisplayText . "DurationViewModel()") (RequiredNamespaceImport) (MethodHeader . "DurationViewModel()") (ReturnType) (Snippet . "DurationViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DXDescriptionAttribute") (Description . "") (DisplayText . "DXDescriptionAttribute") (RequiredNamespaceImport) (MethodHeader . "DXDescriptionAttribute") (ReturnType) (Snippet . "DXDescriptionAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DXDescriptionAttribute") (Description . "") (DisplayText . "DXDescriptionAttribute()") (RequiredNamespaceImport) (MethodHeader . "DXDescriptionAttribute()") (ReturnType) (Snippet . "DXDescriptionAttribute()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DXDescriptionAttribute") (Description . "") (DisplayText . "DXDescriptionAttribute(string description)") (RequiredNamespaceImport) (MethodHeader . "DXDescriptionAttribute(string description)") (ReturnType) (Snippet . "DXDescriptionAttribute(${1:string description})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DXDisplayNameAttribute") (Description . "") (DisplayText . "DXDisplayNameAttribute") (RequiredNamespaceImport) (MethodHeader . "DXDisplayNameAttribute") (ReturnType) (Snippet . "DXDisplayNameAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DXDisplayNameAttribute") (Description . "") (DisplayText . "DXDisplayNameAttribute(Type resourceFinder, string resourceFile, string resourceName)") (RequiredNamespaceImport) (MethodHeader . "DXDisplayNameAttribute(Type resourceFinder, string resourceFile, string resourceName)") (ReturnType) (Snippet . "DXDisplayNameAttribute(${1:Type resourceFinder}, ${2:string resourceFile}, ${3:string resourceName})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DXDisplayNameAttribute") (Description . "") (DisplayText . "DXDisplayNameAttribute(Type resourceFinder, string resourceFile, string resourceName, string defaultDisplayName)") (RequiredNamespaceImport) (MethodHeader . "DXDisplayNameAttribute(Type resourceFinder, string resourceFile, string resourceName, string defaultDisplayName)") (ReturnType) (Snippet . "DXDisplayNameAttribute(${1:Type resourceFinder}, ${2:string resourceFile}, ${3:string resourceName}, ${4:string defaultDisplayName})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DXDisplayNameAttribute") (Description . "") (DisplayText . "DXDisplayNameAttribute(Type resourceFinder, string resourceName)") (RequiredNamespaceImport) (MethodHeader . "DXDisplayNameAttribute(Type resourceFinder, string resourceName)") (ReturnType) (Snippet . "DXDisplayNameAttribute(${1:Type resourceFinder}, ${2:string resourceName})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DXDisplayNameIgnoreAttribute") (Description . "") (DisplayText . "DXDisplayNameIgnoreAttribute") (RequiredNamespaceImport) (MethodHeader . "DXDisplayNameIgnoreAttribute") (ReturnType) (Snippet . "DXDisplayNameIgnoreAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DXDisplayNameIgnoreAttribute") (Description . "") (DisplayText . "DXDisplayNameIgnoreAttribute()") (RequiredNamespaceImport) (MethodHeader . "DXDisplayNameIgnoreAttribute()") (ReturnType) (Snippet . "DXDisplayNameIgnoreAttribute()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DXHelpExcludeAttribute") (Description . "") (DisplayText . "DXHelpExcludeAttribute") (RequiredNamespaceImport) (MethodHeader . "DXHelpExcludeAttribute") (ReturnType) (Snippet . "DXHelpExcludeAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DXHelpExcludeAttribute") (Description . "") (DisplayText . "DXHelpExcludeAttribute(bool exclude)") (RequiredNamespaceImport) (MethodHeader . "DXHelpExcludeAttribute(bool exclude)") (ReturnType) (Snippet . "DXHelpExcludeAttribute(${1:bool exclude})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DXToolboxItemAttribute") (Description . "") (DisplayText . "DXToolboxItemAttribute") (RequiredNamespaceImport) (MethodHeader . "DXToolboxItemAttribute") (ReturnType) (Snippet . "DXToolboxItemAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DXToolboxItemAttribute") (Description . "") (DisplayText . "DXToolboxItemAttribute(bool defaultType)") (RequiredNamespaceImport) (MethodHeader . "DXToolboxItemAttribute(bool defaultType)") (ReturnType) (Snippet . "DXToolboxItemAttribute(${1:bool defaultType})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DXToolboxItemAttribute") (Description . "") (DisplayText . "DXToolboxItemAttribute(DXToolboxItemKind kind)") (RequiredNamespaceImport) (MethodHeader . "DXToolboxItemAttribute(DXToolboxItemKind kind)") (ReturnType) (Snippet . "DXToolboxItemAttribute(${1:DXToolboxItemKind kind})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DXToolboxItemAttribute") (Description . "") (DisplayText . "DXToolboxItemAttribute(DXToolboxItemKind kind, string toolboxTypeName)") (RequiredNamespaceImport) (MethodHeader . "DXToolboxItemAttribute(DXToolboxItemKind kind, string toolboxTypeName)") (ReturnType) (Snippet . "DXToolboxItemAttribute(${1:DXToolboxItemKind kind}, ${2:string toolboxTypeName})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DXWebToolboxItemAttribute") (Description . "") (DisplayText . "DXWebToolboxItemAttribute") (RequiredNamespaceImport) (MethodHeader . "DXWebToolboxItemAttribute") (ReturnType) (Snippet . "DXWebToolboxItemAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DXWebToolboxItemAttribute") (Description . "") (DisplayText . "DXWebToolboxItemAttribute(bool defaultType)") (RequiredNamespaceImport) (MethodHeader . "DXWebToolboxItemAttribute(bool defaultType)") (ReturnType) (Snippet . "DXWebToolboxItemAttribute(${1:bool defaultType})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DXWebToolboxItemAttribute") (Description . "") (DisplayText . "DXWebToolboxItemAttribute(DXToolboxItemKind kind)") (RequiredNamespaceImport) (MethodHeader . "DXWebToolboxItemAttribute(DXToolboxItemKind kind)") (ReturnType) (Snippet . "DXWebToolboxItemAttribute(${1:DXToolboxItemKind kind})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "dynamic") (Description) (DisplayText . "dynamic") (RequiredNamespaceImport) (MethodHeader) (ReturnType) (Snippet . "dynamic") (Kind . "Keyword") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicChangeModel") (Description . "Implements a model for 
") (DisplayText . "DynamicChangeModel") (RequiredNamespaceImport) (MethodHeader . "DynamicChangeModel") (ReturnType) (Snippet . "DynamicChangeModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicChangeModel") (Description . "") (DisplayText . "DynamicChangeModel()") (RequiredNamespaceImport) (MethodHeader . "DynamicChangeModel()") (ReturnType) (Snippet . "DynamicChangeModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicChangeViewModel") (Description . "Implements a model for Appointments overview. 
") (DisplayText . "DynamicChangeViewModel") (RequiredNamespaceImport) (MethodHeader . "DynamicChangeViewModel") (ReturnType) (Snippet . "DynamicChangeViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicChangeViewModel") (Description . "Initializes a new instance of the Fls.VisiTourClient.ViewModel.AppointmentSchedulerViewModel class. 
") (DisplayText . "DynamicChangeViewModel()") (RequiredNamespaceImport) (MethodHeader . "DynamicChangeViewModel()") (ReturnType) (Snippet . "DynamicChangeViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicData") (Description . "") (DisplayText . "DynamicData") (RequiredNamespaceImport) (MethodHeader . "DynamicData") (ReturnType) (Snippet . "DynamicData$0") (Kind . "Namespace") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicDataFactory") (Description . "") (DisplayText . "DynamicDataFactory") (RequiredNamespaceImport) (MethodHeader . "DynamicDataFactory") (ReturnType) (Snippet . "DynamicDataFactory$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicDataFactory") (Description . "") (DisplayText . "DynamicDataFactory()") (RequiredNamespaceImport) (MethodHeader . "DynamicDataFactory()") (ReturnType) (Snippet . "DynamicDataFactory()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicDataInputViewModel") (Description . "Implements only methods to create view models form dynamic data.
") (DisplayText . "DynamicDataInputViewModel") (RequiredNamespaceImport) (MethodHeader . "DynamicDataInputViewModel") (ReturnType) (Snippet . "DynamicDataInputViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicFunction") (Description . "Implements a model for 
") (DisplayText . "DynamicFunction") (RequiredNamespaceImport) (MethodHeader . "DynamicFunction") (ReturnType) (Snippet . "DynamicFunction$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicFunction") (Description . "") (DisplayText . "DynamicFunction()") (RequiredNamespaceImport) (MethodHeader . "DynamicFunction()") (ReturnType) (Snippet . "DynamicFunction()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicTextBuilder") (Description . "Gets or sets the FormatedStringValue as IFormatedString.
") (DisplayText . "DynamicTextBuilder") (RequiredNamespaceImport) (MethodHeader . "DynamicTextBuilder") (ReturnType . "CaseBuilder") (Snippet . "DynamicTextBuilder$0") (Kind . "Property") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicTreeTableView") (Description . "Implements a forms user control based on a view model. This control 
") (DisplayText . "DynamicTreeTableView") (RequiredNamespaceImport) (MethodHeader . "DynamicTreeTableView") (ReturnType) (Snippet . "DynamicTreeTableView$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicTreeTableView") (Description . "Initializes a new instance of the FormatedTableView class. 
") (DisplayText . "DynamicTreeTableView()") (RequiredNamespaceImport) (MethodHeader . "DynamicTreeTableView()") (ReturnType) (Snippet . "DynamicTreeTableView()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicTreeTableView") (Description . "Initializes a new instance of the FormatedTableView class. 

viewModel: The used view model ") (DisplayText . "DynamicTreeTableView(IDataTableSourceViewModel viewModel)") (RequiredNamespaceImport) (MethodHeader . "DynamicTreeTableView(IDataTableSourceViewModel viewModel)") (ReturnType) (Snippet . "DynamicTreeTableView(${1:IDataTableSourceViewModel viewModel})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicXmlHeader") (Description . "
Remarks:
") (DisplayText . "DynamicXmlHeader") (RequiredNamespaceImport) (MethodHeader . "DynamicXmlHeader") (ReturnType) (Snippet . "DynamicXmlHeader$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicXmlHeader") (Description . "") (DisplayText . "DynamicXmlHeader()") (RequiredNamespaceImport) (MethodHeader . "DynamicXmlHeader()") (ReturnType) (Snippet . "DynamicXmlHeader()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicXmlRow") (Description . "") (DisplayText . "DynamicXmlRow") (RequiredNamespaceImport) (MethodHeader . "DynamicXmlRow") (ReturnType) (Snippet . "DynamicXmlRow$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicXmlRow") (Description . "") (DisplayText . "DynamicXmlRow()") (RequiredNamespaceImport) (MethodHeader . "DynamicXmlRow()") (ReturnType) (Snippet . "DynamicXmlRow()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicXmlRow") (Description . "Initilize a row with a given start capacity of cells.

count: ") (DisplayText . "DynamicXmlRow(int count)") (RequiredNamespaceImport) (MethodHeader . "DynamicXmlRow(int count)") (ReturnType) (Snippet . "DynamicXmlRow(${1:int count})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicXmlRowData") (Description . "
Remarks:
") (DisplayText . "DynamicXmlRowData") (RequiredNamespaceImport) (MethodHeader . "DynamicXmlRowData") (ReturnType) (Snippet . "DynamicXmlRowData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicXmlRowData") (Description . "") (DisplayText . "DynamicXmlRowData()") (RequiredNamespaceImport) (MethodHeader . "DynamicXmlRowData()") (ReturnType) (Snippet . "DynamicXmlRowData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicXmlTable") (Description . "
Remarks:
") (DisplayText . "DynamicXmlTable") (RequiredNamespaceImport) (MethodHeader . "DynamicXmlTable") (ReturnType) (Snippet . "DynamicXmlTable$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicXmlTable") (Description . "") (DisplayText . "DynamicXmlTable()") (RequiredNamespaceImport) (MethodHeader . "DynamicXmlTable()") (ReturnType) (Snippet . "DynamicXmlTable()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DynmicDataAttribute") (Description . "Implements an attribute for a subversion version.
") (DisplayText . "DynmicDataAttribute") (RequiredNamespaceImport) (MethodHeader . "DynmicDataAttribute") (ReturnType) (Snippet . "DynmicDataAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DynmicDataAttribute") (Description . "Initializes a new instance of the Fls.Base.SvnRevisionAttribute class.

svnRevision: The subversion version.") (DisplayText . "DynmicDataAttribute(string name)") (RequiredNamespaceImport) (MethodHeader . "DynmicDataAttribute(string name)") (ReturnType) (Snippet . "DynmicDataAttribute(${1:string name})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "EncryptedData") (Description . "") (DisplayText . "EncryptedData") (RequiredNamespaceImport) (MethodHeader . "EncryptedData") (ReturnType) (Snippet . "EncryptedData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "EncryptedData") (Description . "") (DisplayText . "EncryptedData()") (RequiredNamespaceImport) (MethodHeader . "EncryptedData()") (ReturnType) (Snippet . "EncryptedData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "EncryptedData") (Description . "") (DisplayText . "EncryptedData(byte[] data, byte[] vector)") (RequiredNamespaceImport) (MethodHeader . "EncryptedData(byte[] data, byte[] vector)") (ReturnType) (Snippet . "EncryptedData(${1:byte[] data}, ${2:byte[] vector})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "EntityUpdateHandler") (Description . "") (DisplayText . "EntityUpdateHandler") (RequiredNamespaceImport) (MethodHeader . "EntityUpdateHandler") (ReturnType) (Snippet . "EntityUpdateHandler$0") (Kind . "Delegate") (IsSuggestionMode . :json-false)) ((CompletionText . "EntityUpdateHandler") (Description . "") (DisplayText . "EntityUpdateHandler(object @object, IntPtr method)") (RequiredNamespaceImport) (MethodHeader . "EntityUpdateHandler(object @object, IntPtr method)") (ReturnType) (Snippet . "EntityUpdateHandler(${1:object @object}, ${2:IntPtr method})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "EntityUpdateType") (Description . "") (DisplayText . "EntityUpdateType") (RequiredNamespaceImport) (MethodHeader . "EntityUpdateType") (ReturnType) (Snippet . "EntityUpdateType$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "EscalatedActivitiesFormViewModel") (Description . "TODO: Update summary.
") (DisplayText . "EscalatedActivitiesFormViewModel") (RequiredNamespaceImport) (MethodHeader . "EscalatedActivitiesFormViewModel") (ReturnType) (Snippet . "EscalatedActivitiesFormViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "EscalatedActivitiesFormViewModel") (Description . "") (DisplayText . "EscalatedActivitiesFormViewModel()") (RequiredNamespaceImport) (MethodHeader . "EscalatedActivitiesFormViewModel()") (ReturnType) (Snippet . "EscalatedActivitiesFormViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "EscalatedActivitiesMetaData") (Description . "") (DisplayText . "EscalatedActivitiesMetaData") (RequiredNamespaceImport) (MethodHeader . "EscalatedActivitiesMetaData") (ReturnType) (Snippet . "EscalatedActivitiesMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "EscalatedActivitiesMetaData") (Description . "") (DisplayText . "EscalatedActivitiesMetaData()") (RequiredNamespaceImport) (MethodHeader . "EscalatedActivitiesMetaData()") (ReturnType) (Snippet . "EscalatedActivitiesMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ExpandableObjectConverter") (Description . "") (DisplayText . "ExpandableObjectConverter") (RequiredNamespaceImport) (MethodHeader . "ExpandableObjectConverter") (ReturnType) (Snippet . "ExpandableObjectConverter$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ExpandableObjectConverter") (Description . "") (DisplayText . "ExpandableObjectConverter()") (RequiredNamespaceImport) (MethodHeader . "ExpandableObjectConverter()") (ReturnType) (Snippet . "ExpandableObjectConverter()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ExtendableDataTable") (Description . "") (DisplayText . "ExtendableDataTable<T>") (RequiredNamespaceImport) (MethodHeader . "ExtendableDataTable<T>") (ReturnType) (Snippet . "ExtendableDataTable<${1:T}>$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ExtendableDataTable") (Description . "") (DisplayText . "ExtendableDataTable<T>()") (RequiredNamespaceImport) (MethodHeader . "ExtendableDataTable<T>()") (ReturnType) (Snippet . "ExtendableDataTable<${1:T}>()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ExtendableDataTable") (Description . "") (DisplayText . "ExtendableDataTable<T>(SerializationInfo info, StreamingContext context)") (RequiredNamespaceImport) (MethodHeader . "ExtendableDataTable<T>(SerializationInfo info, StreamingContext context)") (ReturnType) (Snippet . "ExtendableDataTable<${1:T}>(${2:SerializationInfo info}, ${3:StreamingContext context})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ExtendableDataTable") (Description . "") (DisplayText . "ExtendableDataTable<T>(string tableName)") (RequiredNamespaceImport) (MethodHeader . "ExtendableDataTable<T>(string tableName)") (ReturnType) (Snippet . "ExtendableDataTable<${1:T}>(${2:string tableName})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ExtendableDataTable") (Description . "") (DisplayText . "ExtendableDataTable<T>(string tableName, string tableNamespace)") (RequiredNamespaceImport) (MethodHeader . "ExtendableDataTable<T>(string tableName, string tableNamespace)") (ReturnType) (Snippet . "ExtendableDataTable<${1:T}>(${2:string tableName}, ${3:string tableNamespace})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "FieldAccessException") (Description . "") (DisplayText . "FieldAccessException") (RequiredNamespaceImport) (MethodHeader . "FieldAccessException") (ReturnType) (Snippet . "FieldAccessException$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "FieldAccessException") (Description . "") (DisplayText . "FieldAccessException()") (RequiredNamespaceImport) (MethodHeader . "FieldAccessException()") (ReturnType) (Snippet . "FieldAccessException()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "FieldAccessException") (Description . "") (DisplayText . "FieldAccessException(SerializationInfo info, StreamingContext context)") (RequiredNamespaceImport) (MethodHeader . "FieldAccessException(SerializationInfo info, StreamingContext context)") (ReturnType) (Snippet . "FieldAccessException(${1:SerializationInfo info}, ${2:StreamingContext context})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "FieldAccessException") (Description . "") (DisplayText . "FieldAccessException(string message)") (RequiredNamespaceImport) (MethodHeader . "FieldAccessException(string message)") (ReturnType) (Snippet . "FieldAccessException(${1:string message})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "FieldAccessException") (Description . "") (DisplayText . "FieldAccessException(string message, Exception inner)") (RequiredNamespaceImport) (MethodHeader . "FieldAccessException(string message, Exception inner)") (ReturnType) (Snippet . "FieldAccessException(${1:string message}, ${2:Exception inner})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "FieldAttributes") (Description . "") (DisplayText . "FieldAttributes") (RequiredNamespaceImport) (MethodHeader . "FieldAttributes") (ReturnType) (Snippet . "FieldAttributes$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "FinishDataUpdate") (Description . "") (DisplayText . "FinishDataUpdate()") (RequiredNamespaceImport) (MethodHeader . "FinishDataUpdate()") (ReturnType . "void") (Snippet . "FinishDataUpdate();$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "FLSDataObjectsBase") (Description . "") (DisplayText . "FLSDataObjectsBase") (RequiredNamespaceImport) (MethodHeader . "FLSDataObjectsBase") (ReturnType) (Snippet . "FLSDataObjectsBase$0") (Kind . "Namespace") (IsSuggestionMode . :json-false)) ((CompletionText . "FLSDateEdit") (Description . "TODO: Update summary.
") (DisplayText . "FLSDateEdit") (RequiredNamespaceImport) (MethodHeader . "FLSDateEdit") (ReturnType) (Snippet . "FLSDateEdit$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "FLSDateEdit") (Description . "") (DisplayText . "FLSDateEdit()") (RequiredNamespaceImport) (MethodHeader . "FLSDateEdit()") (ReturnType) (Snippet . "FLSDateEdit()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "FormatControlMetaData") (Description . "") (DisplayText . "FormatControlMetaData") (RequiredNamespaceImport) (MethodHeader . "FormatControlMetaData") (ReturnType) (Snippet . "FormatControlMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "FormatControlMetaData") (Description . "") (DisplayText . "FormatControlMetaData()") (RequiredNamespaceImport) (MethodHeader . "FormatControlMetaData()") (ReturnType) (Snippet . "FormatControlMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "FormElementsFromMetaData") (Description . "") (DisplayText . "FormElementsFromMetaData(ClientFormMetaData metaData)") (RequiredNamespaceImport) (MethodHeader . "FormElementsFromMetaData(ClientFormMetaData metaData)") (ReturnType . "void") (Snippet . "FormElementsFromMetaData(${1:ClientFormMetaData metaData});$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "FromMetaData") (Description . "Creates a client base form view model from meta data. 

metaData: The form meta data. 
tables: The known tables. 
Returns: A view model or null. ") (DisplayText . "FromMetaData(ClientFormMetaData metaData, ObservableList<IList<DProperty>> tables)") (RequiredNamespaceImport) (MethodHeader . "FromMetaData(ClientFormMetaData metaData, ObservableList<IList<DProperty>> tables)") (ReturnType . "ClientBaseFormViewModel") (Snippet . "FromMetaData(${1:ClientFormMetaData metaData}, ${2:ObservableList<IList<DProperty>> tables})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "FromMetaData") (Description . "Creates a client base form view model from meta data. 

metaData: The form meta data. 
tables: The known tables. 
Returns: A view model or null. ") (DisplayText . "FromMetaData(ClientFormMetaData metaData, ObservableList<IList<DProperty>> tables, VisiTourClientViewModel motherViewModel = null)") (RequiredNamespaceImport) (MethodHeader . "FromMetaData(ClientFormMetaData metaData, ObservableList<IList<DProperty>> tables, VisiTourClientViewModel motherViewModel = null)") (ReturnType . "ClientBaseFormViewModel") (Snippet . "FromMetaData(${1:ClientFormMetaData metaData}, ${2:ObservableList<IList<DProperty>> tables}, ${3:VisiTourClientViewModel motherViewModel = null})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "GetDataSource") (Description . "") (DisplayText . "GetDataSource(string name)") (RequiredNamespaceImport) (MethodHeader . "GetDataSource(string name)") (ReturnType . "object") (Snippet . "GetDataSource(${1:string name})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "GetFormItemsByDataContext") (Description . "") (DisplayText . "GetFormItemsByDataContext(eControlType dataContext)") (RequiredNamespaceImport) (MethodHeader . "GetFormItemsByDataContext(eControlType dataContext)") (ReturnType . "List<INameViewModel>") (Snippet . "GetFormItemsByDataContext(${1:eControlType dataContext})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "GlobalFiltersChangedArgs") (Description . "") (DisplayText . "GlobalFiltersChangedArgs") (RequiredNamespaceImport) (MethodHeader . "GlobalFiltersChangedArgs") (ReturnType) (Snippet . "GlobalFiltersChangedArgs$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "GlobalFiltersChangedArgs") (Description . "") (DisplayText . "GlobalFiltersChangedArgs(GlobalFilters globalFilter)") (RequiredNamespaceImport) (MethodHeader . "GlobalFiltersChangedArgs(GlobalFilters globalFilter)") (ReturnType) (Snippet . "GlobalFiltersChangedArgs(${1:GlobalFilters globalFilter})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "GlobalFilterSourceChangedArgs") (Description . "") (DisplayText . "GlobalFilterSourceChangedArgs") (RequiredNamespaceImport) (MethodHeader . "GlobalFilterSourceChangedArgs") (ReturnType) (Snippet . "GlobalFilterSourceChangedArgs$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "GlobalFilterSourceChangedArgs") (Description . "") (DisplayText . "GlobalFilterSourceChangedArgs()") (RequiredNamespaceImport) (MethodHeader . "GlobalFilterSourceChangedArgs()") (ReturnType) (Snippet . "GlobalFilterSourceChangedArgs()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "HandleTimeZoneSelectionUpdate") (Description . "") (DisplayText . "HandleTimeZoneSelectionUpdate(object sender, SelectedTimeZoneChangedEventArgs args)") (RequiredNamespaceImport) (MethodHeader . "HandleTimeZoneSelectionUpdate(object sender, SelectedTimeZoneChangedEventArgs args)") (ReturnType . "void") (Snippet . "HandleTimeZoneSelectionUpdate(${1:object sender}, ${2:SelectedTimeZoneChangedEventArgs args});$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "HasExternalChangedFormData") (Description . "") (DisplayText . "HasExternalChangedFormData(Guid testInstance)") (RequiredNamespaceImport) (MethodHeader . "HasExternalChangedFormData(Guid testInstance)") (ReturnType . "ModificationTestAutoRefreshStatus") (Snippet . "HasExternalChangedFormData(${1:Guid testInstance})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "IAuthentificateData") (Description . "") (DisplayText . "IAuthentificateData") (RequiredNamespaceImport) (MethodHeader . "IAuthentificateData") (ReturnType) (Snippet . "IAuthentificateData$0") (Kind . "Interface") (IsSuggestionMode . :json-false)) ((CompletionText . "IDataErrorInfo") (Description . "") (DisplayText . "IDataErrorInfo") (RequiredNamespaceImport) (MethodHeader . "IDataErrorInfo") (ReturnType) (Snippet . "IDataErrorInfo$0") (Kind . "Interface") (IsSuggestionMode . :json-false)) ((CompletionText . "IDataSourceProvider") (Description . "") (DisplayText . "IDataSourceProvider") (RequiredNamespaceImport) (MethodHeader . "IDataSourceProvider") (ReturnType) (Snippet . "IDataSourceProvider$0") (Kind . "Interface") (IsSuggestionMode . :json-false)) ((CompletionText . "IDataTableSourceViewModel") (Description . "") (DisplayText . "IDataTableSourceViewModel") (RequiredNamespaceImport) (MethodHeader . "IDataTableSourceViewModel") (ReturnType) (Snippet . "IDataTableSourceViewModel$0") (Kind . "Interface") (IsSuggestionMode . :json-false)) ((CompletionText . "IDateTimeInputViewModel") (Description . "Implements an interface for date time object which may use only date or only time or both or nothing.
") (DisplayText . "IDateTimeInputViewModel") (RequiredNamespaceImport) (MethodHeader . "IDateTimeInputViewModel") (ReturnType) (Snippet . "IDateTimeInputViewModel$0") (Kind . "Interface") (IsSuggestionMode . :json-false)) ((CompletionText . "IDEntityDataBase") (Description . "") (DisplayText . "IDEntityDataBase") (RequiredNamespaceImport) (MethodHeader . "IDEntityDataBase") (ReturnType) (Snippet . "IDEntityDataBase$0") (Kind . "Interface") (IsSuggestionMode . :json-false)) ((CompletionText . "IEntityValidation") (Description . "Interface for DODataSource validators
") (DisplayText . "IEntityValidation") (RequiredNamespaceImport) (MethodHeader . "IEntityValidation") (ReturnType) (Snippet . "IEntityValidation$0") (Kind . "Interface") (IsSuggestionMode . :json-false)) ((CompletionText . "ILookUpDataGetter") (Description . "An interface for look up data getter.
") (DisplayText . "ILookUpDataGetter") (RequiredNamespaceImport) (MethodHeader . "ILookUpDataGetter") (ReturnType) (Snippet . "ILookUpDataGetter$0") (Kind . "Interface") (IsSuggestionMode . :json-false)) ((CompletionText . "ILookUpDataManager") (Description . "") (DisplayText . "ILookUpDataManager") (RequiredNamespaceImport) (MethodHeader . "ILookUpDataManager") (ReturnType) (Snippet . "ILookUpDataManager$0") (Kind . "Interface") (IsSuggestionMode . :json-false)) ((CompletionText . "IMaxMinDateTime") (Description . "Implements an interface for minimum and maximum date time classes.
") (DisplayText . "IMaxMinDateTime") (RequiredNamespaceImport) (MethodHeader . "IMaxMinDateTime") (ReturnType) (Snippet . "IMaxMinDateTime$0") (Kind . "Interface") (IsSuggestionMode . :json-false)) ((CompletionText . "inBindingsourceUpdate") (Description . "") (DisplayText . "inBindingsourceUpdate") (RequiredNamespaceImport) (MethodHeader . "inBindingsourceUpdate") (ReturnType . "bool") (Snippet . "inBindingsourceUpdate$0") (Kind . "Field") (IsSuggestionMode . :json-false)) ((CompletionText . "InitDataSources") (Description . "") (DisplayText . "InitDataSources(IEnumerable<BindingSourceMetaData> metaSources)") (RequiredNamespaceImport) (MethodHeader . "InitDataSources(IEnumerable<BindingSourceMetaData> metaSources)") (ReturnType . "void") (Snippet . "InitDataSources(${1:IEnumerable<BindingSourceMetaData> metaSources});$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "InitTimeManagerFromMetaData") (Description . "") (DisplayText . "InitTimeManagerFromMetaData(ClientFormMetaData metaData)") (RequiredNamespaceImport) (MethodHeader . "InitTimeManagerFromMetaData(ClientFormMetaData metaData)") (ReturnType . "void") (Snippet . "InitTimeManagerFromMetaData(${1:ClientFormMetaData metaData});$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "INotifyDataErrorInfo") (Description . "") (DisplayText . "INotifyDataErrorInfo") (RequiredNamespaceImport) (MethodHeader . "INotifyDataErrorInfo") (ReturnType) (Snippet . "INotifyDataErrorInfo$0") (Kind . "Interface") (IsSuggestionMode . :json-false)) ((CompletionText . "InvalidAsynchronousStateException") (Description . "") (DisplayText . "InvalidAsynchronousStateException") (RequiredNamespaceImport) (MethodHeader . "InvalidAsynchronousStateException") (ReturnType) (Snippet . "InvalidAsynchronousStateException$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "InvalidAsynchronousStateException") (Description . "") (DisplayText . "InvalidAsynchronousStateException()") (RequiredNamespaceImport) (MethodHeader . "InvalidAsynchronousStateException()") (ReturnType) (Snippet . "InvalidAsynchronousStateException()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "InvalidAsynchronousStateException") (Description . "") (DisplayText . "InvalidAsynchronousStateException(SerializationInfo info, StreamingContext context)") (RequiredNamespaceImport) (MethodHeader . "InvalidAsynchronousStateException(SerializationInfo info, StreamingContext context)") (ReturnType) (Snippet . "InvalidAsynchronousStateException(${1:SerializationInfo info}, ${2:StreamingContext context})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "InvalidAsynchronousStateException") (Description . "") (DisplayText . "InvalidAsynchronousStateException(string message)") (RequiredNamespaceImport) (MethodHeader . "InvalidAsynchronousStateException(string message)") (ReturnType) (Snippet . "InvalidAsynchronousStateException(${1:string message})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "InvalidAsynchronousStateException") (Description . "") (DisplayText . "InvalidAsynchronousStateException(string message, Exception innerException)") (RequiredNamespaceImport) (MethodHeader . "InvalidAsynchronousStateException(string message, Exception innerException)") (ReturnType) (Snippet . "InvalidAsynchronousStateException(${1:string message}, ${2:Exception innerException})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "InvalidDataException") (Description . "") (DisplayText . "InvalidDataException") (RequiredNamespaceImport) (MethodHeader . "InvalidDataException") (ReturnType) (Snippet . "InvalidDataException$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "InvalidDataException") (Description . "") (DisplayText . "InvalidDataException()") (RequiredNamespaceImport) (MethodHeader . "InvalidDataException()") (ReturnType) (Snippet . "InvalidDataException()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "InvalidDataException") (Description . "") (DisplayText . "InvalidDataException(string message)") (RequiredNamespaceImport) (MethodHeader . "InvalidDataException(string message)") (ReturnType) (Snippet . "InvalidDataException(${1:string message})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "InvalidDataException") (Description . "") (DisplayText . "InvalidDataException(string message, Exception innerException)") (RequiredNamespaceImport) (MethodHeader . "InvalidDataException(string message, Exception innerException)") (ReturnType) (Snippet . "InvalidDataException(${1:string message}, ${2:Exception innerException})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "IProvideToday") (Description . "") (DisplayText . "IProvideToday") (RequiredNamespaceImport) (MethodHeader . "IProvideToday") (ReturnType) (Snippet . "IProvideToday$0") (Kind . "Interface") (IsSuggestionMode . :json-false)) ((CompletionText . "ISearchLookUpData") (Description . "") (DisplayText . "ISearchLookUpData") (RequiredNamespaceImport) (MethodHeader . "ISearchLookUpData") (ReturnType) (Snippet . "ISearchLookUpData$0") (Kind . "Interface") (IsSuggestionMode . :json-false)) ((CompletionText . "IsInUpdateFilterSelection") (Description . "") (DisplayText . "IsInUpdateFilterSelection") (RequiredNamespaceImport) (MethodHeader . "IsInUpdateFilterSelection") (ReturnType . "SafeAccess") (Snippet . "IsInUpdateFilterSelection$0") (Kind . "Field") (IsSuggestionMode . :json-false)) ((CompletionText . "IsLoadedAndDirty") (Description . "") (DisplayText . "IsLoadedAndDirty(DOBindingSource targetsource, object id)") (RequiredNamespaceImport) (MethodHeader . "IsLoadedAndDirty(DOBindingSource targetsource, object id)") (ReturnType . "bool") (Snippet . "IsLoadedAndDirty(${1:DOBindingSource targetsource}, ${2:object id})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ITempDataModel") (Description . "") (DisplayText . "ITempDataModel") (RequiredNamespaceImport) (MethodHeader . "ITempDataModel") (ReturnType) (Snippet . "ITempDataModel$0") (Kind . "Interface") (IsSuggestionMode . :json-false)) ((CompletionText . "IValidatable") (Description . "Implements an interface for 
") (DisplayText . "IValidatable") (RequiredNamespaceImport) (MethodHeader . "IValidatable") (ReturnType) (Snippet . "IValidatable$0") (Kind . "Interface") (IsSuggestionMode . :json-false)) ((CompletionText . "IValidatableValue") (Description . "Implements an interface for validating values.
The type of the valid value.") (DisplayText . "IValidatableValue<T>") (RequiredNamespaceImport) (MethodHeader . "IValidatableValue<T>") (ReturnType) (Snippet . "IValidatableValue<${1:T}>$0") (Kind . "Interface") (IsSuggestionMode . :json-false)) ((CompletionText . "IValidationRule") (Description . "Implements an interface for validation rules.
The type of the value which is validated with these rules.") (DisplayText . "IValidationRule<T>") (RequiredNamespaceImport) (MethodHeader . "IValidationRule<T>") (ReturnType) (Snippet . "IValidationRule<${1:T}>$0") (Kind . "Interface") (IsSuggestionMode . :json-false)) ((CompletionText . "LayoutDbData") (Description . "") (DisplayText . "LayoutDbData") (RequiredNamespaceImport) (MethodHeader . "LayoutDbData") (ReturnType) (Snippet . "LayoutDbData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "LayoutDbData") (Description . "") (DisplayText . "LayoutDbData(DOClientLayout data)") (RequiredNamespaceImport) (MethodHeader . "LayoutDbData(DOClientLayout data)") (ReturnType) (Snippet . "LayoutDbData(${1:DOClientLayout data})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "LayoutMetaData") (Description . "Implements a model for meta data of forms.
") (DisplayText . "LayoutMetaData") (RequiredNamespaceImport) (MethodHeader . "LayoutMetaData") (ReturnType) (Snippet . "LayoutMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "LayoutMetaData") (Description . "") (DisplayText . "LayoutMetaData()") (RequiredNamespaceImport) (MethodHeader . "LayoutMetaData()") (ReturnType) (Snippet . "LayoutMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "LdapStyleUriParser") (Description . "") (DisplayText . "LdapStyleUriParser") (RequiredNamespaceImport) (MethodHeader . "LdapStyleUriParser") (ReturnType) (Snippet . "LdapStyleUriParser$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "LdapStyleUriParser") (Description . "") (DisplayText . "LdapStyleUriParser()") (RequiredNamespaceImport) (MethodHeader . "LdapStyleUriParser()") (ReturnType) (Snippet . "LdapStyleUriParser()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "LinkedPropertiesFromMetaData") (Description . "") (DisplayText . "LinkedPropertiesFromMetaData(ClientFormMetaData metaData)") (RequiredNamespaceImport) (MethodHeader . "LinkedPropertiesFromMetaData(ClientFormMetaData metaData)") (ReturnType . "void") (Snippet . "LinkedPropertiesFromMetaData(${1:ClientFormMetaData metaData});$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "LinkMetaData") (Description . "Implements a model for link data.
") (DisplayText . "LinkMetaData") (RequiredNamespaceImport) (MethodHeader . "LinkMetaData") (ReturnType) (Snippet . "LinkMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "LinkMetaData") (Description . "Initializes a new instance of the Fls.VisiTourClient.MetaData.LinkMetaData class.
") (DisplayText . "LinkMetaData()") (RequiredNamespaceImport) (MethodHeader . "LinkMetaData()") (ReturnType) (Snippet . "LinkMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ListBindableAttribute") (Description . "") (DisplayText . "ListBindableAttribute") (RequiredNamespaceImport) (MethodHeader . "ListBindableAttribute") (ReturnType) (Snippet . "ListBindableAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ListBindableAttribute") (Description . "") (DisplayText . "ListBindableAttribute(BindableSupport flags)") (RequiredNamespaceImport) (MethodHeader . "ListBindableAttribute(BindableSupport flags)") (ReturnType) (Snippet . "ListBindableAttribute(${1:BindableSupport flags})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ListBindableAttribute") (Description . "") (DisplayText . "ListBindableAttribute(bool listBindable)") (RequiredNamespaceImport) (MethodHeader . "ListBindableAttribute(bool listBindable)") (ReturnType) (Snippet . "ListBindableAttribute(${1:bool listBindable})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "LocalDataStoreSlot") (Description . "") (DisplayText . "LocalDataStoreSlot") (RequiredNamespaceImport) (MethodHeader . "LocalDataStoreSlot") (ReturnType) (Snippet . "LocalDataStoreSlot$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "LocalizedNameCtrlMetaData") (Description . "") (DisplayText . "LocalizedNameCtrlMetaData") (RequiredNamespaceImport) (MethodHeader . "LocalizedNameCtrlMetaData") (ReturnType) (Snippet . "LocalizedNameCtrlMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "LocalizedNameCtrlMetaData") (Description . "") (DisplayText . "LocalizedNameCtrlMetaData()") (RequiredNamespaceImport) (MethodHeader . "LocalizedNameCtrlMetaData()") (ReturnType) (Snippet . "LocalizedNameCtrlMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "LoginData") (Description . "") (DisplayText . "LoginData") (RequiredNamespaceImport) (MethodHeader . "LoginData") (ReturnType) (Snippet . "LoginData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "LoginData") (Description . "") (DisplayText . "LoginData()") (RequiredNamespaceImport) (MethodHeader . "LoginData()") (ReturnType) (Snippet . "LoginData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "LookUpDataEntry") (Description . "") (DisplayText . "LookUpDataEntry") (RequiredNamespaceImport) (MethodHeader . "LookUpDataEntry") (ReturnType) (Snippet . "LookUpDataEntry$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "LookUpDataEntry") (Description . "") (DisplayText . "LookUpDataEntry()") (RequiredNamespaceImport) (MethodHeader . "LookUpDataEntry()") (ReturnType) (Snippet . "LookUpDataEntry()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "LookUpDataGetter") (Description . "Implements a lookup value getter.
") (DisplayText . "LookUpDataGetter") (RequiredNamespaceImport) (MethodHeader . "LookUpDataGetter") (ReturnType) (Snippet . "LookUpDataGetter$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "LookUpDataGetter") (Description . "Initializes a new instance of the Fls.VisiTour.Client3.RuntimeDataBuilder.LookUpDataGetter class. 

entityName: The entity name.
loadData: The action to fill up the lookup data.") (DisplayText . "LookUpDataGetter(string entityName, Action<string, ConcurrentDictionary<string, byte>, ConcurrentDictionary<IComparable, byte>, ConcurrentDictionary<IComparable, object>, ConcurrentDictionary<string, TempLookUpDataModel>> loadData)") (RequiredNamespaceImport) (MethodHeader . "LookUpDataGetter(string entityName, Action<string, ConcurrentDictionary<string, byte>, ConcurrentDictionary<IComparable, byte>, ConcurrentDictionary<IComparable, object>, ConcurrentDictionary<string, TempLookUpDataModel>> loadData)") (ReturnType) (Snippet . "LookUpDataGetter(${1:string entityName}, ${2:Action<string, ConcurrentDictionary<string, byte>, ConcurrentDictionary<IComparable, byte>, ConcurrentDictionary<IComparable, object>, ConcurrentDictionary<string, TempLookUpDataModel>> loadData})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "LookUpDataList") (Description . "Implements a look up data list. 
") (DisplayText . "LookUpDataList") (RequiredNamespaceImport) (MethodHeader . "LookUpDataList") (ReturnType) (Snippet . "LookUpDataList$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "LookUpDataList") (Description . "Initializes a new instance of the LookUpDataList class. 

repo: The data repository. 
loadDataAction: The load data method. ") (DisplayText . "LookUpDataList(IDOBaseRepository repo, Action<string, ConcurrentDictionary<string, byte>, ConcurrentDictionary<IComparable, byte>, ConcurrentDictionary<IComparable, object>, ConcurrentDictionary<string, TempLookUpDataModel>> loadDataAction)") (RequiredNamespaceImport) (MethodHeader . "LookUpDataList(IDOBaseRepository repo, Action<string, ConcurrentDictionary<string, byte>, ConcurrentDictionary<IComparable, byte>, ConcurrentDictionary<IComparable, object>, ConcurrentDictionary<string, TempLookUpDataModel>> loadDataAction)") (ReturnType) (Snippet . "LookUpDataList(${1:IDOBaseRepository repo}, ${2:Action<string, ConcurrentDictionary<string, byte>, ConcurrentDictionary<IComparable, byte>, ConcurrentDictionary<IComparable, object>, ConcurrentDictionary<string, TempLookUpDataModel>> loadDataAction})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "MasterDataLogViewModel") (Description . "") (DisplayText . "MasterDataLogViewModel") (RequiredNamespaceImport) (MethodHeader . "MasterDataLogViewModel") (ReturnType) (Snippet . "MasterDataLogViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "MasterDataLogViewModel") (Description . "") (DisplayText . "MasterDataLogViewModel()") (RequiredNamespaceImport) (MethodHeader . "MasterDataLogViewModel()") (ReturnType) (Snippet . "MasterDataLogViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "MetaData") (Description . "") (DisplayText . "MetaData") (RequiredNamespaceImport) (MethodHeader . "MetaData") (ReturnType) (Snippet . "MetaData$0") (Kind . "Namespace") (IsSuggestionMode . :json-false)) ((CompletionText . "MethodAccessException") (Description . "") (DisplayText . "MethodAccessException") (RequiredNamespaceImport) (MethodHeader . "MethodAccessException") (ReturnType) (Snippet . "MethodAccessException$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "MethodAccessException") (Description . "") (DisplayText . "MethodAccessException()") (RequiredNamespaceImport) (MethodHeader . "MethodAccessException()") (ReturnType) (Snippet . "MethodAccessException()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "MethodAccessException") (Description . "") (DisplayText . "MethodAccessException(SerializationInfo info, StreamingContext context)") (RequiredNamespaceImport) (MethodHeader . "MethodAccessException(SerializationInfo info, StreamingContext context)") (ReturnType) (Snippet . "MethodAccessException(${1:SerializationInfo info}, ${2:StreamingContext context})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "MethodAccessException") (Description . "") (DisplayText . "MethodAccessException(string message)") (RequiredNamespaceImport) (MethodHeader . "MethodAccessException(string message)") (ReturnType) (Snippet . "MethodAccessException(${1:string message})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "MethodAccessException") (Description . "") (DisplayText . "MethodAccessException(string message, Exception inner)") (RequiredNamespaceImport) (MethodHeader . "MethodAccessException(string message, Exception inner)") (ReturnType) (Snippet . "MethodAccessException(${1:string message}, ${2:Exception inner})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "MethodAttributes") (Description . "") (DisplayText . "MethodAttributes") (RequiredNamespaceImport) (MethodHeader . "MethodAttributes") (ReturnType) (Snippet . "MethodAttributes$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "MTAThreadAttribute") (Description . "") (DisplayText . "MTAThreadAttribute") (RequiredNamespaceImport) (MethodHeader . "MTAThreadAttribute") (ReturnType) (Snippet . "MTAThreadAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "MTAThreadAttribute") (Description . "") (DisplayText . "MTAThreadAttribute()") (RequiredNamespaceImport) (MethodHeader . "MTAThreadAttribute()") (ReturnType) (Snippet . "MTAThreadAttribute()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "myDataLoadingStatus") (Description . "") (DisplayText . "myDataLoadingStatus") (RequiredNamespaceImport) (MethodHeader . "myDataLoadingStatus") (ReturnType . "LoadingStatus") (Snippet . "myDataLoadingStatus$0") (Kind . "Field") (IsSuggestionMode . :json-false)) ((CompletionText . "myRequestDatasourcesCommand") (Description . "") (DisplayText . "myRequestDatasourcesCommand") (RequiredNamespaceImport) (MethodHeader . "myRequestDatasourcesCommand") (ReturnType . "ICommand") (Snippet . "myRequestDatasourcesCommand$0") (Kind . "Field") (IsSuggestionMode . :json-false)) ((CompletionText . "mySelectedAutoRefreshCountdownTimeSpan") (Description . "") (DisplayText . "mySelectedAutoRefreshCountdownTimeSpan") (RequiredNamespaceImport) (MethodHeader . "mySelectedAutoRefreshCountdownTimeSpan") (ReturnType . "IUIInputAttributes<AutoRefreshCountdownTimeSpan>") (Snippet . "mySelectedAutoRefreshCountdownTimeSpan$0") (Kind . "Field") (IsSuggestionMode . :json-false)) ((CompletionText . "NavBarGroupMetaData") (Description . "Implements a model for 
") (DisplayText . "NavBarGroupMetaData") (RequiredNamespaceImport) (MethodHeader . "NavBarGroupMetaData") (ReturnType) (Snippet . "NavBarGroupMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "NavBarGroupMetaData") (Description . "Initializes a new instance of the Fls.VisiTourClient.MetaData.NavBarGroupMetaData class.
") (DisplayText . "NavBarGroupMetaData(string name, string toolTip, string defaultEntry, bool isExpanded)") (RequiredNamespaceImport) (MethodHeader . "NavBarGroupMetaData(string name, string toolTip, string defaultEntry, bool isExpanded)") (ReturnType) (Snippet . "NavBarGroupMetaData(${1:string name}, ${2:string toolTip}, ${3:string defaultEntry}, ${4:bool isExpanded})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "NonSerializedAttribute") (Description . "") (DisplayText . "NonSerializedAttribute") (RequiredNamespaceImport) (MethodHeader . "NonSerializedAttribute") (ReturnType) (Snippet . "NonSerializedAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "NonSerializedAttribute") (Description . "") (DisplayText . "NonSerializedAttribute()") (RequiredNamespaceImport) (MethodHeader . "NonSerializedAttribute()") (ReturnType) (Snippet . "NonSerializedAttribute()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "NotifyCollectionChangedAction") (Description . "") (DisplayText . "NotifyCollectionChangedAction") (RequiredNamespaceImport) (MethodHeader . "NotifyCollectionChangedAction") (ReturnType) (Snippet . "NotifyCollectionChangedAction$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "ObjectDataCtrlMetaData") (Description . "") (DisplayText . "ObjectDataCtrlMetaData") (RequiredNamespaceImport) (MethodHeader . "ObjectDataCtrlMetaData") (ReturnType) (Snippet . "ObjectDataCtrlMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ObjectDataCtrlMetaData") (Description . "") (DisplayText . "ObjectDataCtrlMetaData()") (RequiredNamespaceImport) (MethodHeader . "ObjectDataCtrlMetaData()") (ReturnType) (Snippet . "ObjectDataCtrlMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ObjectDataCtrlType") (Description . "") (DisplayText . "ObjectDataCtrlType") (RequiredNamespaceImport) (MethodHeader . "ObjectDataCtrlType") (ReturnType) (Snippet . "ObjectDataCtrlType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ObjectDataCtrlType") (Description . "") (DisplayText . "ObjectDataCtrlType()") (RequiredNamespaceImport) (MethodHeader . "ObjectDataCtrlType()") (ReturnType) (Snippet . "ObjectDataCtrlType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ObjectDataView") (Description . "") (DisplayText . "ObjectDataView") (RequiredNamespaceImport) (MethodHeader . "ObjectDataView") (ReturnType) (Snippet . "ObjectDataView$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ObjectDataView") (Description . "") (DisplayText . "ObjectDataView()") (RequiredNamespaceImport) (MethodHeader . "ObjectDataView()") (ReturnType) (Snippet . "ObjectDataView()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ObjectDataView") (Description . "") (DisplayText . "ObjectDataView(ObjectDataViewModel vm, Func<INameViewModel, Control> convert)") (RequiredNamespaceImport) (MethodHeader . "ObjectDataView(ObjectDataViewModel vm, Func<INameViewModel, Control> convert)") (ReturnType) (Snippet . "ObjectDataView(${1:ObjectDataViewModel vm}, ${2:Func<INameViewModel, Control> convert})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ObjectDataViewModel") (Description . "") (DisplayText . "ObjectDataViewModel") (RequiredNamespaceImport) (MethodHeader . "ObjectDataViewModel") (ReturnType) (Snippet . "ObjectDataViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ObjectDataViewModel") (Description . "") (DisplayText . "ObjectDataViewModel()") (RequiredNamespaceImport) (MethodHeader . "ObjectDataViewModel()") (ReturnType) (Snippet . "ObjectDataViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "OnDataDependency") (Description . "") (DisplayText . "OnDataDependency(DataDependencyEventArgs args)") (RequiredNamespaceImport) (MethodHeader . "OnDataDependency(DataDependencyEventArgs args)") (ReturnType . "void") (Snippet . "OnDataDependency(${1:DataDependencyEventArgs args});$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "OneToManyMetaData") (Description . "") (DisplayText . "OneToManyMetaData") (RequiredNamespaceImport) (MethodHeader . "OneToManyMetaData") (ReturnType) (Snippet . "OneToManyMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "OneToManyMetaData") (Description . "") (DisplayText . "OneToManyMetaData()") (RequiredNamespaceImport) (MethodHeader . "OneToManyMetaData()") (ReturnType) (Snippet . "OneToManyMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "OneWayBindingConditionData") (Description . "") (DisplayText . "OneWayBindingConditionData") (RequiredNamespaceImport) (MethodHeader . "OneWayBindingConditionData") (ReturnType) (Snippet . "OneWayBindingConditionData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "OneWayBindingConditionData") (Description . "") (DisplayText . "OneWayBindingConditionData()") (RequiredNamespaceImport) (MethodHeader . "OneWayBindingConditionData()") (ReturnType) (Snippet . "OneWayBindingConditionData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "OutputDateFrameSelectionType") (Description . "") (DisplayText . "OutputDateFrameSelectionType") (RequiredNamespaceImport) (MethodHeader . "OutputDateFrameSelectionType") (ReturnType) (Snippet . "OutputDateFrameSelectionType$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "ProcessData") (Description . "") (DisplayText . "ProcessData") (RequiredNamespaceImport) (MethodHeader . "ProcessData") (ReturnType) (Snippet . "ProcessData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ProcessData") (Description . "") (DisplayText . "ProcessData()") (RequiredNamespaceImport) (MethodHeader . "ProcessData()") (ReturnType) (Snippet . "ProcessData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "PropertyChangedArgsExtension") (Description . "Implements a model for an extended PropertyChangeArguments which includes old and new value.
") (DisplayText . "PropertyChangedArgsExtension") (RequiredNamespaceImport) (MethodHeader . "PropertyChangedArgsExtension") (ReturnType) (Snippet . "PropertyChangedArgsExtension$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "PropertyChangedArgsExtension") (Description . "Initializes a new instance of the Fls.Base.PropertyChangedArgsExtension class.

name: The properties name.") (DisplayText . "PropertyChangedArgsExtension(string name)") (RequiredNamespaceImport) (MethodHeader . "PropertyChangedArgsExtension(string name)") (ReturnType) (Snippet . "PropertyChangedArgsExtension(${1:string name})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "PropertyChangedArgsExtension") (Description . "Initializes a new instance of the Fls.Base.PropertyChangedArgsExtension class.

name: The properties name.
oldValue: The properties old value.
newValue: The properties new value.") (DisplayText . "PropertyChangedArgsExtension(string name, object oldValue, object newValue)") (RequiredNamespaceImport) (MethodHeader . "PropertyChangedArgsExtension(string name, object oldValue, object newValue)") (ReturnType) (Snippet . "PropertyChangedArgsExtension(${1:string name}, ${2:object oldValue}, ${3:object newValue})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "RecommendedAsConfigurableAttribute") (Description . "") (DisplayText . "RecommendedAsConfigurableAttribute") (RequiredNamespaceImport) (MethodHeader . "RecommendedAsConfigurableAttribute") (ReturnType) (Snippet . "RecommendedAsConfigurableAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "RecommendedAsConfigurableAttribute") (Description . "") (DisplayText . "RecommendedAsConfigurableAttribute(bool recommendedAsConfigurable)") (RequiredNamespaceImport) (MethodHeader . "RecommendedAsConfigurableAttribute(bool recommendedAsConfigurable)") (ReturnType) (Snippet . "RecommendedAsConfigurableAttribute(${1:bool recommendedAsConfigurable})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ReConvertDateTimesEventArgs") (Description . "") (DisplayText . "ReConvertDateTimesEventArgs") (RequiredNamespaceImport) (MethodHeader . "ReConvertDateTimesEventArgs") (ReturnType) (Snippet . "ReConvertDateTimesEventArgs$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ReConvertDateTimesEventArgs") (Description . "") (DisplayText . "ReConvertDateTimesEventArgs(ITimeConverter converter, IProvideToday dateForTimeOfDayConversion)") (RequiredNamespaceImport) (MethodHeader . "ReConvertDateTimesEventArgs(ITimeConverter converter, IProvideToday dateForTimeOfDayConversion)") (ReturnType) (Snippet . "ReConvertDateTimesEventArgs(${1:ITimeConverter converter}, ${2:IProvideToday dateForTimeOfDayConversion})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "RefreshMasterDataCommandExecute") (Description . "") (DisplayText . "RefreshMasterDataCommandExecute(Parameters parameters)") (RequiredNamespaceImport) (MethodHeader . "RefreshMasterDataCommandExecute(Parameters parameters)") (ReturnType . "void") (Snippet . "RefreshMasterDataCommandExecute(${1:Parameters parameters});$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "RegisterDataSourceAction") (Description . "") (DisplayText . "RegisterDataSourceAction()") (RequiredNamespaceImport) (MethodHeader . "RegisterDataSourceAction()") (ReturnType . "void") (Snippet . "RegisterDataSourceAction();$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ReloadableLookups") (Description . "Stores lookupBindingsources to reload on F5 (Key EntityName, Value the Bindingsource) 
") (DisplayText . "ReloadableLookups") (RequiredNamespaceImport) (MethodHeader . "ReloadableLookups") (ReturnType . "Dictionary<string, DOBindingSource>") (Snippet . "ReloadableLookups$0") (Kind . "Property") (IsSuggestionMode . :json-false)) ((CompletionText . "ReloadAllSources") (Description . "A property of view has changed, now check all conditions on every FormItem if it's dependent on that
property, and if so, evaluate the condition

source: the view that changed 
prop: the name of the property that changed 
data: the view.current as DOBase ") (DisplayText . "ReloadAllSources()") (RequiredNamespaceImport) (MethodHeader . "ReloadAllSources()") (ReturnType . "void") (Snippet . "ReloadAllSources();$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ReloadAllSourcesCommandExecute") (Description . "") (DisplayText . "ReloadAllSourcesCommandExecute(Parameters parameters)") (RequiredNamespaceImport) (MethodHeader . "ReloadAllSourcesCommandExecute(Parameters parameters)") (ReturnType . "void") (Snippet . "ReloadAllSourcesCommandExecute(${1:Parameters parameters});$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ReloadAllSourcesCommandId") (Description . "") (DisplayText . "ReloadAllSourcesCommandId") (RequiredNamespaceImport) (MethodHeader . "ReloadAllSourcesCommandId") (ReturnType . "string") (Snippet . "ReloadAllSourcesCommandId$0") (Kind . "Const") (IsSuggestionMode . :json-false)) ((CompletionText . "RepositoryItemDateEdit") (Description . "
A repository item storing settings specific to a DevExpress.XtraEditors.DateEdit control.") (DisplayText . "RepositoryItemDateEdit") (RequiredNamespaceImport) (MethodHeader . "RepositoryItemDateEdit") (ReturnType) (Snippet . "RepositoryItemDateEdit$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "RepositoryItemDateEdit") (Description . "
Initializes a new DevExpress.XtraEditors.Repository.RepositoryItemDateEdit class instance with default settings. ") (DisplayText . "RepositoryItemDateEdit()") (RequiredNamespaceImport) (MethodHeader . "RepositoryItemDateEdit()") (ReturnType) (Snippet . "RepositoryItemDateEdit()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "RepositoryItemFLSDateEdit") (Description . "TODO: Update summary.
") (DisplayText . "RepositoryItemFLSDateEdit") (RequiredNamespaceImport) (MethodHeader . "RepositoryItemFLSDateEdit") (ReturnType) (Snippet . "RepositoryItemFLSDateEdit$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "RepositoryItemFLSDateEdit") (Description . "") (DisplayText . "RepositoryItemFLSDateEdit()") (RequiredNamespaceImport) (MethodHeader . "RepositoryItemFLSDateEdit()") (ReturnType) (Snippet . "RepositoryItemFLSDateEdit()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "RequestDatasourcesCommand") (Description . "Gets or sets the RequestDatasourcesCommand as ICommand. 
") (DisplayText . "RequestDatasourcesCommand") (RequiredNamespaceImport) (MethodHeader . "RequestDatasourcesCommand") (ReturnType . "ICommand") (Snippet . "RequestDatasourcesCommand$0") (Kind . "Property") (IsSuggestionMode . :json-false)) ((CompletionText . "RequestDatasourcesCommandExecute") (Description . "") (DisplayText . "RequestDatasourcesCommandExecute(Parameters para)") (RequiredNamespaceImport) (MethodHeader . "RequestDatasourcesCommandExecute(Parameters para)") (ReturnType . "void") (Snippet . "RequestDatasourcesCommandExecute(${1:Parameters para});$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ResourceData") (Description . "Contains the resource data.
") (DisplayText . "ResourceData") (RequiredNamespaceImport) (MethodHeader . "ResourceData") (ReturnType) (Snippet . "ResourceData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ResourceData") (Description . "The resource data.

key: The resource key.
value: The resource grid view.") (DisplayText . "ResourceData(int key, string value)") (RequiredNamespaceImport) (MethodHeader . "ResourceData(int key, string value)") (ReturnType) (Snippet . "ResourceData(${1:int key}, ${2:string value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ResourceSchedulerDataModel") (Description . "Implements a class for a resource data model.
") (DisplayText . "ResourceSchedulerDataModel") (RequiredNamespaceImport) (MethodHeader . "ResourceSchedulerDataModel") (ReturnType) (Snippet . "ResourceSchedulerDataModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ResourceSchedulerDataModel") (Description . "") (DisplayText . "ResourceSchedulerDataModel(AppointmentSchedulerViewModel datamodel)") (RequiredNamespaceImport) (MethodHeader . "ResourceSchedulerDataModel(AppointmentSchedulerViewModel datamodel)") (ReturnType) (Snippet . "ResourceSchedulerDataModel(${1:AppointmentSchedulerViewModel datamodel})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ResourceSchedulerDateComparer") (Description . "Implements a model for 
") (DisplayText . "ResourceSchedulerDateComparer") (RequiredNamespaceImport) (MethodHeader . "ResourceSchedulerDateComparer") (ReturnType) (Snippet . "ResourceSchedulerDateComparer$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ResourceSchedulerDateComparer") (Description . "Initializes a new instance of the Fls.VisiTourClient.ViewModel.Scheduler.ResourceSchedulerDateComparer class. 
") (DisplayText . "ResourceSchedulerDateComparer()") (RequiredNamespaceImport) (MethodHeader . "ResourceSchedulerDateComparer()") (ReturnType) (Snippet . "ResourceSchedulerDateComparer()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "RibbonButtonGroupMetaData") (Description . "") (DisplayText . "RibbonButtonGroupMetaData") (RequiredNamespaceImport) (MethodHeader . "RibbonButtonGroupMetaData") (ReturnType) (Snippet . "RibbonButtonGroupMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "RibbonButtonGroupMetaData") (Description . "") (DisplayText . "RibbonButtonGroupMetaData()") (RequiredNamespaceImport) (MethodHeader . "RibbonButtonGroupMetaData()") (ReturnType) (Snippet . "RibbonButtonGroupMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "RibbonCategoryMetaData") (Description . "Implements a model for ribbon group meta data.
") (DisplayText . "RibbonCategoryMetaData") (RequiredNamespaceImport) (MethodHeader . "RibbonCategoryMetaData") (ReturnType) (Snippet . "RibbonCategoryMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "RibbonCategoryMetaData") (Description . "Initializes a new instance of the Fls.VisiTourClient.MetaData.RibbonGroupMetaData class.
") (DisplayText . "RibbonCategoryMetaData()") (RequiredNamespaceImport) (MethodHeader . "RibbonCategoryMetaData()") (ReturnType) (Snippet . "RibbonCategoryMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "RibbonFromMetaData") (Description . "") (DisplayText . "RibbonFromMetaData(ClientFormMetaData metaData)") (RequiredNamespaceImport) (MethodHeader . "RibbonFromMetaData(ClientFormMetaData metaData)") (ReturnType . "void") (Snippet . "RibbonFromMetaData(${1:ClientFormMetaData metaData});$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "RibbonGroupMetaData") (Description . "Implements a model for ribbon group meta data.
") (DisplayText . "RibbonGroupMetaData") (RequiredNamespaceImport) (MethodHeader . "RibbonGroupMetaData") (ReturnType) (Snippet . "RibbonGroupMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "RibbonGroupMetaData") (Description . "Initializes a new instance of the Fls.VisiTourClient.MetaData.RibbonGroupMetaData class.
") (DisplayText . "RibbonGroupMetaData()") (RequiredNamespaceImport) (MethodHeader . "RibbonGroupMetaData()") (ReturnType) (Snippet . "RibbonGroupMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "RibbonIconItemMetaData") (Description . "Implements a model for ribbon item with an icon.
") (DisplayText . "RibbonIconItemMetaData") (RequiredNamespaceImport) (MethodHeader . "RibbonIconItemMetaData") (ReturnType) (Snippet . "RibbonIconItemMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "RibbonIconItemMetaData") (Description . "Initializes a new instance of the Fls.VisiTourClient.MetaData.RibbonIconItemMetaData class.
") (DisplayText . "RibbonIconItemMetaData()") (RequiredNamespaceImport) (MethodHeader . "RibbonIconItemMetaData()") (ReturnType) (Snippet . "RibbonIconItemMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "RibbonItemsMetaData") (Description . "Implements a model for a ribbon item. 
") (DisplayText . "RibbonItemsMetaData") (RequiredNamespaceImport) (MethodHeader . "RibbonItemsMetaData") (ReturnType) (Snippet . "RibbonItemsMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "RibbonItemsMetaData") (Description . "Initializes a new instance of the Fls.VisiTourClient.MetaData.RibbonItemsMetaData class.
") (DisplayText . "RibbonItemsMetaData()") (RequiredNamespaceImport) (MethodHeader . "RibbonItemsMetaData()") (ReturnType) (Snippet . "RibbonItemsMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "RibbonItemsMetaDataToBarItemViewModel") (Description . "") (DisplayText . "RibbonItemsMetaDataToBarItemViewModel(string name, RibbonItemsMetaData metaData, ReadOnlyCollection<UIActionMetaData> commandActions)") (RequiredNamespaceImport) (MethodHeader . "RibbonItemsMetaDataToBarItemViewModel(string name, RibbonItemsMetaData metaData, ReadOnlyCollection<UIActionMetaData> commandActions)") (ReturnType . "BarItemViewModel") (Snippet . "RibbonItemsMetaDataToBarItemViewModel(${1:string name}, ${2:RibbonItemsMetaData metaData}, ${3:ReadOnlyCollection<UIActionMetaData> commandActions})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "RibbonPageMetaData") (Description . "Implements a model for ribbon group meta data.
") (DisplayText . "RibbonPageMetaData") (RequiredNamespaceImport) (MethodHeader . "RibbonPageMetaData") (ReturnType) (Snippet . "RibbonPageMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "RibbonPageMetaData") (Description . "Initializes a new instance of the Fls.VisiTourClient.MetaData.RibbonGroupMetaData class.
") (DisplayText . "RibbonPageMetaData()") (RequiredNamespaceImport) (MethodHeader . "RibbonPageMetaData()") (ReturnType) (Snippet . "RibbonPageMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "RibbonSubMenuItemMetadata") (Description . "Implements a model for ribbon or context menu items which have sub items.
") (DisplayText . "RibbonSubMenuItemMetadata") (RequiredNamespaceImport) (MethodHeader . "RibbonSubMenuItemMetadata") (ReturnType) (Snippet . "RibbonSubMenuItemMetadata$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "RibbonSubMenuItemMetadata") (Description . "Initializes a new instance of the Fls.VisiTourClient.MetaData.RibbonSubMenuItemMetadata class.
") (DisplayText . "RibbonSubMenuItemMetadata()") (RequiredNamespaceImport) (MethodHeader . "RibbonSubMenuItemMetadata()") (ReturnType) (Snippet . "RibbonSubMenuItemMetadata()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "RoleDependantRightsVMCache") (Description . "") (DisplayText . "RoleDependantRightsVMCache") (RequiredNamespaceImport) (MethodHeader . "RoleDependantRightsVMCache") (ReturnType) (Snippet . "RoleDependantRightsVMCache$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "RoleDependantRightsVMCache") (Description . "") (DisplayText . "RoleDependantRightsVMCache()") (RequiredNamespaceImport) (MethodHeader . "RoleDependantRightsVMCache()") (ReturnType) (Snippet . "RoleDependantRightsVMCache()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "RoleDependantRightsVMCacheEntry") (Description . "") (DisplayText . "RoleDependantRightsVMCacheEntry") (RequiredNamespaceImport) (MethodHeader . "RoleDependantRightsVMCacheEntry") (ReturnType) (Snippet . "RoleDependantRightsVMCacheEntry$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "RoleDependantRightsVMCacheEntry") (Description . "") (DisplayText . "RoleDependantRightsVMCacheEntry()") (RequiredNamespaceImport) (MethodHeader . "RoleDependantRightsVMCacheEntry()") (ReturnType) (Snippet . "RoleDependantRightsVMCacheEntry()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "RowMetaData") (Description . "") (DisplayText . "RowMetaData") (RequiredNamespaceImport) (MethodHeader . "RowMetaData") (ReturnType) (Snippet . "RowMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "RowMetaData") (Description . "") (DisplayText . "RowMetaData()") (RequiredNamespaceImport) (MethodHeader . "RowMetaData()") (ReturnType) (Snippet . "RowMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "RuntimeDataBuilder") (Description . "Implements static methods for the run time building of data. 
") (DisplayText . "RuntimeDataBuilder") (RequiredNamespaceImport) (MethodHeader . "RuntimeDataBuilder") (ReturnType) (Snippet . "RuntimeDataBuilder$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "SaveData") (Description . "") (DisplayText . "SaveData()") (RequiredNamespaceImport) (MethodHeader . "SaveData()") (ReturnType . "bool") (Snippet . "SaveData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ScheduleDataModel") (Description . "Implements a model for scheduler tourData. 
") (DisplayText . "ScheduleDataModel") (RequiredNamespaceImport) (MethodHeader . "ScheduleDataModel") (ReturnType) (Snippet . "ScheduleDataModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ScheduleDataModel") (Description . "") (DisplayText . "ScheduleDataModel(IDOBaseRepository repository, SchedulerItemLabelBuilders itemLabelBuilder, IRunTimeBuildingContext buildingContext)") (RequiredNamespaceImport) (MethodHeader . "ScheduleDataModel(IDOBaseRepository repository, SchedulerItemLabelBuilders itemLabelBuilder, IRunTimeBuildingContext buildingContext)") (ReturnType) (Snippet . "ScheduleDataModel(${1:IDOBaseRepository repository}, ${2:SchedulerItemLabelBuilders itemLabelBuilder}, ${3:IRunTimeBuildingContext buildingContext})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ScheduleDataModel") (Description . "Initializes a new instance of the Fls.VisiTourClient.ViewModel.Scheduler.ScheduleDataModel class. 

repository: The repository. ") (DisplayText . "ScheduleDataModel(IDOBaseRepository repository, SchedulerItemLabelBuilders itemLabelBuilder, IRunTimeBuildingContext buildingContext, EscalationFilterModel escalationFilterModel)") (RequiredNamespaceImport) (MethodHeader . "ScheduleDataModel(IDOBaseRepository repository, SchedulerItemLabelBuilders itemLabelBuilder, IRunTimeBuildingContext buildingContext, EscalationFilterModel escalationFilterModel)") (ReturnType) (Snippet . "ScheduleDataModel(${1:IDOBaseRepository repository}, ${2:SchedulerItemLabelBuilders itemLabelBuilder}, ${3:IRunTimeBuildingContext buildingContext}, ${4:EscalationFilterModel escalationFilterModel})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "SchedulerControlMetaData") (Description . "Implements a model for 
") (DisplayText . "SchedulerControlMetaData") (RequiredNamespaceImport) (MethodHeader . "SchedulerControlMetaData") (ReturnType) (Snippet . "SchedulerControlMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "SchedulerControlMetaData") (Description . "Initializes a new instance of the Fls.VisiTourClient.MetaData.SchedulerControlMetaData class.
") (DisplayText . "SchedulerControlMetaData()") (RequiredNamespaceImport) (MethodHeader . "SchedulerControlMetaData()") (ReturnType) (Snippet . "SchedulerControlMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "SchedulerViewDateTimeSlotModel") (Description . "Implements a model for scheduler view scheduleTable column header.
") (DisplayText . "SchedulerViewDateTimeSlotModel") (RequiredNamespaceImport) (MethodHeader . "SchedulerViewDateTimeSlotModel") (ReturnType) (Snippet . "SchedulerViewDateTimeSlotModel$0") (Kind . "Struct") (IsSuggestionMode . :json-false)) ((CompletionText . "SchedulerViewDateTimeSlotModel") (Description . "") (DisplayText . "SchedulerViewDateTimeSlotModel()") (RequiredNamespaceImport) (MethodHeader . "SchedulerViewDateTimeSlotModel()") (ReturnType) (Snippet . "SchedulerViewDateTimeSlotModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "SchedulerViewDateTimeSlotModel") (Description . "Initializes a new instance of the Fls.VisiTourClient.ViewModel.Scheduler.SchedulerViewDateTimeSlotModel struct.

slot: The date time slot.
isZombieTime: Indicates that slot is a zombie.
width: The slots width.") (DisplayText . "SchedulerViewDateTimeSlotModel(DateTimeSlot slot, bool isZombieTime, double width)") (RequiredNamespaceImport) (MethodHeader . "SchedulerViewDateTimeSlotModel(DateTimeSlot slot, bool isZombieTime, double width)") (ReturnType) (Snippet . "SchedulerViewDateTimeSlotModel(${1:DateTimeSlot slot}, ${2:bool isZombieTime}, ${3:double width})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "SearchLookUpData") (Description . "") (DisplayText . "SearchLookUpData") (RequiredNamespaceImport) (MethodHeader . "SearchLookUpData") (ReturnType) (Snippet . "SearchLookUpData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "SearchLookUpData") (Description . "") (DisplayText . "SearchLookUpData()") (RequiredNamespaceImport) (MethodHeader . "SearchLookUpData()") (ReturnType) (Snippet . "SearchLookUpData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "SearchResultDataOutputType") (Description . "") (DisplayText . "SearchResultDataOutputType") (RequiredNamespaceImport) (MethodHeader . "SearchResultDataOutputType") (ReturnType) (Snippet . "SearchResultDataOutputType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "SearchResultDataOutputType") (Description . "SearchResultDataOutputType class constructor
") (DisplayText . "SearchResultDataOutputType()") (RequiredNamespaceImport) (MethodHeader . "SearchResultDataOutputType()") (ReturnType) (Snippet . "SearchResultDataOutputType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "SelectedAutoRefreshCountdownTimeSpan") (Description . "") (DisplayText . "SelectedAutoRefreshCountdownTimeSpan") (RequiredNamespaceImport) (MethodHeader . "SelectedAutoRefreshCountdownTimeSpan") (ReturnType . "IUIInputAttributes<AutoRefreshCountdownTimeSpan>") (Snippet . "SelectedAutoRefreshCountdownTimeSpan$0") (Kind . "Property") (IsSuggestionMode . :json-false)) ((CompletionText . "SelectedAutoRefreshCountdownTimeSpanPropertyChangedHandler") (Description . "") (DisplayText . "SelectedAutoRefreshCountdownTimeSpanPropertyChangedHandler(object sender, PropertyChangedEventArgs e)") (RequiredNamespaceImport) (MethodHeader . "SelectedAutoRefreshCountdownTimeSpanPropertyChangedHandler(object sender, PropertyChangedEventArgs e)") (ReturnType . "void") (Snippet . "SelectedAutoRefreshCountdownTimeSpanPropertyChangedHandler(${1:object sender}, ${2:PropertyChangedEventArgs e});$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "SelectRefTablesCtrlMetaData") (Description . "") (DisplayText . "SelectRefTablesCtrlMetaData") (RequiredNamespaceImport) (MethodHeader . "SelectRefTablesCtrlMetaData") (ReturnType) (Snippet . "SelectRefTablesCtrlMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "SelectRefTablesCtrlMetaData") (Description . "") (DisplayText . "SelectRefTablesCtrlMetaData()") (RequiredNamespaceImport) (MethodHeader . "SelectRefTablesCtrlMetaData()") (ReturnType) (Snippet . "SelectRefTablesCtrlMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ServerTimeData") (Description . "") (DisplayText . "ServerTimeData") (RequiredNamespaceImport) (MethodHeader . "ServerTimeData") (ReturnType) (Snippet . "ServerTimeData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ServerTimeData") (Description . "") (DisplayText . "ServerTimeData()") (RequiredNamespaceImport) (MethodHeader . "ServerTimeData()") (ReturnType) (Snippet . "ServerTimeData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "SettingsBindableAttribute") (Description . "") (DisplayText . "SettingsBindableAttribute") (RequiredNamespaceImport) (MethodHeader . "SettingsBindableAttribute") (ReturnType) (Snippet . "SettingsBindableAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "SettingsBindableAttribute") (Description . "") (DisplayText . "SettingsBindableAttribute(bool bindable)") (RequiredNamespaceImport) (MethodHeader . "SettingsBindableAttribute(bool bindable)") (ReturnType) (Snippet . "SettingsBindableAttribute(${1:bool bindable})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "SetValidationError") (Description . "") (DisplayText . "SetValidationError(string errorMsg)") (RequiredNamespaceImport) (MethodHeader . "SetValidationError(string errorMsg)") (ReturnType . "void") (Snippet . "SetValidationError(${1:string errorMsg});$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "SetValueMetaData") (Description . "Implements a model for 
") (DisplayText . "SetValueMetaData") (RequiredNamespaceImport) (MethodHeader . "SetValueMetaData") (ReturnType) (Snippet . "SetValueMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "SetValueMetaData") (Description . "Initializes a new instance of the Fls.VisiTourClient.MetaData.SetValueMetaData class.
") (DisplayText . "SetValueMetaData()") (RequiredNamespaceImport) (MethodHeader . "SetValueMetaData()") (ReturnType) (Snippet . "SetValueMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "SignedData") (Description . "") (DisplayText . "SignedData") (RequiredNamespaceImport) (MethodHeader . "SignedData") (ReturnType) (Snippet . "SignedData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "SignedData") (Description . "") (DisplayText . "SignedData()") (RequiredNamespaceImport) (MethodHeader . "SignedData()") (ReturnType) (Snippet . "SignedData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "SignedData") (Description . "") (DisplayText . "SignedData(IChipher cipher)") (RequiredNamespaceImport) (MethodHeader . "SignedData(IChipher cipher)") (ReturnType) (Snippet . "SignedData(${1:IChipher cipher})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "SimpleDataTableView") (Description . "Implements a forms user control based on a view model.
This control 
") (DisplayText . "SimpleDataTableView") (RequiredNamespaceImport) (MethodHeader . "SimpleDataTableView") (ReturnType) (Snippet . "SimpleDataTableView$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "SimpleDataTableView") (Description . "Initializes a new instance of the Fls.Controls.Forms.DevExpressBase.TableGridView class.
") (DisplayText . "SimpleDataTableView()") (RequiredNamespaceImport) (MethodHeader . "SimpleDataTableView()") (ReturnType) (Snippet . "SimpleDataTableView()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "SimpleDataTableView") (Description . "Initializes a new instance of the Fls.Controls.Forms.DevExpressBase.TableGridView class.

viewModel: The used view model ") (DisplayText . "SimpleDataTableView(SimpleDataTableViewModel viewModel)") (RequiredNamespaceImport) (MethodHeader . "SimpleDataTableView(SimpleDataTableViewModel viewModel)") (ReturnType) (Snippet . "SimpleDataTableView(${1:SimpleDataTableViewModel viewModel})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "SimpleDataTableViewModel") (Description . "Implements a model for data table.
") (DisplayText . "SimpleDataTableViewModel") (RequiredNamespaceImport) (MethodHeader . "SimpleDataTableViewModel") (ReturnType) (Snippet . "SimpleDataTableViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "SimpleDataTableViewModel") (Description . "Initializes a new instance of the Fls.UI.Base.DataTableViewModel class.
") (DisplayText . "SimpleDataTableViewModel()") (RequiredNamespaceImport) (MethodHeader . "SimpleDataTableViewModel()") (ReturnType) (Snippet . "SimpleDataTableViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "SimpleTableCtrlMetaData") (Description . "") (DisplayText . "SimpleTableCtrlMetaData") (RequiredNamespaceImport) (MethodHeader . "SimpleTableCtrlMetaData") (ReturnType) (Snippet . "SimpleTableCtrlMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "SimpleTableCtrlMetaData") (Description . "") (DisplayText . "SimpleTableCtrlMetaData()") (RequiredNamespaceImport) (MethodHeader . "SimpleTableCtrlMetaData()") (ReturnType) (Snippet . "SimpleTableCtrlMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "StandaloneBarDockControl") (Description . "
The control that can accommodate bars and display them at any position within the form.") (DisplayText . "StandaloneBarDockControl") (RequiredNamespaceImport) (MethodHeader . "StandaloneBarDockControl") (ReturnType) (Snippet . "StandaloneBarDockControl$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "StandaloneBarDockControl") (Description . "
Initializes a new instance of the StandaloneBarDockControl class.") (DisplayText . "StandaloneBarDockControl()") (RequiredNamespaceImport) (MethodHeader . "StandaloneBarDockControl()") (ReturnType) (Snippet . "StandaloneBarDockControl()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "STAThreadAttribute") (Description . "") (DisplayText . "STAThreadAttribute") (RequiredNamespaceImport) (MethodHeader . "STAThreadAttribute") (ReturnType) (Snippet . "STAThreadAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "STAThreadAttribute") (Description . "") (DisplayText . "STAThreadAttribute()") (RequiredNamespaceImport) (MethodHeader . "STAThreadAttribute()") (ReturnType) (Snippet . "STAThreadAttribute()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "StaticTodayProvider") (Description . "") (DisplayText . "StaticTodayProvider") (RequiredNamespaceImport) (MethodHeader . "StaticTodayProvider") (ReturnType) (Snippet . "StaticTodayProvider$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "StaticTodayProvider") (Description . "") (DisplayText . "StaticTodayProvider(DateTime today)") (RequiredNamespaceImport) (MethodHeader . "StaticTodayProvider(DateTime today)") (ReturnType) (Snippet . "StaticTodayProvider(${1:DateTime today})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "StreamAsyncData") (Description . "Implements a model for 
") (DisplayText . "StreamAsyncData") (RequiredNamespaceImport) (MethodHeader . "StreamAsyncData") (ReturnType) (Snippet . "StreamAsyncData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "StreamAsyncData") (Description . "") (DisplayText . "StreamAsyncData(Stream stream, object data, Action<object> action)") (RequiredNamespaceImport) (MethodHeader . "StreamAsyncData(Stream stream, object data, Action<object> action)") (ReturnType) (Snippet . "StreamAsyncData(${1:Stream stream}, ${2:object data}, ${3:Action<object> action})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "TableDataItemType") (Description . "") (DisplayText . "TableDataItemType") (RequiredNamespaceImport) (MethodHeader . "TableDataItemType") (ReturnType) (Snippet . "TableDataItemType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "TableDataItemType") (Description . "TableDataItemType class constructor
") (DisplayText . "TableDataItemType()") (RequiredNamespaceImport) (MethodHeader . "TableDataItemType()") (ReturnType) (Snippet . "TableDataItemType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "TableDataType") (Description . "") (DisplayText . "TableDataType") (RequiredNamespaceImport) (MethodHeader . "TableDataType") (ReturnType) (Snippet . "TableDataType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "TableDataType") (Description . "") (DisplayText . "TableDataType()") (RequiredNamespaceImport) (MethodHeader . "TableDataType()") (ReturnType) (Snippet . "TableDataType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "TaggedDataRow") (Description . "") (DisplayText . "TaggedDataRow") (RequiredNamespaceImport) (MethodHeader . "TaggedDataRow") (ReturnType) (Snippet . "TaggedDataRow$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "TaggedDataRow") (Description . "") (DisplayText . "TaggedDataRow()") (RequiredNamespaceImport) (MethodHeader . "TaggedDataRow()") (ReturnType) (Snippet . "TaggedDataRow()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "TaggedDataRow") (Description . "") (DisplayText . "TaggedDataRow(DataRowBuilder builder)") (RequiredNamespaceImport) (MethodHeader . "TaggedDataRow(DataRowBuilder builder)") (ReturnType) (Snippet . "TaggedDataRow(${1:DataRowBuilder builder})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "TaskdataFormViewModel") (Description . "") (DisplayText . "TaskdataFormViewModel") (RequiredNamespaceImport) (MethodHeader . "TaskdataFormViewModel") (ReturnType) (Snippet . "TaskdataFormViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "TaskdataFormViewModel") (Description . "") (DisplayText . "TaskdataFormViewModel()") (RequiredNamespaceImport) (MethodHeader . "TaskdataFormViewModel()") (ReturnType) (Snippet . "TaskdataFormViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "TasksEscalatedAndUnscheduled") (Description . "Implements a model for 
") (DisplayText . "TasksEscalatedAndUnscheduled") (RequiredNamespaceImport) (MethodHeader . "TasksEscalatedAndUnscheduled") (ReturnType) (Snippet . "TasksEscalatedAndUnscheduled$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "TasksEscalatedAndUnscheduled") (Description . "") (DisplayText . "TasksEscalatedAndUnscheduled()") (RequiredNamespaceImport) (MethodHeader . "TasksEscalatedAndUnscheduled()") (ReturnType) (Snippet . "TasksEscalatedAndUnscheduled()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "TechWriterDataViewModel") (Description . "Implements a model for 
") (DisplayText . "TechWriterDataViewModel") (RequiredNamespaceImport) (MethodHeader . "TechWriterDataViewModel") (ReturnType) (Snippet . "TechWriterDataViewModel$0") (Kind . "Struct") (IsSuggestionMode . :json-false)) ((CompletionText . "TechWriterDataViewModel") (Description . "") (DisplayText . "TechWriterDataViewModel()") (RequiredNamespaceImport) (MethodHeader . "TechWriterDataViewModel()") (ReturnType) (Snippet . "TechWriterDataViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "TechWriterDataViewModel") (Description . "Initializes a new instance of the Fls.Base.TechWriterDataViewModel class.
") (DisplayText . "TechWriterDataViewModel(string controlId, string type, string transId, string transText)") (RequiredNamespaceImport) (MethodHeader . "TechWriterDataViewModel(string controlId, string type, string transId, string transText)") (ReturnType) (Snippet . "TechWriterDataViewModel(${1:string controlId}, ${2:string type}, ${3:string transId}, ${4:string transText})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "TempLookUpDataModel") (Description . "Implements a model for 
") (DisplayText . "TempLookUpDataModel") (RequiredNamespaceImport) (MethodHeader . "TempLookUpDataModel") (ReturnType) (Snippet . "TempLookUpDataModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "TempLookUpDataModel") (Description . "Initializes a new instance of the Fls.Base.TempLookUpDataModel class.
") (DisplayText . "TempLookUpDataModel(string entityName, IComparable index, ConcurrentDictionary<string, byte> properties, object data)") (RequiredNamespaceImport) (MethodHeader . "TempLookUpDataModel(string entityName, IComparable index, ConcurrentDictionary<string, byte> properties, object data)") (ReturnType) (Snippet . "TempLookUpDataModel(${1:string entityName}, ${2:IComparable index}, ${3:ConcurrentDictionary<string, byte> properties}, ${4:object data})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "TextFunctionMetaData") (Description . "") (DisplayText . "TextFunctionMetaData") (RequiredNamespaceImport) (MethodHeader . "TextFunctionMetaData") (ReturnType) (Snippet . "TextFunctionMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "TextFunctionMetaData") (Description . "") (DisplayText . "TextFunctionMetaData()") (RequiredNamespaceImport) (MethodHeader . "TextFunctionMetaData()") (ReturnType) (Snippet . "TextFunctionMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "TourDataTimeConversionHelper") (Description . "Helper class for converting a DOTourDate TourDate, Begin and End between frontend and backend time zone.
") (DisplayText . "TourDataTimeConversionHelper") (RequiredNamespaceImport) (MethodHeader . "TourDataTimeConversionHelper") (ReturnType) (Snippet . "TourDataTimeConversionHelper$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "TourDataTimeConversionHelper") (Description . "") (DisplayText . "TourDataTimeConversionHelper()") (RequiredNamespaceImport) (MethodHeader . "TourDataTimeConversionHelper()") (ReturnType) (Snippet . "TourDataTimeConversionHelper()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "TourModelTourDayTripComparer") (Description . "") (DisplayText . "TourModelTourDayTripComparer") (RequiredNamespaceImport) (MethodHeader . "TourModelTourDayTripComparer") (ReturnType) (Snippet . "TourModelTourDayTripComparer$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "TourModelTourDayTripComparer") (Description . "") (DisplayText . "TourModelTourDayTripComparer()") (RequiredNamespaceImport) (MethodHeader . "TourModelTourDayTripComparer()") (ReturnType) (Snippet . "TourModelTourDayTripComparer()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "UIActionMetaData") (Description . "Implements a model for 
") (DisplayText . "UIActionMetaData") (RequiredNamespaceImport) (MethodHeader . "UIActionMetaData") (ReturnType) (Snippet . "UIActionMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "UIActionMetaData") (Description . "Initializes a new instance of the Fls.VisiTourClient.MetaData.UIActionMetaData class.

name: The action name.
parameters: The action default parameters.
trigger: The action trigger.") (DisplayText . "UIActionMetaData(string name, Parameters parameters, EventType trigger)") (RequiredNamespaceImport) (MethodHeader . "UIActionMetaData(string name, Parameters parameters, EventType trigger)") (ReturnType) (Snippet . "UIActionMetaData(${1:string name}, ${2:Parameters parameters}, ${3:EventType trigger})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "UnauthorizedAccessException") (Description . "") (DisplayText . "UnauthorizedAccessException") (RequiredNamespaceImport) (MethodHeader . "UnauthorizedAccessException") (ReturnType) (Snippet . "UnauthorizedAccessException$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "UnauthorizedAccessException") (Description . "") (DisplayText . "UnauthorizedAccessException()") (RequiredNamespaceImport) (MethodHeader . "UnauthorizedAccessException()") (ReturnType) (Snippet . "UnauthorizedAccessException()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "UnauthorizedAccessException") (Description . "") (DisplayText . "UnauthorizedAccessException(SerializationInfo info, StreamingContext context)") (RequiredNamespaceImport) (MethodHeader . "UnauthorizedAccessException(SerializationInfo info, StreamingContext context)") (ReturnType) (Snippet . "UnauthorizedAccessException(${1:SerializationInfo info}, ${2:StreamingContext context})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "UnauthorizedAccessException") (Description . "") (DisplayText . "UnauthorizedAccessException(string message)") (RequiredNamespaceImport) (MethodHeader . "UnauthorizedAccessException(string message)") (ReturnType) (Snippet . "UnauthorizedAccessException(${1:string message})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "UnauthorizedAccessException") (Description . "") (DisplayText . "UnauthorizedAccessException(string message, Exception inner)") (RequiredNamespaceImport) (MethodHeader . "UnauthorizedAccessException(string message, Exception inner)") (ReturnType) (Snippet . "UnauthorizedAccessException(${1:string message}, ${2:Exception inner})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateBindingsource") (Description . "updates changes from the datasource into the database 

sourceName: name of the source ") (DisplayText . "UpdateBindingsource(string sourceName)") (RequiredNamespaceImport) (MethodHeader . "UpdateBindingsource(string sourceName)") (ReturnType . "void") (Snippet . "UpdateBindingsource(${1:string sourceName});$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateDisciplineSelections") (Description . "") (DisplayText . "UpdateDisciplineSelections()") (RequiredNamespaceImport) (MethodHeader . "UpdateDisciplineSelections()") (ReturnType . "void") (Snippet . "UpdateDisciplineSelections();$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateFilterSelection") (Description . "") (DisplayText . "UpdateFilterSelection(CheckedComboBoxBarItemViewModel filterVM, ReadOnlyCollection<int> selectedItems, PropertyChangedEventHandler propchangedhandler)") (RequiredNamespaceImport) (MethodHeader . "UpdateFilterSelection(CheckedComboBoxBarItemViewModel filterVM, ReadOnlyCollection<int> selectedItems, PropertyChangedEventHandler propchangedhandler)") (ReturnType . "void") (Snippet . "UpdateFilterSelection(${1:CheckedComboBoxBarItemViewModel filterVM}, ${2:ReadOnlyCollection<int> selectedItems}, ${3:PropertyChangedEventHandler propchangedhandler});$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateLabelText") (Description . "") (DisplayText . "UpdateLabelText()") (RequiredNamespaceImport) (MethodHeader . "UpdateLabelText()") (ReturnType . "void") (Snippet . "UpdateLabelText();$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateLists") (Description . "Implements a model for 
") (DisplayText . "UpdateLists<TKey, TData>") (RequiredNamespaceImport) (MethodHeader . "UpdateLists<TKey, TData>") (ReturnType) (Snippet . "UpdateLists<${1:TKey}, ${2:TData}>$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateLists") (Description . "Initializes a new instance of the UpdateLists class.
") (DisplayText . "UpdateLists<TKey, TData>(string primaryKeyPropertyName, string modificationDatePropertyName)") (RequiredNamespaceImport) (MethodHeader . "UpdateLists<TKey, TData>(string primaryKeyPropertyName, string modificationDatePropertyName)") (ReturnType) (Snippet . "UpdateLists<${1:TKey}, ${2:TData}>(${3:string primaryKeyPropertyName}, ${4:string modificationDatePropertyName})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateRegionSelections") (Description . "") (DisplayText . "UpdateRegionSelections()") (RequiredNamespaceImport) (MethodHeader . "UpdateRegionSelections()") (ReturnType . "void") (Snippet . "UpdateRegionSelections();$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateTeamSelections") (Description . "") (DisplayText . "UpdateTeamSelections()") (RequiredNamespaceImport) (MethodHeader . "UpdateTeamSelections()") (ReturnType . "void") (Snippet . "UpdateTeamSelections();$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateVersion") (Description . "") (DisplayText . "UpdateVersion") (RequiredNamespaceImport) (MethodHeader . "UpdateVersion") (ReturnType) (Snippet . "UpdateVersion$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateVersion") (Description . "") (DisplayText . "UpdateVersion()") (RequiredNamespaceImport) (MethodHeader . "UpdateVersion()") (ReturnType) (Snippet . "UpdateVersion()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateVersion") (Description . "") (DisplayText . "UpdateVersion(FileVersionInfo fv)") (RequiredNamespaceImport) (MethodHeader . "UpdateVersion(FileVersionInfo fv)") (ReturnType) (Snippet . "UpdateVersion(${1:FileVersionInfo fv})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateVersion") (Description . "") (DisplayText . "UpdateVersion(string version)") (RequiredNamespaceImport) (MethodHeader . "UpdateVersion(string version)") (ReturnType) (Snippet . "UpdateVersion(${1:string version})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateWorkflowRequest") (Description . "") (DisplayText . "UpdateWorkflowRequest") (RequiredNamespaceImport) (MethodHeader . "UpdateWorkflowRequest") (ReturnType) (Snippet . "UpdateWorkflowRequest$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateWorkflowRequest") (Description . "") (DisplayText . "UpdateWorkflowRequest()") (RequiredNamespaceImport) (MethodHeader . "UpdateWorkflowRequest()") (ReturnType) (Snippet . "UpdateWorkflowRequest()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateWorkflowResponse") (Description . "") (DisplayText . "UpdateWorkflowResponse") (RequiredNamespaceImport) (MethodHeader . "UpdateWorkflowResponse") (ReturnType) (Snippet . "UpdateWorkflowResponse$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateWorkflowResponse") (Description . "") (DisplayText . "UpdateWorkflowResponse()") (RequiredNamespaceImport) (MethodHeader . "UpdateWorkflowResponse()") (ReturnType) (Snippet . "UpdateWorkflowResponse()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ValidatableValue") (Description . "Implements a model for a valid value.
The value type.") (DisplayText . "ValidatableValue<T>") (RequiredNamespaceImport) (MethodHeader . "ValidatableValue<T>") (ReturnType) (Snippet . "ValidatableValue<${1:T}>$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ValidatableValue") (Description . "Initializes a new instance of the ValidatableValue class.
") (DisplayText . "ValidatableValue<T>()") (RequiredNamespaceImport) (MethodHeader . "ValidatableValue<T>()") (ReturnType) (Snippet . "ValidatableValue<${1:T}>()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ValidateableObject") (Description . "Implements a model for validate objects. The validation methods have to be names like 
\"ValidatableObject.ValidationMethodNamePrefix\"\"PropertyName\" or \"ValidateDisplayName\".
The full declaration has to be: protected string ValidateDisplayName(). 
The validate methods are found automatically.
") (DisplayText . "ValidateableObject") (RequiredNamespaceImport) (MethodHeader . "ValidateableObject") (ReturnType) (Snippet . "ValidateableObject$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ValidateableObject") (Description . "Initializes a new instance of the Fls.Base.ValidateableObject class.
") (DisplayText . "ValidateableObject()") (RequiredNamespaceImport) (MethodHeader . "ValidateableObject()") (ReturnType) (Snippet . "ValidateableObject()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ValidatedVMs") (Description . "Stores the colors of viewmodels before the validating changes their color. Used to revert their color to
it's original value;
") (DisplayText . "ValidatedVMs") (RequiredNamespaceImport) (MethodHeader . "ValidatedVMs") (ReturnType . "Dictionary<DOBindingSource, List<NameViewModel>>") (Snippet . "ValidatedVMs$0") (Kind . "Field") (IsSuggestionMode . :json-false)) ((CompletionText . "ValidateEventArgs") (Description . "") (DisplayText . "ValidateEventArgs") (RequiredNamespaceImport) (MethodHeader . "ValidateEventArgs") (ReturnType) (Snippet . "ValidateEventArgs$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ValidateEventArgs") (Description . "") (DisplayText . "ValidateEventArgs(DOBase data, string field)") (RequiredNamespaceImport) (MethodHeader . "ValidateEventArgs(DOBase data, string field)") (ReturnType) (Snippet . "ValidateEventArgs(${1:DOBase data}, ${2:string field})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ValidationEvent") (Description . "container for validation error results.
holds translationid of errormessage and
properties related to validation error.
") (DisplayText . "ValidationEvent") (RequiredNamespaceImport) (MethodHeader . "ValidationEvent") (ReturnType) (Snippet . "ValidationEvent$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ValidationEvent") (Description . "") (DisplayText . "ValidationEvent(IEnumerable<DProperty> errorProps, string validErrorTextID, ValidationEventType type = Error)") (RequiredNamespaceImport) (MethodHeader . "ValidationEvent(IEnumerable<DProperty> errorProps, string validErrorTextID, ValidationEventType type = Error)") (ReturnType) (Snippet . "ValidationEvent(${1:IEnumerable<DProperty> errorProps}, ${2:string validErrorTextID}, ${3:ValidationEventType type = Error})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ValidationResult") (Description . "Container for multiple validation errors.    
") (DisplayText . "ValidationResult") (RequiredNamespaceImport) (MethodHeader . "ValidationResult") (ReturnType) (Snippet . "ValidationResult$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ValidationResult") (Description . "") (DisplayText . "ValidationResult()") (RequiredNamespaceImport) (MethodHeader . "ValidationResult()") (ReturnType) (Snippet . "ValidationResult()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ValidationStatus") (Description . "") (DisplayText . "ValidationStatus") (RequiredNamespaceImport) (MethodHeader . "ValidationStatus") (ReturnType) (Snippet . "ValidationStatus$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "ValidationType") (Description . "") (DisplayText . "ValidationType") (RequiredNamespaceImport) (MethodHeader . "ValidationType") (ReturnType) (Snippet . "ValidationType$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "ValidatorBase") (Description . "Base class for DOBase validators containing usefull methods.
But it's not necessary for a validator class to inherit from this class.
") (DisplayText . "ValidatorBase") (RequiredNamespaceImport) (MethodHeader . "ValidatorBase") (ReturnType) (Snippet . "ValidatorBase$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ValidatorBase") (Description . "") (DisplayText . "ValidatorBase()") (RequiredNamespaceImport) (MethodHeader . "ValidatorBase()") (ReturnType) (Snippet . "ValidatorBase()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "Validators") (Description . "") (DisplayText . "Validators") (RequiredNamespaceImport) (MethodHeader . "Validators") (ReturnType) (Snippet . "Validators$0") (Kind . "Namespace") (IsSuggestionMode . :json-false)) ((CompletionText . "ValueBuilderData") (Description . "Implements value builder date.
") (DisplayText . "ValueBuilderData") (RequiredNamespaceImport) (MethodHeader . "ValueBuilderData") (ReturnType) (Snippet . "ValueBuilderData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ValueBuilderData") (Description . "") (DisplayText . "ValueBuilderData()") (RequiredNamespaceImport) (MethodHeader . "ValueBuilderData()") (ReturnType) (Snippet . "ValueBuilderData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ValueSettersFromMetaData") (Description . "") (DisplayText . "ValueSettersFromMetaData(ClientFormMetaData metaData)") (RequiredNamespaceImport) (MethodHeader . "ValueSettersFromMetaData(ClientFormMetaData metaData)") (ReturnType . "void") (Snippet . "ValueSettersFromMetaData(${1:ClientFormMetaData metaData});$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "VisualizeValidationResult") (Description . "Visualizes the result of the validation by coloring the corresponding controls. 

dataView: the datasource to Validate 
res: Result of the Vaidation 
silent: set false to show a messagebox with the Validationresults 
sourceName: name of the source, mainly used for debugging ") (DisplayText . "VisualizeValidationResult(DOBindingSource dataView, ValidationResult res, bool silent)") (RequiredNamespaceImport) (MethodHeader . "VisualizeValidationResult(DOBindingSource dataView, ValidationResult res, bool silent)") (ReturnType . "void") (Snippet . "VisualizeValidationResult(${1:DOBindingSource dataView}, ${2:ValidationResult res}, ${3:bool silent});$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "VisualizeValidationResult") (Description . "Visualizes the result of the validation by coloring the corresponding controls. 

dataView: the datasource to Validate 
res: Result of the Vaidation 
silent: set false to show a messagebox with the Validationresults 
sourceName: name of the source, mainly used for debugging ") (DisplayText . "VisualizeValidationResult(DOBindingSource dataView, ValidationResult res, bool silent, string sourceName = \"\")") (RequiredNamespaceImport) (MethodHeader . "VisualizeValidationResult(DOBindingSource dataView, ValidationResult res, bool silent, string sourceName = \"\")") (ReturnType . "void") (Snippet . "VisualizeValidationResult(${1:DOBindingSource dataView}, ${2:ValidationResult res}, ${3:bool silent}, ${4:string sourceName = \"\"});$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "VTSDataObjects") (Description . "") (DisplayText . "VTSDataObjects") (RequiredNamespaceImport) (MethodHeader . "VTSDataObjects") (ReturnType) (Snippet . "VTSDataObjects$0") (Kind . "Namespace") (IsSuggestionMode . :json-false)) ((CompletionText . "WeekDays") (Description . "A flag enumeration to declare different weekdays and their combination. 
") (DisplayText . "WeekDays") (RequiredNamespaceImport) (MethodHeader . "WeekDays") (ReturnType) (Snippet . "WeekDays$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "WeekDaysType") (Description . "") (DisplayText . "WeekDaysType") (RequiredNamespaceImport) (MethodHeader . "WeekDaysType") (ReturnType) (Snippet . "WeekDaysType$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "WSDataAccess") (Description . "") (DisplayText . "WSDataAccess") (RequiredNamespaceImport) (MethodHeader . "WSDataAccess") (ReturnType) (Snippet . "WSDataAccess$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "WSDataAccess") (Description . "") (DisplayText . "WSDataAccess()") (RequiredNamespaceImport) (MethodHeader . "WSDataAccess()") (ReturnType) (Snippet . "WSDataAccess()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "XmlCDataSection") (Description . "") (DisplayText . "XmlCDataSection") (RequiredNamespaceImport) (MethodHeader . "XmlCDataSection") (ReturnType) (Snippet . "XmlCDataSection$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "XmlCDataSection") (Description . "") (DisplayText . "XmlCDataSection(string data, XmlDocument doc)") (RequiredNamespaceImport) (MethodHeader . "XmlCDataSection(string data, XmlDocument doc)") (ReturnType) (Snippet . "XmlCDataSection(${1:string data}, ${2:XmlDocument doc})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "XmlCharacterData") (Description . "") (DisplayText . "XmlCharacterData") (RequiredNamespaceImport) (MethodHeader . "XmlCharacterData") (ReturnType) (Snippet . "XmlCharacterData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "XmlCharacterData") (Description . "") (DisplayText . "XmlCharacterData(string data, XmlDocument doc)") (RequiredNamespaceImport) (MethodHeader . "XmlCharacterData(string data, XmlDocument doc)") (ReturnType) (Snippet . "XmlCharacterData(${1:string data}, ${2:XmlDocument doc})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "XmlDataDocument") (Description . "") (DisplayText . "XmlDataDocument") (RequiredNamespaceImport) (MethodHeader . "XmlDataDocument") (ReturnType) (Snippet . "XmlDataDocument$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "XmlDataDocument") (Description . "") (DisplayText . "XmlDataDocument()") (RequiredNamespaceImport) (MethodHeader . "XmlDataDocument()") (ReturnType) (Snippet . "XmlDataDocument()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "XmlDataDocument") (Description . "") (DisplayText . "XmlDataDocument(DataSet dataset)") (RequiredNamespaceImport) (MethodHeader . "XmlDataDocument(DataSet dataset)") (ReturnType) (Snippet . "XmlDataDocument(${1:DataSet dataset})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "XmlDateTimeSerializationMode") (Description . "") (DisplayText . "XmlDateTimeSerializationMode") (RequiredNamespaceImport) (MethodHeader . "XmlDateTimeSerializationMode") (ReturnType) (Snippet . "XmlDateTimeSerializationMode$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "XmlNodeChangedAction") (Description . "") (DisplayText . "XmlNodeChangedAction") (RequiredNamespaceImport) (MethodHeader . "XmlNodeChangedAction") (ReturnType) (Snippet . "XmlNodeChangedAction$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "XmlValidatingReader") (Description . "") (DisplayText . "XmlValidatingReader") (RequiredNamespaceImport) (MethodHeader . "XmlValidatingReader") (ReturnType) (Snippet . "XmlValidatingReader$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "XmlValidatingReader") (Description . "") (DisplayText . "XmlValidatingReader(Stream xmlFragment, XmlNodeType fragType, XmlParserContext context)") (RequiredNamespaceImport) (MethodHeader . "XmlValidatingReader(Stream xmlFragment, XmlNodeType fragType, XmlParserContext context)") (ReturnType) (Snippet . "XmlValidatingReader(${1:Stream xmlFragment}, ${2:XmlNodeType fragType}, ${3:XmlParserContext context})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "XmlValidatingReader") (Description . "") (DisplayText . "XmlValidatingReader(string xmlFragment, XmlNodeType fragType, XmlParserContext context)") (RequiredNamespaceImport) (MethodHeader . "XmlValidatingReader(string xmlFragment, XmlNodeType fragType, XmlParserContext context)") (ReturnType) (Snippet . "XmlValidatingReader(${1:string xmlFragment}, ${2:XmlNodeType fragType}, ${3:XmlParserContext context})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "XmlValidatingReader") (Description . "") (DisplayText . "XmlValidatingReader(XmlReader reader)") (RequiredNamespaceImport) (MethodHeader . "XmlValidatingReader(XmlReader reader)") (ReturnType) (Snippet . "XmlValidatingReader(${1:XmlReader reader})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "YearOverviewCtrlMetaData") (Description . "") (DisplayText . "YearOverviewCtrlMetaData") (RequiredNamespaceImport) (MethodHeader . "YearOverviewCtrlMetaData") (ReturnType) (Snippet . "YearOverviewCtrlMetaData$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "YearOverviewCtrlMetaData") (Description . "") (DisplayText . "YearOverviewCtrlMetaData()") (RequiredNamespaceImport) (MethodHeader . "YearOverviewCtrlMetaData()") (ReturnType) (Snippet . "YearOverviewCtrlMetaData()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "_DataSources") (Description . "stores datasources 
") (DisplayText . "_DataSources") (RequiredNamespaceImport) (MethodHeader . "_DataSources") (ReturnType . "Dictionary<string, DOBindingSource>") (Snippet . "_DataSources$0") (Kind . "Field") (IsSuggestionMode . :json-false)) ((CompletionText . "_MetaData") (Description . "") (DisplayText . "_MetaData") (RequiredNamespaceImport) (MethodHeader . "_MetaData") (ReturnType . "ClientFormMetaData") (Snippet . "_MetaData$0") (Kind . "Field") (IsSuggestionMode . :json-false))]
[10:17:24] <-- 34 /autocomplete: [((CompletionText . "DateEditExtensionPainter") (Description . "Implements a model for 
") (DisplayText . "DateEditExtensionPainter") (RequiredNamespaceImport) (MethodHeader . "DateEditExtensionPainter") (ReturnType) (Snippet . "DateEditExtensionPainter$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DateEditExtensionPainter") (Description . "") (DisplayText . "DateEditExtensionPainter()") (RequiredNamespaceImport) (MethodHeader . "DateEditExtensionPainter()") (ReturnType) (Snippet . "DateEditExtensionPainter()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateEditExtensionViewInfo") (Description . "") (DisplayText . "DateEditExtensionViewInfo") (RequiredNamespaceImport) (MethodHeader . "DateEditExtensionViewInfo") (ReturnType) (Snippet . "DateEditExtensionViewInfo$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DateEditExtensionViewInfo") (Description . "") (DisplayText . "DateEditExtensionViewInfo(RepositoryItem item)") (RequiredNamespaceImport) (MethodHeader . "DateEditExtensionViewInfo(RepositoryItem item)") (ReturnType) (Snippet . "DateEditExtensionViewInfo(${1:RepositoryItem item})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateSelectorViewModel") (Description . "Implements a model for a date selector.
") (DisplayText . "DateSelectorViewModel") (RequiredNamespaceImport) (MethodHeader . "DateSelectorViewModel") (ReturnType) (Snippet . "DateSelectorViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DateSelectorViewModel") (Description . "Initializes a new instance of the Fls.VisiTourClient.ViewModel.DateSelectorViewModel class.
") (DisplayText . "DateSelectorViewModel()") (RequiredNamespaceImport) (MethodHeader . "DateSelectorViewModel()") (ReturnType) (Snippet . "DateSelectorViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateSelectorViewModel") (Description . "Initializes a new instance of the Fls.VisiTourClient.ViewModel.DateSelectorViewModel class.

startDate: The selected start date.
endDate: The selected end date.") (DisplayText . "DateSelectorViewModel(DateTimeInputViewModel startDate, DateTimeInputViewModel endDate)") (RequiredNamespaceImport) (MethodHeader . "DateSelectorViewModel(DateTimeInputViewModel startDate, DateTimeInputViewModel endDate)") (ReturnType) (Snippet . "DateSelectorViewModel(${1:DateTimeInputViewModel startDate}, ${2:DateTimeInputViewModel endDate})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateSelectorViewModel") (Description . "Initializes a new instance of the Fls.VisiTourClient.ViewModel.DateSelectorViewModel class.

elementId: The elements id.
startDate: The selected start date.
endDate: The selected end date.") (DisplayText . "DateSelectorViewModel(UIItemId elementId, DateTimeInputViewModel startDate, DateTimeInputViewModel endDate)") (RequiredNamespaceImport) (MethodHeader . "DateSelectorViewModel(UIItemId elementId, DateTimeInputViewModel startDate, DateTimeInputViewModel endDate)") (ReturnType) (Snippet . "DateSelectorViewModel(${1:UIItemId elementId}, ${2:DateTimeInputViewModel startDate}, ${3:DateTimeInputViewModel endDate})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime") (RequiredNamespaceImport) (MethodHeader . "DateTime") (ReturnType) (Snippet . "DateTime$0") (Kind . "Struct") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime()") (RequiredNamespaceImport) (MethodHeader . "DateTime()") (ReturnType) (Snippet . "DateTime()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, Calendar calendar)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, Calendar calendar)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:Calendar calendar})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, int hour, int minute, int second)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, int hour, int minute, int second)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, int hour, int minute, int second, Calendar calendar)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, int hour, int minute, int second, Calendar calendar)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:Calendar calendar})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, int hour, int minute, int second, DateTimeKind kind)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, int hour, int minute, int second, DateTimeKind kind)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:DateTimeKind kind})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:int millisecond})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, Calendar calendar)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, Calendar calendar)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:int millisecond}, ${8:Calendar calendar})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, Calendar calendar, DateTimeKind kind)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, Calendar calendar, DateTimeKind kind)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:int millisecond}, ${8:Calendar calendar}, ${9:DateTimeKind kind})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, DateTimeKind kind)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, DateTimeKind kind)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:int millisecond}, ${8:DateTimeKind kind})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(long ticks)") (RequiredNamespaceImport) (MethodHeader . "DateTime(long ticks)") (ReturnType) (Snippet . "DateTime(${1:long ticks})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(long ticks, DateTimeKind kind)") (RequiredNamespaceImport) (MethodHeader . "DateTime(long ticks, DateTimeKind kind)") (ReturnType) (Snippet . "DateTime(${1:long ticks}, ${2:DateTimeKind kind})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeConverter") (Description . "") (DisplayText . "DateTimeConverter") (RequiredNamespaceImport) (MethodHeader . "DateTimeConverter") (ReturnType) (Snippet . "DateTimeConverter$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeConverter") (Description . "") (DisplayText . "DateTimeConverter()") (RequiredNamespaceImport) (MethodHeader . "DateTimeConverter()") (ReturnType) (Snippet . "DateTimeConverter()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeEditView") (Description . "Implements a forms user control based on a view model.
This control 
") (DisplayText . "DateTimeEditView") (RequiredNamespaceImport) (MethodHeader . "DateTimeEditView") (ReturnType) (Snippet . "DateTimeEditView$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeEditView") (Description . "Initializes a new instance of the Fls.Controls.Forms.DevExpressBase.DateTimeEditView class.
") (DisplayText . "DateTimeEditView()") (RequiredNamespaceImport) (MethodHeader . "DateTimeEditView()") (ReturnType) (Snippet . "DateTimeEditView()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeEditView") (Description . "Initializes a new instance of the Fls.Controls.Forms.DevExpressBase.DateTimeEditView class.

viewModel: The used view model ") (DisplayText . "DateTimeEditView(DateTimeInputViewModel viewModel)") (RequiredNamespaceImport) (MethodHeader . "DateTimeEditView(DateTimeInputViewModel viewModel)") (ReturnType) (Snippet . "DateTimeEditView(${1:DateTimeInputViewModel viewModel})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeHelper") (Description . "") (DisplayText . "DateTimeHelper") (RequiredNamespaceImport) (MethodHeader . "DateTimeHelper") (ReturnType) (Snippet . "DateTimeHelper$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeInputViewModel") (Description . "Implements a model for date time input.
") (DisplayText . "DateTimeInputViewModel") (RequiredNamespaceImport) (MethodHeader . "DateTimeInputViewModel") (ReturnType) (Snippet . "DateTimeInputViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeInputViewModel") (Description . "Initializes a new instance of the Fls.UI.Base.DateTimeInputViewModel class.
") (DisplayText . "DateTimeInputViewModel()") (RequiredNamespaceImport) (MethodHeader . "DateTimeInputViewModel()") (ReturnType) (Snippet . "DateTimeInputViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeInputViewModel") (Description . "Initializes a new instance of the Fls.UI.Base.DateTimeInputViewModel class.

elementId: The elements id.") (DisplayText . "DateTimeInputViewModel(UIItemId elementId)") (RequiredNamespaceImport) (MethodHeader . "DateTimeInputViewModel(UIItemId elementId)") (ReturnType) (Snippet . "DateTimeInputViewModel(${1:UIItemId elementId})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeInputViewModel") (Description . "Initializes a new instance of the Fls.UI.Base.DateTimeInputViewModel class.

elementId: The elements id.
minDate: The minimum selectable date.
maxDate: The maximum selectable date.
selectedDate: The selected date.") (DisplayText . "DateTimeInputViewModel(UIItemId elementId, DateTime minDate, DateTime maxDate, DateTime selectedDate)") (RequiredNamespaceImport) (MethodHeader . "DateTimeInputViewModel(UIItemId elementId, DateTime minDate, DateTime maxDate, DateTime selectedDate)") (ReturnType) (Snippet . "DateTimeInputViewModel(${1:UIItemId elementId}, ${2:DateTime minDate}, ${3:DateTime maxDate}, ${4:DateTime selectedDate})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeInputViewModel") (Description . "Initializes a new instance of the Fls.UI.Base.DateTimeInputViewModel class.

elementId: The elements id.
selectedDate: The selected date.") (DisplayText . "DateTimeInputViewModel(UIItemId elementId, DateTime selectedDate)") (RequiredNamespaceImport) (MethodHeader . "DateTimeInputViewModel(UIItemId elementId, DateTime selectedDate)") (ReturnType) (Snippet . "DateTimeInputViewModel(${1:UIItemId elementId}, ${2:DateTime selectedDate})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeKind") (Description . "") (DisplayText . "DateTimeKind") (RequiredNamespaceImport) (MethodHeader . "DateTimeKind") (ReturnType) (Snippet . "DateTimeKind$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset") (ReturnType) (Snippet . "DateTimeOffset$0") (Kind . "Struct") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset()") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset()") (ReturnType) (Snippet . "DateTimeOffset()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset(DateTime dateTime)") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset(DateTime dateTime)") (ReturnType) (Snippet . "DateTimeOffset(${1:DateTime dateTime})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset(DateTime dateTime, TimeSpan offset)") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset(DateTime dateTime, TimeSpan offset)") (ReturnType) (Snippet . "DateTimeOffset(${1:DateTime dateTime}, ${2:TimeSpan offset})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset(int year, int month, int day, int hour, int minute, int second, int millisecond, Calendar calendar, TimeSpan offset)") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset(int year, int month, int day, int hour, int minute, int second, int millisecond, Calendar calendar, TimeSpan offset)") (ReturnType) (Snippet . "DateTimeOffset(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:int millisecond}, ${8:Calendar calendar}, ${9:TimeSpan offset})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset(int year, int month, int day, int hour, int minute, int second, int millisecond, TimeSpan offset)") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset(int year, int month, int day, int hour, int minute, int second, int millisecond, TimeSpan offset)") (ReturnType) (Snippet . "DateTimeOffset(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:int millisecond}, ${8:TimeSpan offset})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset(int year, int month, int day, int hour, int minute, int second, TimeSpan offset)") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset(int year, int month, int day, int hour, int minute, int second, TimeSpan offset)") (ReturnType) (Snippet . "DateTimeOffset(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:TimeSpan offset})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset(long ticks, TimeSpan offset)") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset(long ticks, TimeSpan offset)") (ReturnType) (Snippet . "DateTimeOffset(${1:long ticks}, ${2:TimeSpan offset})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffsetConverter") (Description . "") (DisplayText . "DateTimeOffsetConverter") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffsetConverter") (ReturnType) (Snippet . "DateTimeOffsetConverter$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffsetConverter") (Description . "") (DisplayText . "DateTimeOffsetConverter()") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffsetConverter()") (ReturnType) (Snippet . "DateTimeOffsetConverter()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeSlot") (Description . "Implements a model for time intervals. 
") (DisplayText . "DateTimeSlot") (RequiredNamespaceImport) (MethodHeader . "DateTimeSlot") (ReturnType) (Snippet . "DateTimeSlot$0") (Kind . "Struct") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeSlot") (Description . "") (DisplayText . "DateTimeSlot()") (RequiredNamespaceImport) (MethodHeader . "DateTimeSlot()") (ReturnType) (Snippet . "DateTimeSlot()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeSlot") (Description . "Initializes a new instance of the Fls.Base.DateTimeSlot structure. 

start: The start time. 
duration: The duration. ") (DisplayText . "DateTimeSlot(DateTime start, DateTime end)") (RequiredNamespaceImport) (MethodHeader . "DateTimeSlot(DateTime start, DateTime end)") (ReturnType) (Snippet . "DateTimeSlot(${1:DateTime start}, ${2:DateTime end})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeSlot") (Description . "Initializes a new instance of the Fls.Base.DateTimeSlot structure. 

start: The start time. 
duration: The duration. ") (DisplayText . "DateTimeSlot(DateTime start, TimeSpan duration)") (RequiredNamespaceImport) (MethodHeader . "DateTimeSlot(DateTime start, TimeSpan duration)") (ReturnType) (Snippet . "DateTimeSlot(${1:DateTime start}, ${2:TimeSpan duration})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "AutoUpdateEntity") (Description . "") (DisplayText . "AutoUpdateEntity(string entityName, object id)") (RequiredNamespaceImport) (MethodHeader . "AutoUpdateEntity(string entityName, object id)") (ReturnType . "void") (Snippet . "AutoUpdateEntity(${1:string entityName}, ${2:object id});$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "BookResourceInDateFrameViewModel") (Description . "") (DisplayText . "BookResourceInDateFrameViewModel") (RequiredNamespaceImport) (MethodHeader . "BookResourceInDateFrameViewModel") (ReturnType) (Snippet . "BookResourceInDateFrameViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "BookResourceInDateFrameViewModel") (Description . "") (DisplayText . "BookResourceInDateFrameViewModel(TourModel mainTour, ConcurrentDictionary<int, DOEngineer> availableEngineeres, DateTime startDate, DateTime endDate, DOEngineer changeEngineer)") (RequiredNamespaceImport) (MethodHeader . "BookResourceInDateFrameViewModel(TourModel mainTour, ConcurrentDictionary<int, DOEngineer> availableEngineeres, DateTime startDate, DateTime endDate, DOEngineer changeEngineer)") (ReturnType) (Snippet . "BookResourceInDateFrameViewModel(${1:TourModel mainTour}, ${2:ConcurrentDictionary<int, DOEngineer> availableEngineeres}, ${3:DateTime startDate}, ${4:DateTime endDate}, ${5:DOEngineer changeEngineer})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ClientUpdater") (Description . "") (DisplayText . "ClientUpdater") (RequiredNamespaceImport) (MethodHeader . "ClientUpdater") (ReturnType) (Snippet . "ClientUpdater$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ClientUpdater") (Description . "") (DisplayText . "ClientUpdater(string[] cmdArgs)") (RequiredNamespaceImport) (MethodHeader . "ClientUpdater(string[] cmdArgs)") (ReturnType) (Snippet . "ClientUpdater(${1:string[] cmdArgs})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataAccess") (Description . "") (DisplayText . "DataAccess") (RequiredNamespaceImport) (MethodHeader . "DataAccess") (ReturnType) (Snippet . "DataAccess$0") (Kind . "Namespace") (IsSuggestionMode . :json-false)) ((CompletionText . "DataBaseRequiredPropertiesType") (Description . "") (DisplayText . "DataBaseRequiredPropertiesType") (RequiredNamespaceImport) (MethodHeader . "DataBaseRequiredPropertiesType") (ReturnType) (Snippet . "DataBaseRequiredPropertiesType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataBaseRequiredPropertiesType") (Description . "DataBaseRequiredPropertiesType class constructor
") (DisplayText . "DataBaseRequiredPropertiesType()") (RequiredNamespaceImport) (MethodHeader . "DataBaseRequiredPropertiesType()") (ReturnType) (Snippet . "DataBaseRequiredPropertiesType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataConnection") (Description . "TODO: Update summary.
") (DisplayText . "DataConnection") (RequiredNamespaceImport) (MethodHeader . "DataConnection") (ReturnType) (Snippet . "DataConnection$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataConnection") (Description . "") (DisplayText . "DataConnection()") (RequiredNamespaceImport) (MethodHeader . "DataConnection()") (ReturnType) (Snippet . "DataConnection()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataConnection") (Description . "") (DisplayText . "DataConnection(DOBindingSource lookupBindingSource, DProperty propertyName, string summary, DProperty lookedUpProperty)") (RequiredNamespaceImport) (MethodHeader . "DataConnection(DOBindingSource lookupBindingSource, DProperty propertyName, string summary, DProperty lookedUpProperty)") (ReturnType) (Snippet . "DataConnection(${1:DOBindingSource lookupBindingSource}, ${2:DProperty propertyName}, ${3:string summary}, ${4:DProperty lookedUpProperty})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataConnection") (Description . "") (DisplayText . "DataConnection(DODataView lookupBindingSource, DProperty propertyName, string summary, DProperty lookedUpProperty)") (RequiredNamespaceImport) (MethodHeader . "DataConnection(DODataView lookupBindingSource, DProperty propertyName, string summary, DProperty lookedUpProperty)") (ReturnType) (Snippet . "DataConnection(${1:DODataView lookupBindingSource}, ${2:DProperty propertyName}, ${3:string summary}, ${4:DProperty lookedUpProperty})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataContext") (Description . "Gets or sets the data-context, used to decide which view to use for this viewmodel. Values are the same as
the \"AvailableTypes\" enum in the 'Layout xsd'
") (DisplayText . "DataContext") (RequiredNamespaceImport) (MethodHeader . "DataContext") (ReturnType . "eControlType") (Snippet . "DataContext$0") (Kind . "Property") (IsSuggestionMode . :json-false)) ((CompletionText . "DataDependency") (Description . "") (DisplayText . "DataDependency") (RequiredNamespaceImport) (MethodHeader . "DataDependency") (ReturnType . "EventHandler<DataDependencyEventArgs>") (Snippet . "DataDependency$0") (Kind . "Event") (IsSuggestionMode . :json-false)) ((CompletionText . "DataDependencyEventArgs") (Description . "Implements a model for request event arguments.
") (DisplayText . "DataDependencyEventArgs") (RequiredNamespaceImport) (MethodHeader . "DataDependencyEventArgs") (ReturnType) (Snippet . "DataDependencyEventArgs$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataDependencyEventArgs") (Description . "Initializes a new instance of the Fls.UI.Base.UserInformationEventArgs class.

request: An user request.") (DisplayText . "DataDependencyEventArgs(DataDependencyViewModel infoViewModel)") (RequiredNamespaceImport) (MethodHeader . "DataDependencyEventArgs(DataDependencyViewModel infoViewModel)") (ReturnType) (Snippet . "DataDependencyEventArgs(${1:DataDependencyViewModel infoViewModel})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataDependencyViewModel") (Description . "") (DisplayText . "DataDependencyViewModel") (RequiredNamespaceImport) (MethodHeader . "DataDependencyViewModel") (ReturnType) (Snippet . "DataDependencyViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataDependencyViewModel") (Description . "") (DisplayText . "DataDependencyViewModel(DOBindingSource source, IEnumerable<string> ignoreEntitiesList)") (RequiredNamespaceImport) (MethodHeader . "DataDependencyViewModel(DOBindingSource source, IEnumerable<string> ignoreEntitiesList)") (ReturnType) (Snippet . "DataDependencyViewModel(${1:DOBindingSource source}, ${2:IEnumerable<string> ignoreEntitiesList})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataErrorsChangedEventArgs") (Description . "") (DisplayText . "DataErrorsChangedEventArgs") (RequiredNamespaceImport) (MethodHeader . "DataErrorsChangedEventArgs") (ReturnType) (Snippet . "DataErrorsChangedEventArgs$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataErrorsChangedEventArgs") (Description . "") (DisplayText . "DataErrorsChangedEventArgs(string propertyName)") (RequiredNamespaceImport) (MethodHeader . "DataErrorsChangedEventArgs(string propertyName)") (ReturnType) (Snippet . "DataErrorsChangedEventArgs(${1:string propertyName})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataGroupType") (Description . "") (DisplayText . "DataGroupType") (RequiredNamespaceImport) (MethodHeader . "DataGroupType") (ReturnType) (Snippet . "DataGroupType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataGroupType") (Description . "DataGroupType class constructor
") (DisplayText . "DataGroupType()") (RequiredNamespaceImport) (MethodHeader . "DataGroupType()") (ReturnType) (Snippet . "DataGroupType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataItemType") (Description . "") (DisplayText . "DataItemType") (RequiredNamespaceImport) (MethodHeader . "DataItemType") (ReturnType) (Snippet . "DataItemType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataItemType") (Description . "") (DisplayText . "DataItemType()") (RequiredNamespaceImport) (MethodHeader . "DataItemType()") (ReturnType) (Snippet . "DataItemType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataItemTypeCreateStyle") (Description . "") (DisplayText . "DataItemTypeCreateStyle") (RequiredNamespaceImport) (MethodHeader . "DataItemTypeCreateStyle") (ReturnType) (Snippet . "DataItemTypeCreateStyle$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DataItemTypeEntityViewSourceMode") (Description . "") (DisplayText . "DataItemTypeEntityViewSourceMode") (RequiredNamespaceImport) (MethodHeader . "DataItemTypeEntityViewSourceMode") (ReturnType) (Snippet . "DataItemTypeEntityViewSourceMode$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DataItemTypeInitAction") (Description . "") (DisplayText . "DataItemTypeInitAction") (RequiredNamespaceImport) (MethodHeader . "DataItemTypeInitAction") (ReturnType) (Snippet . "DataItemTypeInitAction$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DataMisalignedException") (Description . "") (DisplayText . "DataMisalignedException") (RequiredNamespaceImport) (MethodHeader . "DataMisalignedException") (ReturnType) (Snippet . "DataMisalignedException$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataMisalignedException") (Description . "") (DisplayText . "DataMisalignedException()") (RequiredNamespaceImport) (MethodHeader . "DataMisalignedException()") (ReturnType) (Snippet . "DataMisalignedException()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataMisalignedException") (Description . "") (DisplayText . "DataMisalignedException(string message)") (RequiredNamespaceImport) (MethodHeader . "DataMisalignedException(string message)") (ReturnType) (Snippet . "DataMisalignedException(${1:string message})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataMisalignedException") (Description . "") (DisplayText . "DataMisalignedException(string message, Exception innerException)") (RequiredNamespaceImport) (MethodHeader . "DataMisalignedException(string message, Exception innerException)") (ReturnType) (Snippet . "DataMisalignedException(${1:string message}, ${2:Exception innerException})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataModel") (Description . "Implements a model for 
") (DisplayText . "DataModel") (RequiredNamespaceImport) (MethodHeader . "DataModel") (ReturnType) (Snippet . "DataModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataModel") (Description . "") (DisplayText . "DataModel()") (RequiredNamespaceImport) (MethodHeader . "DataModel()") (ReturnType) (Snippet . "DataModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObject") (Description . "") (DisplayText . "DataObject") (RequiredNamespaceImport) (MethodHeader . "DataObject") (ReturnType) (Snippet . "DataObject$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObject") (Description . "") (DisplayText . "DataObject()") (RequiredNamespaceImport) (MethodHeader . "DataObject()") (ReturnType) (Snippet . "DataObject()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectAttribute") (Description . "") (DisplayText . "DataObjectAttribute") (RequiredNamespaceImport) (MethodHeader . "DataObjectAttribute") (ReturnType) (Snippet . "DataObjectAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectAttribute") (Description . "") (DisplayText . "DataObjectAttribute()") (RequiredNamespaceImport) (MethodHeader . "DataObjectAttribute()") (ReturnType) (Snippet . "DataObjectAttribute()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectAttribute") (Description . "") (DisplayText . "DataObjectAttribute(bool isDataObject)") (RequiredNamespaceImport) (MethodHeader . "DataObjectAttribute(bool isDataObject)") (ReturnType) (Snippet . "DataObjectAttribute(${1:bool isDataObject})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectClock") (Description . "") (DisplayText . "DataObjectClock<T>") (RequiredNamespaceImport) (MethodHeader . "DataObjectClock<T>") (ReturnType) (Snippet . "DataObjectClock<${1:T}>$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectClock") (Description . "") (DisplayText . "DataObjectClock<T>(T doObject, ITimeExtractor extractor, IZonedClock unbiasedLocalTime)") (RequiredNamespaceImport) (MethodHeader . "DataObjectClock<T>(T doObject, ITimeExtractor extractor, IZonedClock unbiasedLocalTime)") (ReturnType) (Snippet . "DataObjectClock<${1:T}>(${2:T doObject}, ${3:ITimeExtractor extractor}, ${4:IZonedClock unbiasedLocalTime})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectFieldAttribute") (Description . "") (DisplayText . "DataObjectFieldAttribute") (RequiredNamespaceImport) (MethodHeader . "DataObjectFieldAttribute") (ReturnType) (Snippet . "DataObjectFieldAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectFieldAttribute") (Description . "") (DisplayText . "DataObjectFieldAttribute(bool primaryKey)") (RequiredNamespaceImport) (MethodHeader . "DataObjectFieldAttribute(bool primaryKey)") (ReturnType) (Snippet . "DataObjectFieldAttribute(${1:bool primaryKey})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectFieldAttribute") (Description . "") (DisplayText . "DataObjectFieldAttribute(bool primaryKey, bool isIdentity)") (RequiredNamespaceImport) (MethodHeader . "DataObjectFieldAttribute(bool primaryKey, bool isIdentity)") (ReturnType) (Snippet . "DataObjectFieldAttribute(${1:bool primaryKey}, ${2:bool isIdentity})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectFieldAttribute") (Description . "") (DisplayText . "DataObjectFieldAttribute(bool primaryKey, bool isIdentity, bool isNullable)") (RequiredNamespaceImport) (MethodHeader . "DataObjectFieldAttribute(bool primaryKey, bool isIdentity, bool isNullable)") (ReturnType) (Snippet . "DataObjectFieldAttribute(${1:bool primaryKey}, ${2:bool isIdentity}, ${3:bool isNullable})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectFieldAttribute") (Description . "") (DisplayText . "DataObjectFieldAttribute(bool primaryKey, bool isIdentity, bool isNullable, int length)") (RequiredNamespaceImport) (MethodHeader . "DataObjectFieldAttribute(bool primaryKey, bool isIdentity, bool isNullable, int length)") (ReturnType) (Snippet . "DataObjectFieldAttribute(${1:bool primaryKey}, ${2:bool isIdentity}, ${3:bool isNullable}, ${4:int length})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectMethodAttribute") (Description . "") (DisplayText . "DataObjectMethodAttribute") (RequiredNamespaceImport) (MethodHeader . "DataObjectMethodAttribute") (ReturnType) (Snippet . "DataObjectMethodAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectMethodAttribute") (Description . "") (DisplayText . "DataObjectMethodAttribute(DataObjectMethodType methodType)") (RequiredNamespaceImport) (MethodHeader . "DataObjectMethodAttribute(DataObjectMethodType methodType)") (ReturnType) (Snippet . "DataObjectMethodAttribute(${1:DataObjectMethodType methodType})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectMethodAttribute") (Description . "") (DisplayText . "DataObjectMethodAttribute(DataObjectMethodType methodType, bool isDefault)") (RequiredNamespaceImport) (MethodHeader . "DataObjectMethodAttribute(DataObjectMethodType methodType, bool isDefault)") (ReturnType) (Snippet . "DataObjectMethodAttribute(${1:DataObjectMethodType methodType}, ${2:bool isDefault})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectMethodType") (Description . "") (DisplayText . "DataObjectMethodType") (RequiredNamespaceImport) (MethodHeader . "DataObjectMethodType") (ReturnType) (Snippet . "DataObjectMethodType$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectTimeInformation") (Description . "") (DisplayText . "DataObjectTimeInformation") (RequiredNamespaceImport) (MethodHeader . "DataObjectTimeInformation") (ReturnType) (Snippet . "DataObjectTimeInformation$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectTimeInformation") (Description . "") (DisplayText . "DataObjectTimeInformation(TimeZoneInfo timeZone, IProvideToday dateForTimeOfDayConversion, TimeZoneAlias alias)") (RequiredNamespaceImport) (MethodHeader . "DataObjectTimeInformation(TimeZoneInfo timeZone, IProvideToday dateForTimeOfDayConversion, TimeZoneAlias alias)") (ReturnType) (Snippet . "DataObjectTimeInformation(${1:TimeZoneInfo timeZone}, ${2:IProvideToday dateForTimeOfDayConversion}, ${3:TimeZoneAlias alias})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectTimeInformationExtractor") (Description . "") (DisplayText . "DataObjectTimeInformationExtractor") (RequiredNamespaceImport) (MethodHeader . "DataObjectTimeInformationExtractor") (ReturnType) (Snippet . "DataObjectTimeInformationExtractor$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectTimeInformationExtractor") (Description . "") (DisplayText . "DataObjectTimeInformationExtractor(TimeZoneInfo fallBackTimeZone, IProvideToday fallBackDateForTimeOfDayConversion)") (RequiredNamespaceImport) (MethodHeader . "DataObjectTimeInformationExtractor(TimeZoneInfo fallBackTimeZone, IProvideToday fallBackDateForTimeOfDayConversion)") (ReturnType) (Snippet . "DataObjectTimeInformationExtractor(${1:TimeZoneInfo fallBackTimeZone}, ${2:IProvideToday fallBackDateForTimeOfDayConversion})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectToDateMapper") (Description . "") (DisplayText . "DataObjectToDateMapper") (RequiredNamespaceImport) (MethodHeader . "DataObjectToDateMapper") (ReturnType) (Snippet . "DataObjectToDateMapper$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectToDateMapper") (Description . "") (DisplayText . "DataObjectToDateMapper(IProvideToday fallBackToday)") (RequiredNamespaceImport) (MethodHeader . "DataObjectToDateMapper(IProvideToday fallBackToday)") (ReturnType) (Snippet . "DataObjectToDateMapper(${1:IProvideToday fallBackToday})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataOutputType") (Description . "") (DisplayText . "DataOutputType") (RequiredNamespaceImport) (MethodHeader . "DataOutputType") (ReturnType) (Snippet . "DataOutputType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataOutputType") (Description . "DataOutputType class constructor
") (DisplayText . "DataOutputType()") (RequiredNamespaceImport) (MethodHeader . "DataOutputType()") (ReturnType) (Snippet . "DataOutputType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataRequestModel") (Description . "") (DisplayText . "DataRequestModel<Index, Data>") (RequiredNamespaceImport) (MethodHeader . "DataRequestModel<Index, Data>") (ReturnType) (Snippet . "DataRequestModel<${1:Index}, ${2:Data}>$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataRequestModel") (Description . "") (DisplayText . "DataRequestModel<Index, Data>()") (RequiredNamespaceImport) (MethodHeader . "DataRequestModel<Index, Data>()") (ReturnType) (Snippet . "DataRequestModel<${1:Index}, ${2:Data}>()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataSourceActionCanExe") (Description . "") (DisplayText . "DataSourceActionCanExe(Parameters param)") (RequiredNamespaceImport) (MethodHeader . "DataSourceActionCanExe(Parameters param)") (ReturnType . "bool") (Snippet . "DataSourceActionCanExe(${1:Parameters param})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataSourceActionExe") (Description . "") (DisplayText . "DataSourceActionExe(Parameters param)") (RequiredNamespaceImport) (MethodHeader . "DataSourceActionExe(Parameters param)") (ReturnType . "void") (Snippet . "DataSourceActionExe(${1:Parameters param});$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataSourceActionType") (Description . "") (DisplayText . "DataSourceActionType") (RequiredNamespaceImport) (MethodHeader . "DataSourceActionType") (ReturnType) (Snippet . "DataSourceActionType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataSourceActionType") (Description . "") (DisplayText . "DataSourceActionType()") (RequiredNamespaceImport) (MethodHeader . "DataSourceActionType()") (ReturnType) (Snippet . "DataSourceActionType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataSourceActionTypeType") (Description . "") (DisplayText . "DataSourceActionTypeType") (RequiredNamespaceImport) (MethodHeader . "DataSourceActionTypeType") (ReturnType) (Snippet . "DataSourceActionTypeType$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DataSourceErrorEventArgs") (Description . "") (DisplayText . "DataSourceErrorEventArgs") (RequiredNamespaceImport) (MethodHeader . "DataSourceErrorEventArgs") (ReturnType) (Snippet . "DataSourceErrorEventArgs$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataSourceErrorEventArgs") (Description . "") (DisplayText . "DataSourceErrorEventArgs(string textId)") (RequiredNamespaceImport) (MethodHeader . "DataSourceErrorEventArgs(string textId)") (ReturnType) (Snippet . "DataSourceErrorEventArgs(${1:string textId})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataSourceErrorEventArgs") (Description . "") (DisplayText . "DataSourceErrorEventArgs(string textId, int code)") (RequiredNamespaceImport) (MethodHeader . "DataSourceErrorEventArgs(string textId, int code)") (ReturnType) (Snippet . "DataSourceErrorEventArgs(${1:string textId}, ${2:int code})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataSourceNameAttribute") (Description . "Implements an attribute for a subversion version.
") (DisplayText . "DataSourceNameAttribute") (RequiredNamespaceImport) (MethodHeader . "DataSourceNameAttribute") (ReturnType) (Snippet . "DataSourceNameAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataSourceNameAttribute") (Description . "Initializes a new instance of the Fls.VisiTourClient.ViewModel.DataSourceNameAttribute class.

svnRevision: The subversion version.") (DisplayText . "DataSourceNameAttribute(string name)") (RequiredNamespaceImport) (MethodHeader . "DataSourceNameAttribute(string name)") (ReturnType) (Snippet . "DataSourceNameAttribute(${1:string name})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DatasourceRequestId") (Description . "") (DisplayText . "DatasourceRequestId") (RequiredNamespaceImport) (MethodHeader . "DatasourceRequestId") (ReturnType . "string") (Snippet . "DatasourceRequestId$0") (Kind . "Const") (IsSuggestionMode . :json-false)) ((CompletionText . "DataSources") (Description . "") (DisplayText . "DataSources") (RequiredNamespaceImport) (MethodHeader . "DataSources") (ReturnType) (Snippet . "DataSources$0") (Kind . "Namespace") (IsSuggestionMode . :json-false)) ((CompletionText . "DataTableSourceViewModel") (Description . "") (DisplayText . "DataTableSourceViewModel") (RequiredNamespaceImport) (MethodHeader . "DataTableSourceViewModel") (ReturnType) (Snippet . "DataTableSourceViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataTableSourceViewModel") (Description . "") (DisplayText . "DataTableSourceViewModel()") (RequiredNamespaceImport) (MethodHeader . "DataTableSourceViewModel()") (ReturnType) (Snippet . "DataTableSourceViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataTableViewModel") (Description . "Implements a model for data table.
") (DisplayText . "DataTableViewModel") (RequiredNamespaceImport) (MethodHeader . "DataTableViewModel") (ReturnType) (Snippet . "DataTableViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataTableViewModel") (Description . "Initializes a new instance of the Fls.UI.Base.DataTableViewModel class.
") (DisplayText . "DataTableViewModel()") (RequiredNamespaceImport) (MethodHeader . "DataTableViewModel()") (ReturnType) (Snippet . "DataTableViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataTableWithColoringViewModel") (Description . "TODO: Update summary.
") (DisplayText . "DataTableWithColoringViewModel") (RequiredNamespaceImport) (MethodHeader . "DataTableWithColoringViewModel") (ReturnType) (Snippet . "DataTableWithColoringViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataTableWithColoringViewModel") (Description . "Initializes a new instance of the Fls.UI.Base.DataTableWithColoringViewModel class.
") (DisplayText . "DataTableWithColoringViewModel()") (RequiredNamespaceImport) (MethodHeader . "DataTableWithColoringViewModel()") (ReturnType) (Snippet . "DataTableWithColoringViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataTransfersTypes") (Description . "The available data transfer types.
") (DisplayText . "DataTransfersTypes") (RequiredNamespaceImport) (MethodHeader . "DataTransfersTypes") (ReturnType) (Snippet . "DataTransfersTypes$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DDataBase") (Description . "") (DisplayText . "DDataBase") (RequiredNamespaceImport) (MethodHeader . "DDataBase") (ReturnType) (Snippet . "DDataBase$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DDataBase") (Description . "") (DisplayText . "DDataBase()") (RequiredNamespaceImport) (MethodHeader . "DDataBase()") (ReturnType) (Snippet . "DDataBase()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DisplayTextEvaluator") (Description . "") (DisplayText . "DisplayTextEvaluator") (RequiredNamespaceImport) (MethodHeader . "DisplayTextEvaluator") (ReturnType) (Snippet . "DisplayTextEvaluator$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DisplayTextEvaluator") (Description . "") (DisplayText . "DisplayTextEvaluator(IDisplayTextEvaluatorOwner owner)") (RequiredNamespaceImport) (MethodHeader . "DisplayTextEvaluator(IDisplayTextEvaluatorOwner owner)") (ReturnType) (Snippet . "DisplayTextEvaluator(${1:IDisplayTextEvaluatorOwner owner})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DLocalizationType") (Description . "") (DisplayText . "DLocalizationType") (RequiredNamespaceImport) (MethodHeader . "DLocalizationType") (ReturnType) (Snippet . "DLocalizationType$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DOArticle") (Description . "") (DisplayText . "DOArticle") (RequiredNamespaceImport) (MethodHeader . "DOArticle") (ReturnType) (Snippet . "DOArticle$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOArticle") (Description . "") (DisplayText . "DOArticle()") (RequiredNamespaceImport) (MethodHeader . "DOArticle()") (ReturnType) (Snippet . "DOArticle()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOAttachmentFilter") (Description . "") (DisplayText . "DOAttachmentFilter") (RequiredNamespaceImport) (MethodHeader . "DOAttachmentFilter") (ReturnType) (Snippet . "DOAttachmentFilter$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOAttachmentFilter") (Description . "") (DisplayText . "DOAttachmentFilter()") (RequiredNamespaceImport) (MethodHeader . "DOAttachmentFilter()") (ReturnType) (Snippet . "DOAttachmentFilter()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOAttachments") (Description . "") (DisplayText . "DOAttachments") (RequiredNamespaceImport) (MethodHeader . "DOAttachments") (ReturnType) (Snippet . "DOAttachments$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOAttachments") (Description . "") (DisplayText . "DOAttachments()") (RequiredNamespaceImport) (MethodHeader . "DOAttachments()") (ReturnType) (Snippet . "DOAttachments()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOCallstate") (Description . "") (DisplayText . "DOCallstate") (RequiredNamespaceImport) (MethodHeader . "DOCallstate") (ReturnType) (Snippet . "DOCallstate$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOCallstate") (Description . "") (DisplayText . "DOCallstate()") (RequiredNamespaceImport) (MethodHeader . "DOCallstate()") (ReturnType) (Snippet . "DOCallstate()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOClientUpdateHistory") (Description . "") (DisplayText . "DOClientUpdateHistory") (RequiredNamespaceImport) (MethodHeader . "DOClientUpdateHistory") (ReturnType) (Snippet . "DOClientUpdateHistory$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOClientUpdateHistory") (Description . "") (DisplayText . "DOClientUpdateHistory()") (RequiredNamespaceImport) (MethodHeader . "DOClientUpdateHistory()") (ReturnType) (Snippet . "DOClientUpdateHistory()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DoDataLoadingStatusChangedAction") (Description . "") (DisplayText . "DoDataLoadingStatusChangedAction(LoadingStatus oldValue, LoadingStatus current)") (RequiredNamespaceImport) (MethodHeader . "DoDataLoadingStatusChangedAction(LoadingStatus oldValue, LoadingStatus current)") (ReturnType . "void") (Snippet . "DoDataLoadingStatusChangedAction(${1:LoadingStatus oldValue}, ${2:LoadingStatus current});$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DODataSource") (Description . "") (DisplayText . "DODataSource") (RequiredNamespaceImport) (MethodHeader . "DODataSource") (ReturnType) (Snippet . "DODataSource$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DODataSource") (Description . "") (DisplayText . "DODataSource(DEntity entity, IDOBaseRepository rep, IEntityValidation validator = null, eInitAction initAction = LoadAll)") (RequiredNamespaceImport) (MethodHeader . "DODataSource(DEntity entity, IDOBaseRepository rep, IEntityValidation validator = null, eInitAction initAction = LoadAll)") (ReturnType) (Snippet . "DODataSource(${1:DEntity entity}, ${2:IDOBaseRepository rep}, ${3:IEntityValidation validator = null}, ${4:eInitAction initAction = LoadAll})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DODataSource") (Description . "") (DisplayText . "DODataSource(DEntity entity, IDOBaseRepository rep, IEnumerable<DProperty> propertiesToRead, IEntityValidation validator = null)") (RequiredNamespaceImport) (MethodHeader . "DODataSource(DEntity entity, IDOBaseRepository rep, IEnumerable<DProperty> propertiesToRead, IEntityValidation validator = null)") (ReturnType) (Snippet . "DODataSource(${1:DEntity entity}, ${2:IDOBaseRepository rep}, ${3:IEnumerable<DProperty> propertiesToRead}, ${4:IEntityValidation validator = null})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DODataSource") (Description . "") (DisplayText . "DODataSource(DEntity entity, IDOBaseRepository rep, IEnumerable<string> propertyNames, IEntityValidation validator = null, eInitAction initAction = LoadAll)") (RequiredNamespaceImport) (MethodHeader . "DODataSource(DEntity entity, IDOBaseRepository rep, IEnumerable<string> propertyNames, IEntityValidation validator = null, eInitAction initAction = LoadAll)") (ReturnType) (Snippet . "DODataSource(${1:DEntity entity}, ${2:IDOBaseRepository rep}, ${3:IEnumerable<string> propertyNames}, ${4:IEntityValidation validator = null}, ${5:eInitAction initAction = LoadAll})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DODataSourceFactory") (Description . "") (DisplayText . "DODataSourceFactory") (RequiredNamespaceImport) (MethodHeader . "DODataSourceFactory") (ReturnType) (Snippet . "DODataSourceFactory$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DODataSourceFactory") (Description . "") (DisplayText . "DODataSourceFactory(IDOBaseRepository rep)") (RequiredNamespaceImport) (MethodHeader . "DODataSourceFactory(IDOBaseRepository rep)") (ReturnType) (Snippet . "DODataSourceFactory(${1:IDOBaseRepository rep})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DoDataUpdate") (Description . "") (DisplayText . "DoDataUpdate(Guid testInstance)") (RequiredNamespaceImport) (MethodHeader . "DoDataUpdate(Guid testInstance)") (ReturnType . "void") (Snippet . "DoDataUpdate(${1:Guid testInstance});$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DODataView") (Description . "") (DisplayText . "DODataView") (RequiredNamespaceImport) (MethodHeader . "DODataView") (ReturnType) (Snippet . "DODataView$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DODataView") (Description . "") (DisplayText . "DODataView(DODataSource dataSource, string clientFilterId = null, eInitAction initAction = LoadAll)") (RequiredNamespaceImport) (MethodHeader . "DODataView(DODataSource dataSource, string clientFilterId = null, eInitAction initAction = LoadAll)") (ReturnType) (Snippet . "DODataView(${1:DODataSource dataSource}, ${2:string clientFilterId = null}, ${3:eInitAction initAction = LoadAll})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DODataViewDirect") (Description . "") (DisplayText . "DODataViewDirect") (RequiredNamespaceImport) (MethodHeader . "DODataViewDirect") (ReturnType) (Snippet . "DODataViewDirect$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DODataViewDirect") (Description . "") (DisplayText . "DODataViewDirect(DODataSource dataSource, string clientFilterId = null, eInitAction initAction = LoadAll)") (RequiredNamespaceImport) (MethodHeader . "DODataViewDirect(DODataSource dataSource, string clientFilterId = null, eInitAction initAction = LoadAll)") (ReturnType) (Snippet . "DODataViewDirect(${1:DODataSource dataSource}, ${2:string clientFilterId = null}, ${3:eInitAction initAction = LoadAll})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOManufacturer") (Description . "") (DisplayText . "DOManufacturer") (RequiredNamespaceImport) (MethodHeader . "DOManufacturer") (ReturnType) (Snippet . "DOManufacturer$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOManufacturer") (Description . "") (DisplayText . "DOManufacturer()") (RequiredNamespaceImport) (MethodHeader . "DOManufacturer()") (ReturnType) (Snippet . "DOManufacturer()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMasterDataLog") (Description . "") (DisplayText . "DOMasterDataLog") (RequiredNamespaceImport) (MethodHeader . "DOMasterDataLog") (ReturnType) (Snippet . "DOMasterDataLog$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMasterDataLog") (Description . "") (DisplayText . "DOMasterDataLog()") (RequiredNamespaceImport) (MethodHeader . "DOMasterDataLog()") (ReturnType) (Snippet . "DOMasterDataLog()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMasterRoute") (Description . "") (DisplayText . "DOMasterRoute") (RequiredNamespaceImport) (MethodHeader . "DOMasterRoute") (ReturnType) (Snippet . "DOMasterRoute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMasterRoute") (Description . "") (DisplayText . "DOMasterRoute()") (RequiredNamespaceImport) (MethodHeader . "DOMasterRoute()") (ReturnType) (Snippet . "DOMasterRoute()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMasterRoutePc") (Description . "") (DisplayText . "DOMasterRoutePc") (RequiredNamespaceImport) (MethodHeader . "DOMasterRoutePc") (ReturnType) (Snippet . "DOMasterRoutePc$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMasterRoutePc") (Description . "") (DisplayText . "DOMasterRoutePc()") (RequiredNamespaceImport) (MethodHeader . "DOMasterRoutePc()") (ReturnType) (Snippet . "DOMasterRoutePc()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterial") (Description . "") (DisplayText . "DOMaterial") (RequiredNamespaceImport) (MethodHeader . "DOMaterial") (ReturnType) (Snippet . "DOMaterial$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterial") (Description . "") (DisplayText . "DOMaterial()") (RequiredNamespaceImport) (MethodHeader . "DOMaterial()") (ReturnType) (Snippet . "DOMaterial()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialGroup") (Description . "") (DisplayText . "DOMaterialGroup") (RequiredNamespaceImport) (MethodHeader . "DOMaterialGroup") (ReturnType) (Snippet . "DOMaterialGroup$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialGroup") (Description . "") (DisplayText . "DOMaterialGroup()") (RequiredNamespaceImport) (MethodHeader . "DOMaterialGroup()") (ReturnType) (Snippet . "DOMaterialGroup()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialMaster") (Description . "") (DisplayText . "DOMaterialMaster") (RequiredNamespaceImport) (MethodHeader . "DOMaterialMaster") (ReturnType) (Snippet . "DOMaterialMaster$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialMaster") (Description . "") (DisplayText . "DOMaterialMaster()") (RequiredNamespaceImport) (MethodHeader . "DOMaterialMaster()") (ReturnType) (Snippet . "DOMaterialMaster()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialOrder") (Description . "") (DisplayText . "DOMaterialOrder") (RequiredNamespaceImport) (MethodHeader . "DOMaterialOrder") (ReturnType) (Snippet . "DOMaterialOrder$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialOrder") (Description . "") (DisplayText . "DOMaterialOrder()") (RequiredNamespaceImport) (MethodHeader . "DOMaterialOrder()") (ReturnType) (Snippet . "DOMaterialOrder()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialPosting") (Description . "") (DisplayText . "DOMaterialPosting") (RequiredNamespaceImport) (MethodHeader . "DOMaterialPosting") (ReturnType) (Snippet . "DOMaterialPosting$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialPosting") (Description . "") (DisplayText . "DOMaterialPosting()") (RequiredNamespaceImport) (MethodHeader . "DOMaterialPosting()") (ReturnType) (Snippet . "DOMaterialPosting()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialRelevance") (Description . "") (DisplayText . "DOMaterialRelevance") (RequiredNamespaceImport) (MethodHeader . "DOMaterialRelevance") (ReturnType) (Snippet . "DOMaterialRelevance$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialRelevance") (Description . "") (DisplayText . "DOMaterialRelevance()") (RequiredNamespaceImport) (MethodHeader . "DOMaterialRelevance()") (ReturnType) (Snippet . "DOMaterialRelevance()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialStock") (Description . "") (DisplayText . "DOMaterialStock") (RequiredNamespaceImport) (MethodHeader . "DOMaterialStock") (ReturnType) (Snippet . "DOMaterialStock$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialStock") (Description . "") (DisplayText . "DOMaterialStock()") (RequiredNamespaceImport) (MethodHeader . "DOMaterialStock()") (ReturnType) (Snippet . "DOMaterialStock()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialStockLocation") (Description . "") (DisplayText . "DOMaterialStockLocation") (RequiredNamespaceImport) (MethodHeader . "DOMaterialStockLocation") (ReturnType) (Snippet . "DOMaterialStockLocation$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialStockLocation") (Description . "") (DisplayText . "DOMaterialStockLocation()") (RequiredNamespaceImport) (MethodHeader . "DOMaterialStockLocation()") (ReturnType) (Snippet . "DOMaterialStockLocation()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialStockLocationMA") (Description . "") (DisplayText . "DOMaterialStockLocationMA") (RequiredNamespaceImport) (MethodHeader . "DOMaterialStockLocationMA") (ReturnType) (Snippet . "DOMaterialStockLocationMA$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialStockLocationMA") (Description . "") (DisplayText . "DOMaterialStockLocationMA()") (RequiredNamespaceImport) (MethodHeader . "DOMaterialStockLocationMA()") (ReturnType) (Snippet . "DOMaterialStockLocationMA()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DoModificationTest") (Description . "") (DisplayText . "DoModificationTest()") (RequiredNamespaceImport) (MethodHeader . "DoModificationTest()") (ReturnType . "ModificationTestAutoRefreshStatus") (Snippet . "DoModificationTest()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMSDArticles") (Description . "") (DisplayText . "DOMSDArticles") (RequiredNamespaceImport) (MethodHeader . "DOMSDArticles") (ReturnType) (Snippet . "DOMSDArticles$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMSDArticles") (Description . "") (DisplayText . "DOMSDArticles()") (RequiredNamespaceImport) (MethodHeader . "DOMSDArticles()") (ReturnType) (Snippet . "DOMSDArticles()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOWasteType") (Description . "") (DisplayText . "DOWasteType") (RequiredNamespaceImport) (MethodHeader . "DOWasteType") (ReturnType) (Snippet . "DOWasteType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOWasteType") (Description . "") (DisplayText . "DOWasteType()") (RequiredNamespaceImport) (MethodHeader . "DOWasteType()") (ReturnType) (Snippet . "DOWasteType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DragState") (Description . "The different states with in a drag and drop. 
") (DisplayText . "DragState") (RequiredNamespaceImport) (MethodHeader . "DragState") (ReturnType) (Snippet . "DragState$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DuplicateWaitObjectException") (Description . "") (DisplayText . "DuplicateWaitObjectException") (RequiredNamespaceImport) (MethodHeader . "DuplicateWaitObjectException") (ReturnType) (Snippet . "DuplicateWaitObjectException$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DuplicateWaitObjectException") (Description . "") (DisplayText . "DuplicateWaitObjectException()") (RequiredNamespaceImport) (MethodHeader . "DuplicateWaitObjectException()") (ReturnType) (Snippet . "DuplicateWaitObjectException()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DuplicateWaitObjectException") (Description . "") (DisplayText . "DuplicateWaitObjectException(SerializationInfo info, StreamingContext context)") (RequiredNamespaceImport) (MethodHeader . "DuplicateWaitObjectException(SerializationInfo info, StreamingContext context)") (ReturnType) (Snippet . "DuplicateWaitObjectException(${1:SerializationInfo info}, ${2:StreamingContext context})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DuplicateWaitObjectException") (Description . "") (DisplayText . "DuplicateWaitObjectException(string message, Exception innerException)") (RequiredNamespaceImport) (MethodHeader . "DuplicateWaitObjectException(string message, Exception innerException)") (ReturnType) (Snippet . "DuplicateWaitObjectException(${1:string message}, ${2:Exception innerException})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DuplicateWaitObjectException") (Description . "") (DisplayText . "DuplicateWaitObjectException(string parameterName)") (RequiredNamespaceImport) (MethodHeader . "DuplicateWaitObjectException(string parameterName)") (ReturnType) (Snippet . "DuplicateWaitObjectException(${1:string parameterName})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DuplicateWaitObjectException") (Description . "") (DisplayText . "DuplicateWaitObjectException(string parameterName, string message)") (RequiredNamespaceImport) (MethodHeader . "DuplicateWaitObjectException(string parameterName, string message)") (ReturnType) (Snippet . "DuplicateWaitObjectException(${1:string parameterName}, ${2:string message})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DurationView") (Description . "") (DisplayText . "DurationView") (RequiredNamespaceImport) (MethodHeader . "DurationView") (ReturnType) (Snippet . "DurationView$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DurationView") (Description . "") (DisplayText . "DurationView(DurationViewModel viewModel)") (RequiredNamespaceImport) (MethodHeader . "DurationView(DurationViewModel viewModel)") (ReturnType) (Snippet . "DurationView(${1:DurationViewModel viewModel})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DurationViewModel") (Description . "TODO: Update summary.
") (DisplayText . "DurationViewModel") (RequiredNamespaceImport) (MethodHeader . "DurationViewModel") (ReturnType) (Snippet . "DurationViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DurationViewModel") (Description . "") (DisplayText . "DurationViewModel()") (RequiredNamespaceImport) (MethodHeader . "DurationViewModel()") (ReturnType) (Snippet . "DurationViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicDataInputViewModel") (Description . "Implements only methods to create view models form dynamic data.
") (DisplayText . "DynamicDataInputViewModel") (RequiredNamespaceImport) (MethodHeader . "DynamicDataInputViewModel") (ReturnType) (Snippet . "DynamicDataInputViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicTextBuilder") (Description . "Gets or sets the FormatedStringValue as IFormatedString.
") (DisplayText . "DynamicTextBuilder") (RequiredNamespaceImport) (MethodHeader . "DynamicTextBuilder") (ReturnType . "CaseBuilder") (Snippet . "DynamicTextBuilder$0") (Kind . "Property") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicTreeTableView") (Description . "Implements a forms user control based on a view model. This control 
") (DisplayText . "DynamicTreeTableView") (RequiredNamespaceImport) (MethodHeader . "DynamicTreeTableView") (ReturnType) (Snippet . "DynamicTreeTableView$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicTreeTableView") (Description . "Initializes a new instance of the FormatedTableView class. 
") (DisplayText . "DynamicTreeTableView()") (RequiredNamespaceImport) (MethodHeader . "DynamicTreeTableView()") (ReturnType) (Snippet . "DynamicTreeTableView()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicTreeTableView") (Description . "Initializes a new instance of the FormatedTableView class. 

viewModel: The used view model ") (DisplayText . "DynamicTreeTableView(IDataTableSourceViewModel viewModel)") (RequiredNamespaceImport) (MethodHeader . "DynamicTreeTableView(IDataTableSourceViewModel viewModel)") (ReturnType) (Snippet . "DynamicTreeTableView(${1:IDataTableSourceViewModel viewModel})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicXmlTable") (Description . "
Remarks:
") (DisplayText . "DynamicXmlTable") (RequiredNamespaceImport) (MethodHeader . "DynamicXmlTable") (ReturnType) (Snippet . "DynamicXmlTable$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicXmlTable") (Description . "") (DisplayText . "DynamicXmlTable()") (RequiredNamespaceImport) (MethodHeader . "DynamicXmlTable()") (ReturnType) (Snippet . "DynamicXmlTable()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DynmicDataAttribute") (Description . "Implements an attribute for a subversion version.
") (DisplayText . "DynmicDataAttribute") (RequiredNamespaceImport) (MethodHeader . "DynmicDataAttribute") (ReturnType) (Snippet . "DynmicDataAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DynmicDataAttribute") (Description . "Initializes a new instance of the Fls.Base.SvnRevisionAttribute class.

svnRevision: The subversion version.") (DisplayText . "DynmicDataAttribute(string name)") (RequiredNamespaceImport) (MethodHeader . "DynmicDataAttribute(string name)") (ReturnType) (Snippet . "DynmicDataAttribute(${1:string name})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "EntityUpdateHandler") (Description . "") (DisplayText . "EntityUpdateHandler") (RequiredNamespaceImport) (MethodHeader . "EntityUpdateHandler") (ReturnType) (Snippet . "EntityUpdateHandler$0") (Kind . "Delegate") (IsSuggestionMode . :json-false)) ((CompletionText . "EntityUpdateHandler") (Description . "") (DisplayText . "EntityUpdateHandler(object @object, IntPtr method)") (RequiredNamespaceImport) (MethodHeader . "EntityUpdateHandler(object @object, IntPtr method)") (ReturnType) (Snippet . "EntityUpdateHandler(${1:object @object}, ${2:IntPtr method})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "EntityUpdateType") (Description . "") (DisplayText . "EntityUpdateType") (RequiredNamespaceImport) (MethodHeader . "EntityUpdateType") (ReturnType) (Snippet . "EntityUpdateType$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "FinishDataUpdate") (Description . "") (DisplayText . "FinishDataUpdate()") (RequiredNamespaceImport) (MethodHeader . "FinishDataUpdate()") (ReturnType . "void") (Snippet . "FinishDataUpdate();$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "FLSDateEdit") (Description . "TODO: Update summary.
") (DisplayText . "FLSDateEdit") (RequiredNamespaceImport) (MethodHeader . "FLSDateEdit") (ReturnType) (Snippet . "FLSDateEdit$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "FLSDateEdit") (Description . "") (DisplayText . "FLSDateEdit()") (RequiredNamespaceImport) (MethodHeader . "FLSDateEdit()") (ReturnType) (Snippet . "FLSDateEdit()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "HandleTimeZoneSelectionUpdate") (Description . "") (DisplayText . "HandleTimeZoneSelectionUpdate(object sender, SelectedTimeZoneChangedEventArgs args)") (RequiredNamespaceImport) (MethodHeader . "HandleTimeZoneSelectionUpdate(object sender, SelectedTimeZoneChangedEventArgs args)") (ReturnType . "void") (Snippet . "HandleTimeZoneSelectionUpdate(${1:object sender}, ${2:SelectedTimeZoneChangedEventArgs args});$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "IDateTimeInputViewModel") (Description . "Implements an interface for date time object which may use only date or only time or both or nothing.
") (DisplayText . "IDateTimeInputViewModel") (RequiredNamespaceImport) (MethodHeader . "IDateTimeInputViewModel") (ReturnType) (Snippet . "IDateTimeInputViewModel$0") (Kind . "Interface") (IsSuggestionMode . :json-false)) ((CompletionText . "IMaxMinDateTime") (Description . "Implements an interface for minimum and maximum date time classes.
") (DisplayText . "IMaxMinDateTime") (RequiredNamespaceImport) (MethodHeader . "IMaxMinDateTime") (ReturnType) (Snippet . "IMaxMinDateTime$0") (Kind . "Interface") (IsSuggestionMode . :json-false)) ((CompletionText . "inBindingsourceUpdate") (Description . "") (DisplayText . "inBindingsourceUpdate") (RequiredNamespaceImport) (MethodHeader . "inBindingsourceUpdate") (ReturnType . "bool") (Snippet . "inBindingsourceUpdate$0") (Kind . "Field") (IsSuggestionMode . :json-false)) ((CompletionText . "IsInUpdateFilterSelection") (Description . "") (DisplayText . "IsInUpdateFilterSelection") (RequiredNamespaceImport) (MethodHeader . "IsInUpdateFilterSelection") (ReturnType . "SafeAccess") (Snippet . "IsInUpdateFilterSelection$0") (Kind . "Field") (IsSuggestionMode . :json-false)) ((CompletionText . "OutputDateFrameSelectionType") (Description . "") (DisplayText . "OutputDateFrameSelectionType") (RequiredNamespaceImport) (MethodHeader . "OutputDateFrameSelectionType") (ReturnType) (Snippet . "OutputDateFrameSelectionType$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "ReConvertDateTimesEventArgs") (Description . "") (DisplayText . "ReConvertDateTimesEventArgs") (RequiredNamespaceImport) (MethodHeader . "ReConvertDateTimesEventArgs") (ReturnType) (Snippet . "ReConvertDateTimesEventArgs$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ReConvertDateTimesEventArgs") (Description . "") (DisplayText . "ReConvertDateTimesEventArgs(ITimeConverter converter, IProvideToday dateForTimeOfDayConversion)") (RequiredNamespaceImport) (MethodHeader . "ReConvertDateTimesEventArgs(ITimeConverter converter, IProvideToday dateForTimeOfDayConversion)") (ReturnType) (Snippet . "ReConvertDateTimesEventArgs(${1:ITimeConverter converter}, ${2:IProvideToday dateForTimeOfDayConversion})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "RepositoryItemDateEdit") (Description . "
A repository item storing settings specific to a DevExpress.XtraEditors.DateEdit control.") (DisplayText . "RepositoryItemDateEdit") (RequiredNamespaceImport) (MethodHeader . "RepositoryItemDateEdit") (ReturnType) (Snippet . "RepositoryItemDateEdit$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "RepositoryItemDateEdit") (Description . "
Initializes a new DevExpress.XtraEditors.Repository.RepositoryItemDateEdit class instance with default settings. ") (DisplayText . "RepositoryItemDateEdit()") (RequiredNamespaceImport) (MethodHeader . "RepositoryItemDateEdit()") (ReturnType) (Snippet . "RepositoryItemDateEdit()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "RepositoryItemFLSDateEdit") (Description . "TODO: Update summary.
") (DisplayText . "RepositoryItemFLSDateEdit") (RequiredNamespaceImport) (MethodHeader . "RepositoryItemFLSDateEdit") (ReturnType) (Snippet . "RepositoryItemFLSDateEdit$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "RepositoryItemFLSDateEdit") (Description . "") (DisplayText . "RepositoryItemFLSDateEdit()") (RequiredNamespaceImport) (MethodHeader . "RepositoryItemFLSDateEdit()") (ReturnType) (Snippet . "RepositoryItemFLSDateEdit()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ResourceSchedulerDateComparer") (Description . "Implements a model for 
") (DisplayText . "ResourceSchedulerDateComparer") (RequiredNamespaceImport) (MethodHeader . "ResourceSchedulerDateComparer") (ReturnType) (Snippet . "ResourceSchedulerDateComparer$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ResourceSchedulerDateComparer") (Description . "Initializes a new instance of the Fls.VisiTourClient.ViewModel.Scheduler.ResourceSchedulerDateComparer class. 
") (DisplayText . "ResourceSchedulerDateComparer()") (RequiredNamespaceImport) (MethodHeader . "ResourceSchedulerDateComparer()") (ReturnType) (Snippet . "ResourceSchedulerDateComparer()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "SchedulerViewDateTimeSlotModel") (Description . "Implements a model for scheduler view scheduleTable column header.
") (DisplayText . "SchedulerViewDateTimeSlotModel") (RequiredNamespaceImport) (MethodHeader . "SchedulerViewDateTimeSlotModel") (ReturnType) (Snippet . "SchedulerViewDateTimeSlotModel$0") (Kind . "Struct") (IsSuggestionMode . :json-false)) ((CompletionText . "SchedulerViewDateTimeSlotModel") (Description . "") (DisplayText . "SchedulerViewDateTimeSlotModel()") (RequiredNamespaceImport) (MethodHeader . "SchedulerViewDateTimeSlotModel()") (ReturnType) (Snippet . "SchedulerViewDateTimeSlotModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "SchedulerViewDateTimeSlotModel") (Description . "Initializes a new instance of the Fls.VisiTourClient.ViewModel.Scheduler.SchedulerViewDateTimeSlotModel struct.

slot: The date time slot.
isZombieTime: Indicates that slot is a zombie.
width: The slots width.") (DisplayText . "SchedulerViewDateTimeSlotModel(DateTimeSlot slot, bool isZombieTime, double width)") (RequiredNamespaceImport) (MethodHeader . "SchedulerViewDateTimeSlotModel(DateTimeSlot slot, bool isZombieTime, double width)") (ReturnType) (Snippet . "SchedulerViewDateTimeSlotModel(${1:DateTimeSlot slot}, ${2:bool isZombieTime}, ${3:double width})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateBindingsource") (Description . "updates changes from the datasource into the database 

sourceName: name of the source ") (DisplayText . "UpdateBindingsource(string sourceName)") (RequiredNamespaceImport) (MethodHeader . "UpdateBindingsource(string sourceName)") (ReturnType . "void") (Snippet . "UpdateBindingsource(${1:string sourceName});$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateDisciplineSelections") (Description . "") (DisplayText . "UpdateDisciplineSelections()") (RequiredNamespaceImport) (MethodHeader . "UpdateDisciplineSelections()") (ReturnType . "void") (Snippet . "UpdateDisciplineSelections();$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateFilterSelection") (Description . "") (DisplayText . "UpdateFilterSelection(CheckedComboBoxBarItemViewModel filterVM, ReadOnlyCollection<int> selectedItems, PropertyChangedEventHandler propchangedhandler)") (RequiredNamespaceImport) (MethodHeader . "UpdateFilterSelection(CheckedComboBoxBarItemViewModel filterVM, ReadOnlyCollection<int> selectedItems, PropertyChangedEventHandler propchangedhandler)") (ReturnType . "void") (Snippet . "UpdateFilterSelection(${1:CheckedComboBoxBarItemViewModel filterVM}, ${2:ReadOnlyCollection<int> selectedItems}, ${3:PropertyChangedEventHandler propchangedhandler});$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateLabelText") (Description . "") (DisplayText . "UpdateLabelText()") (RequiredNamespaceImport) (MethodHeader . "UpdateLabelText()") (ReturnType . "void") (Snippet . "UpdateLabelText();$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateLists") (Description . "Implements a model for 
") (DisplayText . "UpdateLists<TKey, TData>") (RequiredNamespaceImport) (MethodHeader . "UpdateLists<TKey, TData>") (ReturnType) (Snippet . "UpdateLists<${1:TKey}, ${2:TData}>$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateLists") (Description . "Initializes a new instance of the UpdateLists class.
") (DisplayText . "UpdateLists<TKey, TData>(string primaryKeyPropertyName, string modificationDatePropertyName)") (RequiredNamespaceImport) (MethodHeader . "UpdateLists<TKey, TData>(string primaryKeyPropertyName, string modificationDatePropertyName)") (ReturnType) (Snippet . "UpdateLists<${1:TKey}, ${2:TData}>(${3:string primaryKeyPropertyName}, ${4:string modificationDatePropertyName})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateRegionSelections") (Description . "") (DisplayText . "UpdateRegionSelections()") (RequiredNamespaceImport) (MethodHeader . "UpdateRegionSelections()") (ReturnType . "void") (Snippet . "UpdateRegionSelections();$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateTeamSelections") (Description . "") (DisplayText . "UpdateTeamSelections()") (RequiredNamespaceImport) (MethodHeader . "UpdateTeamSelections()") (ReturnType . "void") (Snippet . "UpdateTeamSelections();$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateVersion") (Description . "") (DisplayText . "UpdateVersion") (RequiredNamespaceImport) (MethodHeader . "UpdateVersion") (ReturnType) (Snippet . "UpdateVersion$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateVersion") (Description . "") (DisplayText . "UpdateVersion()") (RequiredNamespaceImport) (MethodHeader . "UpdateVersion()") (ReturnType) (Snippet . "UpdateVersion()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateVersion") (Description . "") (DisplayText . "UpdateVersion(FileVersionInfo fv)") (RequiredNamespaceImport) (MethodHeader . "UpdateVersion(FileVersionInfo fv)") (ReturnType) (Snippet . "UpdateVersion(${1:FileVersionInfo fv})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateVersion") (Description . "") (DisplayText . "UpdateVersion(string version)") (RequiredNamespaceImport) (MethodHeader . "UpdateVersion(string version)") (ReturnType) (Snippet . "UpdateVersion(${1:string version})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateWorkflowRequest") (Description . "") (DisplayText . "UpdateWorkflowRequest") (RequiredNamespaceImport) (MethodHeader . "UpdateWorkflowRequest") (ReturnType) (Snippet . "UpdateWorkflowRequest$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateWorkflowRequest") (Description . "") (DisplayText . "UpdateWorkflowRequest()") (RequiredNamespaceImport) (MethodHeader . "UpdateWorkflowRequest()") (ReturnType) (Snippet . "UpdateWorkflowRequest()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateWorkflowResponse") (Description . "") (DisplayText . "UpdateWorkflowResponse") (RequiredNamespaceImport) (MethodHeader . "UpdateWorkflowResponse") (ReturnType) (Snippet . "UpdateWorkflowResponse$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateWorkflowResponse") (Description . "") (DisplayText . "UpdateWorkflowResponse()") (RequiredNamespaceImport) (MethodHeader . "UpdateWorkflowResponse()") (ReturnType) (Snippet . "UpdateWorkflowResponse()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ValidateableObject") (Description . "Implements a model for validate objects. The validation methods have to be names like 
\"ValidatableObject.ValidationMethodNamePrefix\"\"PropertyName\" or \"ValidateDisplayName\".
The full declaration has to be: protected string ValidateDisplayName(). 
The validate methods are found automatically.
") (DisplayText . "ValidateableObject") (RequiredNamespaceImport) (MethodHeader . "ValidateableObject") (ReturnType) (Snippet . "ValidateableObject$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ValidateableObject") (Description . "Initializes a new instance of the Fls.Base.ValidateableObject class.
") (DisplayText . "ValidateableObject()") (RequiredNamespaceImport) (MethodHeader . "ValidateableObject()") (ReturnType) (Snippet . "ValidateableObject()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ValidatedVMs") (Description . "Stores the colors of viewmodels before the validating changes their color. Used to revert their color to
it's original value;
") (DisplayText . "ValidatedVMs") (RequiredNamespaceImport) (MethodHeader . "ValidatedVMs") (ReturnType . "Dictionary<DOBindingSource, List<NameViewModel>>") (Snippet . "ValidatedVMs$0") (Kind . "Field") (IsSuggestionMode . :json-false)) ((CompletionText . "ValidateEventArgs") (Description . "") (DisplayText . "ValidateEventArgs") (RequiredNamespaceImport) (MethodHeader . "ValidateEventArgs") (ReturnType) (Snippet . "ValidateEventArgs$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ValidateEventArgs") (Description . "") (DisplayText . "ValidateEventArgs(DOBase data, string field)") (RequiredNamespaceImport) (MethodHeader . "ValidateEventArgs(DOBase data, string field)") (ReturnType) (Snippet . "ValidateEventArgs(${1:DOBase data}, ${2:string field})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "XmlDateTimeSerializationMode") (Description . "") (DisplayText . "XmlDateTimeSerializationMode") (RequiredNamespaceImport) (MethodHeader . "XmlDateTimeSerializationMode") (ReturnType) (Snippet . "XmlDateTimeSerializationMode$0") (Kind . "Enum") (IsSuggestionMode . :json-false))]
[10:17:25] <-- 32 /autocomplete: [((CompletionText . "DateEditExtensionPainter") (Description . "Implements a model for 
") (DisplayText . "DateEditExtensionPainter") (RequiredNamespaceImport) (MethodHeader . "DateEditExtensionPainter") (ReturnType) (Snippet . "DateEditExtensionPainter$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DateEditExtensionPainter") (Description . "") (DisplayText . "DateEditExtensionPainter()") (RequiredNamespaceImport) (MethodHeader . "DateEditExtensionPainter()") (ReturnType) (Snippet . "DateEditExtensionPainter()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateEditExtensionViewInfo") (Description . "") (DisplayText . "DateEditExtensionViewInfo") (RequiredNamespaceImport) (MethodHeader . "DateEditExtensionViewInfo") (ReturnType) (Snippet . "DateEditExtensionViewInfo$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DateEditExtensionViewInfo") (Description . "") (DisplayText . "DateEditExtensionViewInfo(RepositoryItem item)") (RequiredNamespaceImport) (MethodHeader . "DateEditExtensionViewInfo(RepositoryItem item)") (ReturnType) (Snippet . "DateEditExtensionViewInfo(${1:RepositoryItem item})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateSelectorViewModel") (Description . "Implements a model for a date selector.
") (DisplayText . "DateSelectorViewModel") (RequiredNamespaceImport) (MethodHeader . "DateSelectorViewModel") (ReturnType) (Snippet . "DateSelectorViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DateSelectorViewModel") (Description . "Initializes a new instance of the Fls.VisiTourClient.ViewModel.DateSelectorViewModel class.
") (DisplayText . "DateSelectorViewModel()") (RequiredNamespaceImport) (MethodHeader . "DateSelectorViewModel()") (ReturnType) (Snippet . "DateSelectorViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateSelectorViewModel") (Description . "Initializes a new instance of the Fls.VisiTourClient.ViewModel.DateSelectorViewModel class.

startDate: The selected start date.
endDate: The selected end date.") (DisplayText . "DateSelectorViewModel(DateTimeInputViewModel startDate, DateTimeInputViewModel endDate)") (RequiredNamespaceImport) (MethodHeader . "DateSelectorViewModel(DateTimeInputViewModel startDate, DateTimeInputViewModel endDate)") (ReturnType) (Snippet . "DateSelectorViewModel(${1:DateTimeInputViewModel startDate}, ${2:DateTimeInputViewModel endDate})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateSelectorViewModel") (Description . "Initializes a new instance of the Fls.VisiTourClient.ViewModel.DateSelectorViewModel class.

elementId: The elements id.
startDate: The selected start date.
endDate: The selected end date.") (DisplayText . "DateSelectorViewModel(UIItemId elementId, DateTimeInputViewModel startDate, DateTimeInputViewModel endDate)") (RequiredNamespaceImport) (MethodHeader . "DateSelectorViewModel(UIItemId elementId, DateTimeInputViewModel startDate, DateTimeInputViewModel endDate)") (ReturnType) (Snippet . "DateSelectorViewModel(${1:UIItemId elementId}, ${2:DateTimeInputViewModel startDate}, ${3:DateTimeInputViewModel endDate})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime") (RequiredNamespaceImport) (MethodHeader . "DateTime") (ReturnType) (Snippet . "DateTime$0") (Kind . "Struct") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime()") (RequiredNamespaceImport) (MethodHeader . "DateTime()") (ReturnType) (Snippet . "DateTime()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, Calendar calendar)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, Calendar calendar)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:Calendar calendar})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, int hour, int minute, int second)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, int hour, int minute, int second)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, int hour, int minute, int second, Calendar calendar)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, int hour, int minute, int second, Calendar calendar)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:Calendar calendar})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, int hour, int minute, int second, DateTimeKind kind)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, int hour, int minute, int second, DateTimeKind kind)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:DateTimeKind kind})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:int millisecond})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, Calendar calendar)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, Calendar calendar)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:int millisecond}, ${8:Calendar calendar})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, Calendar calendar, DateTimeKind kind)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, Calendar calendar, DateTimeKind kind)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:int millisecond}, ${8:Calendar calendar}, ${9:DateTimeKind kind})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, DateTimeKind kind)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, DateTimeKind kind)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:int millisecond}, ${8:DateTimeKind kind})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(long ticks)") (RequiredNamespaceImport) (MethodHeader . "DateTime(long ticks)") (ReturnType) (Snippet . "DateTime(${1:long ticks})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(long ticks, DateTimeKind kind)") (RequiredNamespaceImport) (MethodHeader . "DateTime(long ticks, DateTimeKind kind)") (ReturnType) (Snippet . "DateTime(${1:long ticks}, ${2:DateTimeKind kind})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeConverter") (Description . "") (DisplayText . "DateTimeConverter") (RequiredNamespaceImport) (MethodHeader . "DateTimeConverter") (ReturnType) (Snippet . "DateTimeConverter$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeConverter") (Description . "") (DisplayText . "DateTimeConverter()") (RequiredNamespaceImport) (MethodHeader . "DateTimeConverter()") (ReturnType) (Snippet . "DateTimeConverter()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeEditView") (Description . "Implements a forms user control based on a view model.
This control 
") (DisplayText . "DateTimeEditView") (RequiredNamespaceImport) (MethodHeader . "DateTimeEditView") (ReturnType) (Snippet . "DateTimeEditView$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeEditView") (Description . "Initializes a new instance of the Fls.Controls.Forms.DevExpressBase.DateTimeEditView class.
") (DisplayText . "DateTimeEditView()") (RequiredNamespaceImport) (MethodHeader . "DateTimeEditView()") (ReturnType) (Snippet . "DateTimeEditView()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeEditView") (Description . "Initializes a new instance of the Fls.Controls.Forms.DevExpressBase.DateTimeEditView class.

viewModel: The used view model ") (DisplayText . "DateTimeEditView(DateTimeInputViewModel viewModel)") (RequiredNamespaceImport) (MethodHeader . "DateTimeEditView(DateTimeInputViewModel viewModel)") (ReturnType) (Snippet . "DateTimeEditView(${1:DateTimeInputViewModel viewModel})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeHelper") (Description . "") (DisplayText . "DateTimeHelper") (RequiredNamespaceImport) (MethodHeader . "DateTimeHelper") (ReturnType) (Snippet . "DateTimeHelper$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeInputViewModel") (Description . "Implements a model for date time input.
") (DisplayText . "DateTimeInputViewModel") (RequiredNamespaceImport) (MethodHeader . "DateTimeInputViewModel") (ReturnType) (Snippet . "DateTimeInputViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeInputViewModel") (Description . "Initializes a new instance of the Fls.UI.Base.DateTimeInputViewModel class.
") (DisplayText . "DateTimeInputViewModel()") (RequiredNamespaceImport) (MethodHeader . "DateTimeInputViewModel()") (ReturnType) (Snippet . "DateTimeInputViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeInputViewModel") (Description . "Initializes a new instance of the Fls.UI.Base.DateTimeInputViewModel class.

elementId: The elements id.") (DisplayText . "DateTimeInputViewModel(UIItemId elementId)") (RequiredNamespaceImport) (MethodHeader . "DateTimeInputViewModel(UIItemId elementId)") (ReturnType) (Snippet . "DateTimeInputViewModel(${1:UIItemId elementId})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeInputViewModel") (Description . "Initializes a new instance of the Fls.UI.Base.DateTimeInputViewModel class.

elementId: The elements id.
minDate: The minimum selectable date.
maxDate: The maximum selectable date.
selectedDate: The selected date.") (DisplayText . "DateTimeInputViewModel(UIItemId elementId, DateTime minDate, DateTime maxDate, DateTime selectedDate)") (RequiredNamespaceImport) (MethodHeader . "DateTimeInputViewModel(UIItemId elementId, DateTime minDate, DateTime maxDate, DateTime selectedDate)") (ReturnType) (Snippet . "DateTimeInputViewModel(${1:UIItemId elementId}, ${2:DateTime minDate}, ${3:DateTime maxDate}, ${4:DateTime selectedDate})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeInputViewModel") (Description . "Initializes a new instance of the Fls.UI.Base.DateTimeInputViewModel class.

elementId: The elements id.
selectedDate: The selected date.") (DisplayText . "DateTimeInputViewModel(UIItemId elementId, DateTime selectedDate)") (RequiredNamespaceImport) (MethodHeader . "DateTimeInputViewModel(UIItemId elementId, DateTime selectedDate)") (ReturnType) (Snippet . "DateTimeInputViewModel(${1:UIItemId elementId}, ${2:DateTime selectedDate})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeKind") (Description . "") (DisplayText . "DateTimeKind") (RequiredNamespaceImport) (MethodHeader . "DateTimeKind") (ReturnType) (Snippet . "DateTimeKind$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset") (ReturnType) (Snippet . "DateTimeOffset$0") (Kind . "Struct") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset()") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset()") (ReturnType) (Snippet . "DateTimeOffset()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset(DateTime dateTime)") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset(DateTime dateTime)") (ReturnType) (Snippet . "DateTimeOffset(${1:DateTime dateTime})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset(DateTime dateTime, TimeSpan offset)") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset(DateTime dateTime, TimeSpan offset)") (ReturnType) (Snippet . "DateTimeOffset(${1:DateTime dateTime}, ${2:TimeSpan offset})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset(int year, int month, int day, int hour, int minute, int second, int millisecond, Calendar calendar, TimeSpan offset)") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset(int year, int month, int day, int hour, int minute, int second, int millisecond, Calendar calendar, TimeSpan offset)") (ReturnType) (Snippet . "DateTimeOffset(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:int millisecond}, ${8:Calendar calendar}, ${9:TimeSpan offset})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset(int year, int month, int day, int hour, int minute, int second, int millisecond, TimeSpan offset)") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset(int year, int month, int day, int hour, int minute, int second, int millisecond, TimeSpan offset)") (ReturnType) (Snippet . "DateTimeOffset(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:int millisecond}, ${8:TimeSpan offset})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset(int year, int month, int day, int hour, int minute, int second, TimeSpan offset)") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset(int year, int month, int day, int hour, int minute, int second, TimeSpan offset)") (ReturnType) (Snippet . "DateTimeOffset(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:TimeSpan offset})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset(long ticks, TimeSpan offset)") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset(long ticks, TimeSpan offset)") (ReturnType) (Snippet . "DateTimeOffset(${1:long ticks}, ${2:TimeSpan offset})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffsetConverter") (Description . "") (DisplayText . "DateTimeOffsetConverter") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffsetConverter") (ReturnType) (Snippet . "DateTimeOffsetConverter$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffsetConverter") (Description . "") (DisplayText . "DateTimeOffsetConverter()") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffsetConverter()") (ReturnType) (Snippet . "DateTimeOffsetConverter()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeSlot") (Description . "Implements a model for time intervals. 
") (DisplayText . "DateTimeSlot") (RequiredNamespaceImport) (MethodHeader . "DateTimeSlot") (ReturnType) (Snippet . "DateTimeSlot$0") (Kind . "Struct") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeSlot") (Description . "") (DisplayText . "DateTimeSlot()") (RequiredNamespaceImport) (MethodHeader . "DateTimeSlot()") (ReturnType) (Snippet . "DateTimeSlot()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeSlot") (Description . "Initializes a new instance of the Fls.Base.DateTimeSlot structure. 

start: The start time. 
duration: The duration. ") (DisplayText . "DateTimeSlot(DateTime start, DateTime end)") (RequiredNamespaceImport) (MethodHeader . "DateTimeSlot(DateTime start, DateTime end)") (ReturnType) (Snippet . "DateTimeSlot(${1:DateTime start}, ${2:DateTime end})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeSlot") (Description . "Initializes a new instance of the Fls.Base.DateTimeSlot structure. 

start: The start time. 
duration: The duration. ") (DisplayText . "DateTimeSlot(DateTime start, TimeSpan duration)") (RequiredNamespaceImport) (MethodHeader . "DateTimeSlot(DateTime start, TimeSpan duration)") (ReturnType) (Snippet . "DateTimeSlot(${1:DateTime start}, ${2:TimeSpan duration})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "AutoUpdateEntity") (Description . "") (DisplayText . "AutoUpdateEntity(string entityName, object id)") (RequiredNamespaceImport) (MethodHeader . "AutoUpdateEntity(string entityName, object id)") (ReturnType . "void") (Snippet . "AutoUpdateEntity(${1:string entityName}, ${2:object id});$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "BookResourceInDateFrameViewModel") (Description . "") (DisplayText . "BookResourceInDateFrameViewModel") (RequiredNamespaceImport) (MethodHeader . "BookResourceInDateFrameViewModel") (ReturnType) (Snippet . "BookResourceInDateFrameViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "BookResourceInDateFrameViewModel") (Description . "") (DisplayText . "BookResourceInDateFrameViewModel(TourModel mainTour, ConcurrentDictionary<int, DOEngineer> availableEngineeres, DateTime startDate, DateTime endDate, DOEngineer changeEngineer)") (RequiredNamespaceImport) (MethodHeader . "BookResourceInDateFrameViewModel(TourModel mainTour, ConcurrentDictionary<int, DOEngineer> availableEngineeres, DateTime startDate, DateTime endDate, DOEngineer changeEngineer)") (ReturnType) (Snippet . "BookResourceInDateFrameViewModel(${1:TourModel mainTour}, ${2:ConcurrentDictionary<int, DOEngineer> availableEngineeres}, ${3:DateTime startDate}, ${4:DateTime endDate}, ${5:DOEngineer changeEngineer})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ClientUpdater") (Description . "") (DisplayText . "ClientUpdater") (RequiredNamespaceImport) (MethodHeader . "ClientUpdater") (ReturnType) (Snippet . "ClientUpdater$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ClientUpdater") (Description . "") (DisplayText . "ClientUpdater(string[] cmdArgs)") (RequiredNamespaceImport) (MethodHeader . "ClientUpdater(string[] cmdArgs)") (ReturnType) (Snippet . "ClientUpdater(${1:string[] cmdArgs})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataAccess") (Description . "") (DisplayText . "DataAccess") (RequiredNamespaceImport) (MethodHeader . "DataAccess") (ReturnType) (Snippet . "DataAccess$0") (Kind . "Namespace") (IsSuggestionMode . :json-false)) ((CompletionText . "DataBaseRequiredPropertiesType") (Description . "") (DisplayText . "DataBaseRequiredPropertiesType") (RequiredNamespaceImport) (MethodHeader . "DataBaseRequiredPropertiesType") (ReturnType) (Snippet . "DataBaseRequiredPropertiesType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataBaseRequiredPropertiesType") (Description . "DataBaseRequiredPropertiesType class constructor
") (DisplayText . "DataBaseRequiredPropertiesType()") (RequiredNamespaceImport) (MethodHeader . "DataBaseRequiredPropertiesType()") (ReturnType) (Snippet . "DataBaseRequiredPropertiesType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataConnection") (Description . "TODO: Update summary.
") (DisplayText . "DataConnection") (RequiredNamespaceImport) (MethodHeader . "DataConnection") (ReturnType) (Snippet . "DataConnection$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataConnection") (Description . "") (DisplayText . "DataConnection()") (RequiredNamespaceImport) (MethodHeader . "DataConnection()") (ReturnType) (Snippet . "DataConnection()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataConnection") (Description . "") (DisplayText . "DataConnection(DOBindingSource lookupBindingSource, DProperty propertyName, string summary, DProperty lookedUpProperty)") (RequiredNamespaceImport) (MethodHeader . "DataConnection(DOBindingSource lookupBindingSource, DProperty propertyName, string summary, DProperty lookedUpProperty)") (ReturnType) (Snippet . "DataConnection(${1:DOBindingSource lookupBindingSource}, ${2:DProperty propertyName}, ${3:string summary}, ${4:DProperty lookedUpProperty})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataConnection") (Description . "") (DisplayText . "DataConnection(DODataView lookupBindingSource, DProperty propertyName, string summary, DProperty lookedUpProperty)") (RequiredNamespaceImport) (MethodHeader . "DataConnection(DODataView lookupBindingSource, DProperty propertyName, string summary, DProperty lookedUpProperty)") (ReturnType) (Snippet . "DataConnection(${1:DODataView lookupBindingSource}, ${2:DProperty propertyName}, ${3:string summary}, ${4:DProperty lookedUpProperty})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataContext") (Description . "Gets or sets the data-context, used to decide which view to use for this viewmodel. Values are the same as
the \"AvailableTypes\" enum in the 'Layout xsd'
") (DisplayText . "DataContext") (RequiredNamespaceImport) (MethodHeader . "DataContext") (ReturnType . "eControlType") (Snippet . "DataContext$0") (Kind . "Property") (IsSuggestionMode . :json-false)) ((CompletionText . "DataDependency") (Description . "") (DisplayText . "DataDependency") (RequiredNamespaceImport) (MethodHeader . "DataDependency") (ReturnType . "EventHandler<DataDependencyEventArgs>") (Snippet . "DataDependency$0") (Kind . "Event") (IsSuggestionMode . :json-false)) ((CompletionText . "DataDependencyEventArgs") (Description . "Implements a model for request event arguments.
") (DisplayText . "DataDependencyEventArgs") (RequiredNamespaceImport) (MethodHeader . "DataDependencyEventArgs") (ReturnType) (Snippet . "DataDependencyEventArgs$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataDependencyEventArgs") (Description . "Initializes a new instance of the Fls.UI.Base.UserInformationEventArgs class.

request: An user request.") (DisplayText . "DataDependencyEventArgs(DataDependencyViewModel infoViewModel)") (RequiredNamespaceImport) (MethodHeader . "DataDependencyEventArgs(DataDependencyViewModel infoViewModel)") (ReturnType) (Snippet . "DataDependencyEventArgs(${1:DataDependencyViewModel infoViewModel})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataDependencyViewModel") (Description . "") (DisplayText . "DataDependencyViewModel") (RequiredNamespaceImport) (MethodHeader . "DataDependencyViewModel") (ReturnType) (Snippet . "DataDependencyViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataDependencyViewModel") (Description . "") (DisplayText . "DataDependencyViewModel(DOBindingSource source, IEnumerable<string> ignoreEntitiesList)") (RequiredNamespaceImport) (MethodHeader . "DataDependencyViewModel(DOBindingSource source, IEnumerable<string> ignoreEntitiesList)") (ReturnType) (Snippet . "DataDependencyViewModel(${1:DOBindingSource source}, ${2:IEnumerable<string> ignoreEntitiesList})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataErrorsChangedEventArgs") (Description . "") (DisplayText . "DataErrorsChangedEventArgs") (RequiredNamespaceImport) (MethodHeader . "DataErrorsChangedEventArgs") (ReturnType) (Snippet . "DataErrorsChangedEventArgs$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataErrorsChangedEventArgs") (Description . "") (DisplayText . "DataErrorsChangedEventArgs(string propertyName)") (RequiredNamespaceImport) (MethodHeader . "DataErrorsChangedEventArgs(string propertyName)") (ReturnType) (Snippet . "DataErrorsChangedEventArgs(${1:string propertyName})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataGroupType") (Description . "") (DisplayText . "DataGroupType") (RequiredNamespaceImport) (MethodHeader . "DataGroupType") (ReturnType) (Snippet . "DataGroupType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataGroupType") (Description . "DataGroupType class constructor
") (DisplayText . "DataGroupType()") (RequiredNamespaceImport) (MethodHeader . "DataGroupType()") (ReturnType) (Snippet . "DataGroupType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataItemType") (Description . "") (DisplayText . "DataItemType") (RequiredNamespaceImport) (MethodHeader . "DataItemType") (ReturnType) (Snippet . "DataItemType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataItemType") (Description . "") (DisplayText . "DataItemType()") (RequiredNamespaceImport) (MethodHeader . "DataItemType()") (ReturnType) (Snippet . "DataItemType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataItemTypeCreateStyle") (Description . "") (DisplayText . "DataItemTypeCreateStyle") (RequiredNamespaceImport) (MethodHeader . "DataItemTypeCreateStyle") (ReturnType) (Snippet . "DataItemTypeCreateStyle$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DataItemTypeEntityViewSourceMode") (Description . "") (DisplayText . "DataItemTypeEntityViewSourceMode") (RequiredNamespaceImport) (MethodHeader . "DataItemTypeEntityViewSourceMode") (ReturnType) (Snippet . "DataItemTypeEntityViewSourceMode$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DataItemTypeInitAction") (Description . "") (DisplayText . "DataItemTypeInitAction") (RequiredNamespaceImport) (MethodHeader . "DataItemTypeInitAction") (ReturnType) (Snippet . "DataItemTypeInitAction$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DataMisalignedException") (Description . "") (DisplayText . "DataMisalignedException") (RequiredNamespaceImport) (MethodHeader . "DataMisalignedException") (ReturnType) (Snippet . "DataMisalignedException$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataMisalignedException") (Description . "") (DisplayText . "DataMisalignedException()") (RequiredNamespaceImport) (MethodHeader . "DataMisalignedException()") (ReturnType) (Snippet . "DataMisalignedException()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataMisalignedException") (Description . "") (DisplayText . "DataMisalignedException(string message)") (RequiredNamespaceImport) (MethodHeader . "DataMisalignedException(string message)") (ReturnType) (Snippet . "DataMisalignedException(${1:string message})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataMisalignedException") (Description . "") (DisplayText . "DataMisalignedException(string message, Exception innerException)") (RequiredNamespaceImport) (MethodHeader . "DataMisalignedException(string message, Exception innerException)") (ReturnType) (Snippet . "DataMisalignedException(${1:string message}, ${2:Exception innerException})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataModel") (Description . "Implements a model for 
") (DisplayText . "DataModel") (RequiredNamespaceImport) (MethodHeader . "DataModel") (ReturnType) (Snippet . "DataModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataModel") (Description . "") (DisplayText . "DataModel()") (RequiredNamespaceImport) (MethodHeader . "DataModel()") (ReturnType) (Snippet . "DataModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObject") (Description . "") (DisplayText . "DataObject") (RequiredNamespaceImport) (MethodHeader . "DataObject") (ReturnType) (Snippet . "DataObject$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObject") (Description . "") (DisplayText . "DataObject()") (RequiredNamespaceImport) (MethodHeader . "DataObject()") (ReturnType) (Snippet . "DataObject()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectAttribute") (Description . "") (DisplayText . "DataObjectAttribute") (RequiredNamespaceImport) (MethodHeader . "DataObjectAttribute") (ReturnType) (Snippet . "DataObjectAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectAttribute") (Description . "") (DisplayText . "DataObjectAttribute()") (RequiredNamespaceImport) (MethodHeader . "DataObjectAttribute()") (ReturnType) (Snippet . "DataObjectAttribute()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectAttribute") (Description . "") (DisplayText . "DataObjectAttribute(bool isDataObject)") (RequiredNamespaceImport) (MethodHeader . "DataObjectAttribute(bool isDataObject)") (ReturnType) (Snippet . "DataObjectAttribute(${1:bool isDataObject})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectClock") (Description . "") (DisplayText . "DataObjectClock<T>") (RequiredNamespaceImport) (MethodHeader . "DataObjectClock<T>") (ReturnType) (Snippet . "DataObjectClock<${1:T}>$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectClock") (Description . "") (DisplayText . "DataObjectClock<T>(T doObject, ITimeExtractor extractor, IZonedClock unbiasedLocalTime)") (RequiredNamespaceImport) (MethodHeader . "DataObjectClock<T>(T doObject, ITimeExtractor extractor, IZonedClock unbiasedLocalTime)") (ReturnType) (Snippet . "DataObjectClock<${1:T}>(${2:T doObject}, ${3:ITimeExtractor extractor}, ${4:IZonedClock unbiasedLocalTime})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectFieldAttribute") (Description . "") (DisplayText . "DataObjectFieldAttribute") (RequiredNamespaceImport) (MethodHeader . "DataObjectFieldAttribute") (ReturnType) (Snippet . "DataObjectFieldAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectFieldAttribute") (Description . "") (DisplayText . "DataObjectFieldAttribute(bool primaryKey)") (RequiredNamespaceImport) (MethodHeader . "DataObjectFieldAttribute(bool primaryKey)") (ReturnType) (Snippet . "DataObjectFieldAttribute(${1:bool primaryKey})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectFieldAttribute") (Description . "") (DisplayText . "DataObjectFieldAttribute(bool primaryKey, bool isIdentity)") (RequiredNamespaceImport) (MethodHeader . "DataObjectFieldAttribute(bool primaryKey, bool isIdentity)") (ReturnType) (Snippet . "DataObjectFieldAttribute(${1:bool primaryKey}, ${2:bool isIdentity})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectFieldAttribute") (Description . "") (DisplayText . "DataObjectFieldAttribute(bool primaryKey, bool isIdentity, bool isNullable)") (RequiredNamespaceImport) (MethodHeader . "DataObjectFieldAttribute(bool primaryKey, bool isIdentity, bool isNullable)") (ReturnType) (Snippet . "DataObjectFieldAttribute(${1:bool primaryKey}, ${2:bool isIdentity}, ${3:bool isNullable})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectFieldAttribute") (Description . "") (DisplayText . "DataObjectFieldAttribute(bool primaryKey, bool isIdentity, bool isNullable, int length)") (RequiredNamespaceImport) (MethodHeader . "DataObjectFieldAttribute(bool primaryKey, bool isIdentity, bool isNullable, int length)") (ReturnType) (Snippet . "DataObjectFieldAttribute(${1:bool primaryKey}, ${2:bool isIdentity}, ${3:bool isNullable}, ${4:int length})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectMethodAttribute") (Description . "") (DisplayText . "DataObjectMethodAttribute") (RequiredNamespaceImport) (MethodHeader . "DataObjectMethodAttribute") (ReturnType) (Snippet . "DataObjectMethodAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectMethodAttribute") (Description . "") (DisplayText . "DataObjectMethodAttribute(DataObjectMethodType methodType)") (RequiredNamespaceImport) (MethodHeader . "DataObjectMethodAttribute(DataObjectMethodType methodType)") (ReturnType) (Snippet . "DataObjectMethodAttribute(${1:DataObjectMethodType methodType})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectMethodAttribute") (Description . "") (DisplayText . "DataObjectMethodAttribute(DataObjectMethodType methodType, bool isDefault)") (RequiredNamespaceImport) (MethodHeader . "DataObjectMethodAttribute(DataObjectMethodType methodType, bool isDefault)") (ReturnType) (Snippet . "DataObjectMethodAttribute(${1:DataObjectMethodType methodType}, ${2:bool isDefault})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectMethodType") (Description . "") (DisplayText . "DataObjectMethodType") (RequiredNamespaceImport) (MethodHeader . "DataObjectMethodType") (ReturnType) (Snippet . "DataObjectMethodType$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectTimeInformation") (Description . "") (DisplayText . "DataObjectTimeInformation") (RequiredNamespaceImport) (MethodHeader . "DataObjectTimeInformation") (ReturnType) (Snippet . "DataObjectTimeInformation$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectTimeInformation") (Description . "") (DisplayText . "DataObjectTimeInformation(TimeZoneInfo timeZone, IProvideToday dateForTimeOfDayConversion, TimeZoneAlias alias)") (RequiredNamespaceImport) (MethodHeader . "DataObjectTimeInformation(TimeZoneInfo timeZone, IProvideToday dateForTimeOfDayConversion, TimeZoneAlias alias)") (ReturnType) (Snippet . "DataObjectTimeInformation(${1:TimeZoneInfo timeZone}, ${2:IProvideToday dateForTimeOfDayConversion}, ${3:TimeZoneAlias alias})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectTimeInformationExtractor") (Description . "") (DisplayText . "DataObjectTimeInformationExtractor") (RequiredNamespaceImport) (MethodHeader . "DataObjectTimeInformationExtractor") (ReturnType) (Snippet . "DataObjectTimeInformationExtractor$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectTimeInformationExtractor") (Description . "") (DisplayText . "DataObjectTimeInformationExtractor(TimeZoneInfo fallBackTimeZone, IProvideToday fallBackDateForTimeOfDayConversion)") (RequiredNamespaceImport) (MethodHeader . "DataObjectTimeInformationExtractor(TimeZoneInfo fallBackTimeZone, IProvideToday fallBackDateForTimeOfDayConversion)") (ReturnType) (Snippet . "DataObjectTimeInformationExtractor(${1:TimeZoneInfo fallBackTimeZone}, ${2:IProvideToday fallBackDateForTimeOfDayConversion})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectToDateMapper") (Description . "") (DisplayText . "DataObjectToDateMapper") (RequiredNamespaceImport) (MethodHeader . "DataObjectToDateMapper") (ReturnType) (Snippet . "DataObjectToDateMapper$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectToDateMapper") (Description . "") (DisplayText . "DataObjectToDateMapper(IProvideToday fallBackToday)") (RequiredNamespaceImport) (MethodHeader . "DataObjectToDateMapper(IProvideToday fallBackToday)") (ReturnType) (Snippet . "DataObjectToDateMapper(${1:IProvideToday fallBackToday})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataOutputType") (Description . "") (DisplayText . "DataOutputType") (RequiredNamespaceImport) (MethodHeader . "DataOutputType") (ReturnType) (Snippet . "DataOutputType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataOutputType") (Description . "DataOutputType class constructor
") (DisplayText . "DataOutputType()") (RequiredNamespaceImport) (MethodHeader . "DataOutputType()") (ReturnType) (Snippet . "DataOutputType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataRequestModel") (Description . "") (DisplayText . "DataRequestModel<Index, Data>") (RequiredNamespaceImport) (MethodHeader . "DataRequestModel<Index, Data>") (ReturnType) (Snippet . "DataRequestModel<${1:Index}, ${2:Data}>$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataRequestModel") (Description . "") (DisplayText . "DataRequestModel<Index, Data>()") (RequiredNamespaceImport) (MethodHeader . "DataRequestModel<Index, Data>()") (ReturnType) (Snippet . "DataRequestModel<${1:Index}, ${2:Data}>()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataSourceActionCanExe") (Description . "") (DisplayText . "DataSourceActionCanExe(Parameters param)") (RequiredNamespaceImport) (MethodHeader . "DataSourceActionCanExe(Parameters param)") (ReturnType . "bool") (Snippet . "DataSourceActionCanExe(${1:Parameters param})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataSourceActionExe") (Description . "") (DisplayText . "DataSourceActionExe(Parameters param)") (RequiredNamespaceImport) (MethodHeader . "DataSourceActionExe(Parameters param)") (ReturnType . "void") (Snippet . "DataSourceActionExe(${1:Parameters param});$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataSourceActionType") (Description . "") (DisplayText . "DataSourceActionType") (RequiredNamespaceImport) (MethodHeader . "DataSourceActionType") (ReturnType) (Snippet . "DataSourceActionType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataSourceActionType") (Description . "") (DisplayText . "DataSourceActionType()") (RequiredNamespaceImport) (MethodHeader . "DataSourceActionType()") (ReturnType) (Snippet . "DataSourceActionType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataSourceActionTypeType") (Description . "") (DisplayText . "DataSourceActionTypeType") (RequiredNamespaceImport) (MethodHeader . "DataSourceActionTypeType") (ReturnType) (Snippet . "DataSourceActionTypeType$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DataSourceErrorEventArgs") (Description . "") (DisplayText . "DataSourceErrorEventArgs") (RequiredNamespaceImport) (MethodHeader . "DataSourceErrorEventArgs") (ReturnType) (Snippet . "DataSourceErrorEventArgs$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataSourceErrorEventArgs") (Description . "") (DisplayText . "DataSourceErrorEventArgs(string textId)") (RequiredNamespaceImport) (MethodHeader . "DataSourceErrorEventArgs(string textId)") (ReturnType) (Snippet . "DataSourceErrorEventArgs(${1:string textId})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataSourceErrorEventArgs") (Description . "") (DisplayText . "DataSourceErrorEventArgs(string textId, int code)") (RequiredNamespaceImport) (MethodHeader . "DataSourceErrorEventArgs(string textId, int code)") (ReturnType) (Snippet . "DataSourceErrorEventArgs(${1:string textId}, ${2:int code})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataSourceNameAttribute") (Description . "Implements an attribute for a subversion version.
") (DisplayText . "DataSourceNameAttribute") (RequiredNamespaceImport) (MethodHeader . "DataSourceNameAttribute") (ReturnType) (Snippet . "DataSourceNameAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataSourceNameAttribute") (Description . "Initializes a new instance of the Fls.VisiTourClient.ViewModel.DataSourceNameAttribute class.

svnRevision: The subversion version.") (DisplayText . "DataSourceNameAttribute(string name)") (RequiredNamespaceImport) (MethodHeader . "DataSourceNameAttribute(string name)") (ReturnType) (Snippet . "DataSourceNameAttribute(${1:string name})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DatasourceRequestId") (Description . "") (DisplayText . "DatasourceRequestId") (RequiredNamespaceImport) (MethodHeader . "DatasourceRequestId") (ReturnType . "string") (Snippet . "DatasourceRequestId$0") (Kind . "Const") (IsSuggestionMode . :json-false)) ((CompletionText . "DataSources") (Description . "") (DisplayText . "DataSources") (RequiredNamespaceImport) (MethodHeader . "DataSources") (ReturnType) (Snippet . "DataSources$0") (Kind . "Namespace") (IsSuggestionMode . :json-false)) ((CompletionText . "DataTableSourceViewModel") (Description . "") (DisplayText . "DataTableSourceViewModel") (RequiredNamespaceImport) (MethodHeader . "DataTableSourceViewModel") (ReturnType) (Snippet . "DataTableSourceViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataTableSourceViewModel") (Description . "") (DisplayText . "DataTableSourceViewModel()") (RequiredNamespaceImport) (MethodHeader . "DataTableSourceViewModel()") (ReturnType) (Snippet . "DataTableSourceViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataTableViewModel") (Description . "Implements a model for data table.
") (DisplayText . "DataTableViewModel") (RequiredNamespaceImport) (MethodHeader . "DataTableViewModel") (ReturnType) (Snippet . "DataTableViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataTableViewModel") (Description . "Initializes a new instance of the Fls.UI.Base.DataTableViewModel class.
") (DisplayText . "DataTableViewModel()") (RequiredNamespaceImport) (MethodHeader . "DataTableViewModel()") (ReturnType) (Snippet . "DataTableViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataTableWithColoringViewModel") (Description . "TODO: Update summary.
") (DisplayText . "DataTableWithColoringViewModel") (RequiredNamespaceImport) (MethodHeader . "DataTableWithColoringViewModel") (ReturnType) (Snippet . "DataTableWithColoringViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataTableWithColoringViewModel") (Description . "Initializes a new instance of the Fls.UI.Base.DataTableWithColoringViewModel class.
") (DisplayText . "DataTableWithColoringViewModel()") (RequiredNamespaceImport) (MethodHeader . "DataTableWithColoringViewModel()") (ReturnType) (Snippet . "DataTableWithColoringViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataTransfersTypes") (Description . "The available data transfer types.
") (DisplayText . "DataTransfersTypes") (RequiredNamespaceImport) (MethodHeader . "DataTransfersTypes") (ReturnType) (Snippet . "DataTransfersTypes$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DDataBase") (Description . "") (DisplayText . "DDataBase") (RequiredNamespaceImport) (MethodHeader . "DDataBase") (ReturnType) (Snippet . "DDataBase$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DDataBase") (Description . "") (DisplayText . "DDataBase()") (RequiredNamespaceImport) (MethodHeader . "DDataBase()") (ReturnType) (Snippet . "DDataBase()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DisplayTextEvaluator") (Description . "") (DisplayText . "DisplayTextEvaluator") (RequiredNamespaceImport) (MethodHeader . "DisplayTextEvaluator") (ReturnType) (Snippet . "DisplayTextEvaluator$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DisplayTextEvaluator") (Description . "") (DisplayText . "DisplayTextEvaluator(IDisplayTextEvaluatorOwner owner)") (RequiredNamespaceImport) (MethodHeader . "DisplayTextEvaluator(IDisplayTextEvaluatorOwner owner)") (ReturnType) (Snippet . "DisplayTextEvaluator(${1:IDisplayTextEvaluatorOwner owner})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DLocalizationType") (Description . "") (DisplayText . "DLocalizationType") (RequiredNamespaceImport) (MethodHeader . "DLocalizationType") (ReturnType) (Snippet . "DLocalizationType$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DOArticle") (Description . "") (DisplayText . "DOArticle") (RequiredNamespaceImport) (MethodHeader . "DOArticle") (ReturnType) (Snippet . "DOArticle$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOArticle") (Description . "") (DisplayText . "DOArticle()") (RequiredNamespaceImport) (MethodHeader . "DOArticle()") (ReturnType) (Snippet . "DOArticle()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOAttachmentFilter") (Description . "") (DisplayText . "DOAttachmentFilter") (RequiredNamespaceImport) (MethodHeader . "DOAttachmentFilter") (ReturnType) (Snippet . "DOAttachmentFilter$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOAttachmentFilter") (Description . "") (DisplayText . "DOAttachmentFilter()") (RequiredNamespaceImport) (MethodHeader . "DOAttachmentFilter()") (ReturnType) (Snippet . "DOAttachmentFilter()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOAttachments") (Description . "") (DisplayText . "DOAttachments") (RequiredNamespaceImport) (MethodHeader . "DOAttachments") (ReturnType) (Snippet . "DOAttachments$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOAttachments") (Description . "") (DisplayText . "DOAttachments()") (RequiredNamespaceImport) (MethodHeader . "DOAttachments()") (ReturnType) (Snippet . "DOAttachments()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOCallstate") (Description . "") (DisplayText . "DOCallstate") (RequiredNamespaceImport) (MethodHeader . "DOCallstate") (ReturnType) (Snippet . "DOCallstate$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOCallstate") (Description . "") (DisplayText . "DOCallstate()") (RequiredNamespaceImport) (MethodHeader . "DOCallstate()") (ReturnType) (Snippet . "DOCallstate()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOClientUpdateHistory") (Description . "") (DisplayText . "DOClientUpdateHistory") (RequiredNamespaceImport) (MethodHeader . "DOClientUpdateHistory") (ReturnType) (Snippet . "DOClientUpdateHistory$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOClientUpdateHistory") (Description . "") (DisplayText . "DOClientUpdateHistory()") (RequiredNamespaceImport) (MethodHeader . "DOClientUpdateHistory()") (ReturnType) (Snippet . "DOClientUpdateHistory()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DoDataLoadingStatusChangedAction") (Description . "") (DisplayText . "DoDataLoadingStatusChangedAction(LoadingStatus oldValue, LoadingStatus current)") (RequiredNamespaceImport) (MethodHeader . "DoDataLoadingStatusChangedAction(LoadingStatus oldValue, LoadingStatus current)") (ReturnType . "void") (Snippet . "DoDataLoadingStatusChangedAction(${1:LoadingStatus oldValue}, ${2:LoadingStatus current});$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DODataSource") (Description . "") (DisplayText . "DODataSource") (RequiredNamespaceImport) (MethodHeader . "DODataSource") (ReturnType) (Snippet . "DODataSource$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DODataSource") (Description . "") (DisplayText . "DODataSource(DEntity entity, IDOBaseRepository rep, IEntityValidation validator = null, eInitAction initAction = LoadAll)") (RequiredNamespaceImport) (MethodHeader . "DODataSource(DEntity entity, IDOBaseRepository rep, IEntityValidation validator = null, eInitAction initAction = LoadAll)") (ReturnType) (Snippet . "DODataSource(${1:DEntity entity}, ${2:IDOBaseRepository rep}, ${3:IEntityValidation validator = null}, ${4:eInitAction initAction = LoadAll})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DODataSource") (Description . "") (DisplayText . "DODataSource(DEntity entity, IDOBaseRepository rep, IEnumerable<DProperty> propertiesToRead, IEntityValidation validator = null)") (RequiredNamespaceImport) (MethodHeader . "DODataSource(DEntity entity, IDOBaseRepository rep, IEnumerable<DProperty> propertiesToRead, IEntityValidation validator = null)") (ReturnType) (Snippet . "DODataSource(${1:DEntity entity}, ${2:IDOBaseRepository rep}, ${3:IEnumerable<DProperty> propertiesToRead}, ${4:IEntityValidation validator = null})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DODataSource") (Description . "") (DisplayText . "DODataSource(DEntity entity, IDOBaseRepository rep, IEnumerable<string> propertyNames, IEntityValidation validator = null, eInitAction initAction = LoadAll)") (RequiredNamespaceImport) (MethodHeader . "DODataSource(DEntity entity, IDOBaseRepository rep, IEnumerable<string> propertyNames, IEntityValidation validator = null, eInitAction initAction = LoadAll)") (ReturnType) (Snippet . "DODataSource(${1:DEntity entity}, ${2:IDOBaseRepository rep}, ${3:IEnumerable<string> propertyNames}, ${4:IEntityValidation validator = null}, ${5:eInitAction initAction = LoadAll})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DODataSourceFactory") (Description . "") (DisplayText . "DODataSourceFactory") (RequiredNamespaceImport) (MethodHeader . "DODataSourceFactory") (ReturnType) (Snippet . "DODataSourceFactory$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DODataSourceFactory") (Description . "") (DisplayText . "DODataSourceFactory(IDOBaseRepository rep)") (RequiredNamespaceImport) (MethodHeader . "DODataSourceFactory(IDOBaseRepository rep)") (ReturnType) (Snippet . "DODataSourceFactory(${1:IDOBaseRepository rep})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DoDataUpdate") (Description . "") (DisplayText . "DoDataUpdate(Guid testInstance)") (RequiredNamespaceImport) (MethodHeader . "DoDataUpdate(Guid testInstance)") (ReturnType . "void") (Snippet . "DoDataUpdate(${1:Guid testInstance});$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DODataView") (Description . "") (DisplayText . "DODataView") (RequiredNamespaceImport) (MethodHeader . "DODataView") (ReturnType) (Snippet . "DODataView$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DODataView") (Description . "") (DisplayText . "DODataView(DODataSource dataSource, string clientFilterId = null, eInitAction initAction = LoadAll)") (RequiredNamespaceImport) (MethodHeader . "DODataView(DODataSource dataSource, string clientFilterId = null, eInitAction initAction = LoadAll)") (ReturnType) (Snippet . "DODataView(${1:DODataSource dataSource}, ${2:string clientFilterId = null}, ${3:eInitAction initAction = LoadAll})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DODataViewDirect") (Description . "") (DisplayText . "DODataViewDirect") (RequiredNamespaceImport) (MethodHeader . "DODataViewDirect") (ReturnType) (Snippet . "DODataViewDirect$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DODataViewDirect") (Description . "") (DisplayText . "DODataViewDirect(DODataSource dataSource, string clientFilterId = null, eInitAction initAction = LoadAll)") (RequiredNamespaceImport) (MethodHeader . "DODataViewDirect(DODataSource dataSource, string clientFilterId = null, eInitAction initAction = LoadAll)") (ReturnType) (Snippet . "DODataViewDirect(${1:DODataSource dataSource}, ${2:string clientFilterId = null}, ${3:eInitAction initAction = LoadAll})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOManufacturer") (Description . "") (DisplayText . "DOManufacturer") (RequiredNamespaceImport) (MethodHeader . "DOManufacturer") (ReturnType) (Snippet . "DOManufacturer$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOManufacturer") (Description . "") (DisplayText . "DOManufacturer()") (RequiredNamespaceImport) (MethodHeader . "DOManufacturer()") (ReturnType) (Snippet . "DOManufacturer()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMasterDataLog") (Description . "") (DisplayText . "DOMasterDataLog") (RequiredNamespaceImport) (MethodHeader . "DOMasterDataLog") (ReturnType) (Snippet . "DOMasterDataLog$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMasterDataLog") (Description . "") (DisplayText . "DOMasterDataLog()") (RequiredNamespaceImport) (MethodHeader . "DOMasterDataLog()") (ReturnType) (Snippet . "DOMasterDataLog()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMasterRoute") (Description . "") (DisplayText . "DOMasterRoute") (RequiredNamespaceImport) (MethodHeader . "DOMasterRoute") (ReturnType) (Snippet . "DOMasterRoute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMasterRoute") (Description . "") (DisplayText . "DOMasterRoute()") (RequiredNamespaceImport) (MethodHeader . "DOMasterRoute()") (ReturnType) (Snippet . "DOMasterRoute()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMasterRoutePc") (Description . "") (DisplayText . "DOMasterRoutePc") (RequiredNamespaceImport) (MethodHeader . "DOMasterRoutePc") (ReturnType) (Snippet . "DOMasterRoutePc$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMasterRoutePc") (Description . "") (DisplayText . "DOMasterRoutePc()") (RequiredNamespaceImport) (MethodHeader . "DOMasterRoutePc()") (ReturnType) (Snippet . "DOMasterRoutePc()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterial") (Description . "") (DisplayText . "DOMaterial") (RequiredNamespaceImport) (MethodHeader . "DOMaterial") (ReturnType) (Snippet . "DOMaterial$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterial") (Description . "") (DisplayText . "DOMaterial()") (RequiredNamespaceImport) (MethodHeader . "DOMaterial()") (ReturnType) (Snippet . "DOMaterial()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialGroup") (Description . "") (DisplayText . "DOMaterialGroup") (RequiredNamespaceImport) (MethodHeader . "DOMaterialGroup") (ReturnType) (Snippet . "DOMaterialGroup$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialGroup") (Description . "") (DisplayText . "DOMaterialGroup()") (RequiredNamespaceImport) (MethodHeader . "DOMaterialGroup()") (ReturnType) (Snippet . "DOMaterialGroup()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialMaster") (Description . "") (DisplayText . "DOMaterialMaster") (RequiredNamespaceImport) (MethodHeader . "DOMaterialMaster") (ReturnType) (Snippet . "DOMaterialMaster$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialMaster") (Description . "") (DisplayText . "DOMaterialMaster()") (RequiredNamespaceImport) (MethodHeader . "DOMaterialMaster()") (ReturnType) (Snippet . "DOMaterialMaster()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialOrder") (Description . "") (DisplayText . "DOMaterialOrder") (RequiredNamespaceImport) (MethodHeader . "DOMaterialOrder") (ReturnType) (Snippet . "DOMaterialOrder$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialOrder") (Description . "") (DisplayText . "DOMaterialOrder()") (RequiredNamespaceImport) (MethodHeader . "DOMaterialOrder()") (ReturnType) (Snippet . "DOMaterialOrder()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialPosting") (Description . "") (DisplayText . "DOMaterialPosting") (RequiredNamespaceImport) (MethodHeader . "DOMaterialPosting") (ReturnType) (Snippet . "DOMaterialPosting$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialPosting") (Description . "") (DisplayText . "DOMaterialPosting()") (RequiredNamespaceImport) (MethodHeader . "DOMaterialPosting()") (ReturnType) (Snippet . "DOMaterialPosting()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialRelevance") (Description . "") (DisplayText . "DOMaterialRelevance") (RequiredNamespaceImport) (MethodHeader . "DOMaterialRelevance") (ReturnType) (Snippet . "DOMaterialRelevance$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialRelevance") (Description . "") (DisplayText . "DOMaterialRelevance()") (RequiredNamespaceImport) (MethodHeader . "DOMaterialRelevance()") (ReturnType) (Snippet . "DOMaterialRelevance()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialStock") (Description . "") (DisplayText . "DOMaterialStock") (RequiredNamespaceImport) (MethodHeader . "DOMaterialStock") (ReturnType) (Snippet . "DOMaterialStock$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialStock") (Description . "") (DisplayText . "DOMaterialStock()") (RequiredNamespaceImport) (MethodHeader . "DOMaterialStock()") (ReturnType) (Snippet . "DOMaterialStock()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialStockLocation") (Description . "") (DisplayText . "DOMaterialStockLocation") (RequiredNamespaceImport) (MethodHeader . "DOMaterialStockLocation") (ReturnType) (Snippet . "DOMaterialStockLocation$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialStockLocation") (Description . "") (DisplayText . "DOMaterialStockLocation()") (RequiredNamespaceImport) (MethodHeader . "DOMaterialStockLocation()") (ReturnType) (Snippet . "DOMaterialStockLocation()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialStockLocationMA") (Description . "") (DisplayText . "DOMaterialStockLocationMA") (RequiredNamespaceImport) (MethodHeader . "DOMaterialStockLocationMA") (ReturnType) (Snippet . "DOMaterialStockLocationMA$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialStockLocationMA") (Description . "") (DisplayText . "DOMaterialStockLocationMA()") (RequiredNamespaceImport) (MethodHeader . "DOMaterialStockLocationMA()") (ReturnType) (Snippet . "DOMaterialStockLocationMA()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DoModificationTest") (Description . "") (DisplayText . "DoModificationTest()") (RequiredNamespaceImport) (MethodHeader . "DoModificationTest()") (ReturnType . "ModificationTestAutoRefreshStatus") (Snippet . "DoModificationTest()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMSDArticles") (Description . "") (DisplayText . "DOMSDArticles") (RequiredNamespaceImport) (MethodHeader . "DOMSDArticles") (ReturnType) (Snippet . "DOMSDArticles$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMSDArticles") (Description . "") (DisplayText . "DOMSDArticles()") (RequiredNamespaceImport) (MethodHeader . "DOMSDArticles()") (ReturnType) (Snippet . "DOMSDArticles()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOWasteType") (Description . "") (DisplayText . "DOWasteType") (RequiredNamespaceImport) (MethodHeader . "DOWasteType") (ReturnType) (Snippet . "DOWasteType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOWasteType") (Description . "") (DisplayText . "DOWasteType()") (RequiredNamespaceImport) (MethodHeader . "DOWasteType()") (ReturnType) (Snippet . "DOWasteType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DragState") (Description . "The different states with in a drag and drop. 
") (DisplayText . "DragState") (RequiredNamespaceImport) (MethodHeader . "DragState") (ReturnType) (Snippet . "DragState$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DuplicateWaitObjectException") (Description . "") (DisplayText . "DuplicateWaitObjectException") (RequiredNamespaceImport) (MethodHeader . "DuplicateWaitObjectException") (ReturnType) (Snippet . "DuplicateWaitObjectException$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DuplicateWaitObjectException") (Description . "") (DisplayText . "DuplicateWaitObjectException()") (RequiredNamespaceImport) (MethodHeader . "DuplicateWaitObjectException()") (ReturnType) (Snippet . "DuplicateWaitObjectException()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DuplicateWaitObjectException") (Description . "") (DisplayText . "DuplicateWaitObjectException(SerializationInfo info, StreamingContext context)") (RequiredNamespaceImport) (MethodHeader . "DuplicateWaitObjectException(SerializationInfo info, StreamingContext context)") (ReturnType) (Snippet . "DuplicateWaitObjectException(${1:SerializationInfo info}, ${2:StreamingContext context})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DuplicateWaitObjectException") (Description . "") (DisplayText . "DuplicateWaitObjectException(string message, Exception innerException)") (RequiredNamespaceImport) (MethodHeader . "DuplicateWaitObjectException(string message, Exception innerException)") (ReturnType) (Snippet . "DuplicateWaitObjectException(${1:string message}, ${2:Exception innerException})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DuplicateWaitObjectException") (Description . "") (DisplayText . "DuplicateWaitObjectException(string parameterName)") (RequiredNamespaceImport) (MethodHeader . "DuplicateWaitObjectException(string parameterName)") (ReturnType) (Snippet . "DuplicateWaitObjectException(${1:string parameterName})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DuplicateWaitObjectException") (Description . "") (DisplayText . "DuplicateWaitObjectException(string parameterName, string message)") (RequiredNamespaceImport) (MethodHeader . "DuplicateWaitObjectException(string parameterName, string message)") (ReturnType) (Snippet . "DuplicateWaitObjectException(${1:string parameterName}, ${2:string message})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DurationView") (Description . "") (DisplayText . "DurationView") (RequiredNamespaceImport) (MethodHeader . "DurationView") (ReturnType) (Snippet . "DurationView$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DurationView") (Description . "") (DisplayText . "DurationView(DurationViewModel viewModel)") (RequiredNamespaceImport) (MethodHeader . "DurationView(DurationViewModel viewModel)") (ReturnType) (Snippet . "DurationView(${1:DurationViewModel viewModel})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DurationViewModel") (Description . "TODO: Update summary.
") (DisplayText . "DurationViewModel") (RequiredNamespaceImport) (MethodHeader . "DurationViewModel") (ReturnType) (Snippet . "DurationViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DurationViewModel") (Description . "") (DisplayText . "DurationViewModel()") (RequiredNamespaceImport) (MethodHeader . "DurationViewModel()") (ReturnType) (Snippet . "DurationViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicDataInputViewModel") (Description . "Implements only methods to create view models form dynamic data.
") (DisplayText . "DynamicDataInputViewModel") (RequiredNamespaceImport) (MethodHeader . "DynamicDataInputViewModel") (ReturnType) (Snippet . "DynamicDataInputViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicTextBuilder") (Description . "Gets or sets the FormatedStringValue as IFormatedString.
") (DisplayText . "DynamicTextBuilder") (RequiredNamespaceImport) (MethodHeader . "DynamicTextBuilder") (ReturnType . "CaseBuilder") (Snippet . "DynamicTextBuilder$0") (Kind . "Property") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicTreeTableView") (Description . "Implements a forms user control based on a view model. This control 
") (DisplayText . "DynamicTreeTableView") (RequiredNamespaceImport) (MethodHeader . "DynamicTreeTableView") (ReturnType) (Snippet . "DynamicTreeTableView$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicTreeTableView") (Description . "Initializes a new instance of the FormatedTableView class. 
") (DisplayText . "DynamicTreeTableView()") (RequiredNamespaceImport) (MethodHeader . "DynamicTreeTableView()") (ReturnType) (Snippet . "DynamicTreeTableView()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicTreeTableView") (Description . "Initializes a new instance of the FormatedTableView class. 

viewModel: The used view model ") (DisplayText . "DynamicTreeTableView(IDataTableSourceViewModel viewModel)") (RequiredNamespaceImport) (MethodHeader . "DynamicTreeTableView(IDataTableSourceViewModel viewModel)") (ReturnType) (Snippet . "DynamicTreeTableView(${1:IDataTableSourceViewModel viewModel})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicXmlTable") (Description . "
Remarks:
") (DisplayText . "DynamicXmlTable") (RequiredNamespaceImport) (MethodHeader . "DynamicXmlTable") (ReturnType) (Snippet . "DynamicXmlTable$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicXmlTable") (Description . "") (DisplayText . "DynamicXmlTable()") (RequiredNamespaceImport) (MethodHeader . "DynamicXmlTable()") (ReturnType) (Snippet . "DynamicXmlTable()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DynmicDataAttribute") (Description . "Implements an attribute for a subversion version.
") (DisplayText . "DynmicDataAttribute") (RequiredNamespaceImport) (MethodHeader . "DynmicDataAttribute") (ReturnType) (Snippet . "DynmicDataAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DynmicDataAttribute") (Description . "Initializes a new instance of the Fls.Base.SvnRevisionAttribute class.

svnRevision: The subversion version.") (DisplayText . "DynmicDataAttribute(string name)") (RequiredNamespaceImport) (MethodHeader . "DynmicDataAttribute(string name)") (ReturnType) (Snippet . "DynmicDataAttribute(${1:string name})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "EntityUpdateHandler") (Description . "") (DisplayText . "EntityUpdateHandler") (RequiredNamespaceImport) (MethodHeader . "EntityUpdateHandler") (ReturnType) (Snippet . "EntityUpdateHandler$0") (Kind . "Delegate") (IsSuggestionMode . :json-false)) ((CompletionText . "EntityUpdateHandler") (Description . "") (DisplayText . "EntityUpdateHandler(object @object, IntPtr method)") (RequiredNamespaceImport) (MethodHeader . "EntityUpdateHandler(object @object, IntPtr method)") (ReturnType) (Snippet . "EntityUpdateHandler(${1:object @object}, ${2:IntPtr method})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "EntityUpdateType") (Description . "") (DisplayText . "EntityUpdateType") (RequiredNamespaceImport) (MethodHeader . "EntityUpdateType") (ReturnType) (Snippet . "EntityUpdateType$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "FinishDataUpdate") (Description . "") (DisplayText . "FinishDataUpdate()") (RequiredNamespaceImport) (MethodHeader . "FinishDataUpdate()") (ReturnType . "void") (Snippet . "FinishDataUpdate();$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "FLSDateEdit") (Description . "TODO: Update summary.
") (DisplayText . "FLSDateEdit") (RequiredNamespaceImport) (MethodHeader . "FLSDateEdit") (ReturnType) (Snippet . "FLSDateEdit$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "FLSDateEdit") (Description . "") (DisplayText . "FLSDateEdit()") (RequiredNamespaceImport) (MethodHeader . "FLSDateEdit()") (ReturnType) (Snippet . "FLSDateEdit()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "HandleTimeZoneSelectionUpdate") (Description . "") (DisplayText . "HandleTimeZoneSelectionUpdate(object sender, SelectedTimeZoneChangedEventArgs args)") (RequiredNamespaceImport) (MethodHeader . "HandleTimeZoneSelectionUpdate(object sender, SelectedTimeZoneChangedEventArgs args)") (ReturnType . "void") (Snippet . "HandleTimeZoneSelectionUpdate(${1:object sender}, ${2:SelectedTimeZoneChangedEventArgs args});$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "IDateTimeInputViewModel") (Description . "Implements an interface for date time object which may use only date or only time or both or nothing.
") (DisplayText . "IDateTimeInputViewModel") (RequiredNamespaceImport) (MethodHeader . "IDateTimeInputViewModel") (ReturnType) (Snippet . "IDateTimeInputViewModel$0") (Kind . "Interface") (IsSuggestionMode . :json-false)) ((CompletionText . "IMaxMinDateTime") (Description . "Implements an interface for minimum and maximum date time classes.
") (DisplayText . "IMaxMinDateTime") (RequiredNamespaceImport) (MethodHeader . "IMaxMinDateTime") (ReturnType) (Snippet . "IMaxMinDateTime$0") (Kind . "Interface") (IsSuggestionMode . :json-false)) ((CompletionText . "inBindingsourceUpdate") (Description . "") (DisplayText . "inBindingsourceUpdate") (RequiredNamespaceImport) (MethodHeader . "inBindingsourceUpdate") (ReturnType . "bool") (Snippet . "inBindingsourceUpdate$0") (Kind . "Field") (IsSuggestionMode . :json-false)) ((CompletionText . "IsInUpdateFilterSelection") (Description . "") (DisplayText . "IsInUpdateFilterSelection") (RequiredNamespaceImport) (MethodHeader . "IsInUpdateFilterSelection") (ReturnType . "SafeAccess") (Snippet . "IsInUpdateFilterSelection$0") (Kind . "Field") (IsSuggestionMode . :json-false)) ((CompletionText . "OutputDateFrameSelectionType") (Description . "") (DisplayText . "OutputDateFrameSelectionType") (RequiredNamespaceImport) (MethodHeader . "OutputDateFrameSelectionType") (ReturnType) (Snippet . "OutputDateFrameSelectionType$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "ReConvertDateTimesEventArgs") (Description . "") (DisplayText . "ReConvertDateTimesEventArgs") (RequiredNamespaceImport) (MethodHeader . "ReConvertDateTimesEventArgs") (ReturnType) (Snippet . "ReConvertDateTimesEventArgs$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ReConvertDateTimesEventArgs") (Description . "") (DisplayText . "ReConvertDateTimesEventArgs(ITimeConverter converter, IProvideToday dateForTimeOfDayConversion)") (RequiredNamespaceImport) (MethodHeader . "ReConvertDateTimesEventArgs(ITimeConverter converter, IProvideToday dateForTimeOfDayConversion)") (ReturnType) (Snippet . "ReConvertDateTimesEventArgs(${1:ITimeConverter converter}, ${2:IProvideToday dateForTimeOfDayConversion})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "RepositoryItemDateEdit") (Description . "
A repository item storing settings specific to a DevExpress.XtraEditors.DateEdit control.") (DisplayText . "RepositoryItemDateEdit") (RequiredNamespaceImport) (MethodHeader . "RepositoryItemDateEdit") (ReturnType) (Snippet . "RepositoryItemDateEdit$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "RepositoryItemDateEdit") (Description . "
Initializes a new DevExpress.XtraEditors.Repository.RepositoryItemDateEdit class instance with default settings. ") (DisplayText . "RepositoryItemDateEdit()") (RequiredNamespaceImport) (MethodHeader . "RepositoryItemDateEdit()") (ReturnType) (Snippet . "RepositoryItemDateEdit()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "RepositoryItemFLSDateEdit") (Description . "TODO: Update summary.
") (DisplayText . "RepositoryItemFLSDateEdit") (RequiredNamespaceImport) (MethodHeader . "RepositoryItemFLSDateEdit") (ReturnType) (Snippet . "RepositoryItemFLSDateEdit$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "RepositoryItemFLSDateEdit") (Description . "") (DisplayText . "RepositoryItemFLSDateEdit()") (RequiredNamespaceImport) (MethodHeader . "RepositoryItemFLSDateEdit()") (ReturnType) (Snippet . "RepositoryItemFLSDateEdit()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ResourceSchedulerDateComparer") (Description . "Implements a model for 
") (DisplayText . "ResourceSchedulerDateComparer") (RequiredNamespaceImport) (MethodHeader . "ResourceSchedulerDateComparer") (ReturnType) (Snippet . "ResourceSchedulerDateComparer$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ResourceSchedulerDateComparer") (Description . "Initializes a new instance of the Fls.VisiTourClient.ViewModel.Scheduler.ResourceSchedulerDateComparer class. 
") (DisplayText . "ResourceSchedulerDateComparer()") (RequiredNamespaceImport) (MethodHeader . "ResourceSchedulerDateComparer()") (ReturnType) (Snippet . "ResourceSchedulerDateComparer()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "SchedulerViewDateTimeSlotModel") (Description . "Implements a model for scheduler view scheduleTable column header.
") (DisplayText . "SchedulerViewDateTimeSlotModel") (RequiredNamespaceImport) (MethodHeader . "SchedulerViewDateTimeSlotModel") (ReturnType) (Snippet . "SchedulerViewDateTimeSlotModel$0") (Kind . "Struct") (IsSuggestionMode . :json-false)) ((CompletionText . "SchedulerViewDateTimeSlotModel") (Description . "") (DisplayText . "SchedulerViewDateTimeSlotModel()") (RequiredNamespaceImport) (MethodHeader . "SchedulerViewDateTimeSlotModel()") (ReturnType) (Snippet . "SchedulerViewDateTimeSlotModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "SchedulerViewDateTimeSlotModel") (Description . "Initializes a new instance of the Fls.VisiTourClient.ViewModel.Scheduler.SchedulerViewDateTimeSlotModel struct.

slot: The date time slot.
isZombieTime: Indicates that slot is a zombie.
width: The slots width.") (DisplayText . "SchedulerViewDateTimeSlotModel(DateTimeSlot slot, bool isZombieTime, double width)") (RequiredNamespaceImport) (MethodHeader . "SchedulerViewDateTimeSlotModel(DateTimeSlot slot, bool isZombieTime, double width)") (ReturnType) (Snippet . "SchedulerViewDateTimeSlotModel(${1:DateTimeSlot slot}, ${2:bool isZombieTime}, ${3:double width})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateBindingsource") (Description . "updates changes from the datasource into the database 

sourceName: name of the source ") (DisplayText . "UpdateBindingsource(string sourceName)") (RequiredNamespaceImport) (MethodHeader . "UpdateBindingsource(string sourceName)") (ReturnType . "void") (Snippet . "UpdateBindingsource(${1:string sourceName});$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateDisciplineSelections") (Description . "") (DisplayText . "UpdateDisciplineSelections()") (RequiredNamespaceImport) (MethodHeader . "UpdateDisciplineSelections()") (ReturnType . "void") (Snippet . "UpdateDisciplineSelections();$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateFilterSelection") (Description . "") (DisplayText . "UpdateFilterSelection(CheckedComboBoxBarItemViewModel filterVM, ReadOnlyCollection<int> selectedItems, PropertyChangedEventHandler propchangedhandler)") (RequiredNamespaceImport) (MethodHeader . "UpdateFilterSelection(CheckedComboBoxBarItemViewModel filterVM, ReadOnlyCollection<int> selectedItems, PropertyChangedEventHandler propchangedhandler)") (ReturnType . "void") (Snippet . "UpdateFilterSelection(${1:CheckedComboBoxBarItemViewModel filterVM}, ${2:ReadOnlyCollection<int> selectedItems}, ${3:PropertyChangedEventHandler propchangedhandler});$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateLabelText") (Description . "") (DisplayText . "UpdateLabelText()") (RequiredNamespaceImport) (MethodHeader . "UpdateLabelText()") (ReturnType . "void") (Snippet . "UpdateLabelText();$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateLists") (Description . "Implements a model for 
") (DisplayText . "UpdateLists<TKey, TData>") (RequiredNamespaceImport) (MethodHeader . "UpdateLists<TKey, TData>") (ReturnType) (Snippet . "UpdateLists<${1:TKey}, ${2:TData}>$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateLists") (Description . "Initializes a new instance of the UpdateLists class.
") (DisplayText . "UpdateLists<TKey, TData>(string primaryKeyPropertyName, string modificationDatePropertyName)") (RequiredNamespaceImport) (MethodHeader . "UpdateLists<TKey, TData>(string primaryKeyPropertyName, string modificationDatePropertyName)") (ReturnType) (Snippet . "UpdateLists<${1:TKey}, ${2:TData}>(${3:string primaryKeyPropertyName}, ${4:string modificationDatePropertyName})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateRegionSelections") (Description . "") (DisplayText . "UpdateRegionSelections()") (RequiredNamespaceImport) (MethodHeader . "UpdateRegionSelections()") (ReturnType . "void") (Snippet . "UpdateRegionSelections();$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateTeamSelections") (Description . "") (DisplayText . "UpdateTeamSelections()") (RequiredNamespaceImport) (MethodHeader . "UpdateTeamSelections()") (ReturnType . "void") (Snippet . "UpdateTeamSelections();$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateVersion") (Description . "") (DisplayText . "UpdateVersion") (RequiredNamespaceImport) (MethodHeader . "UpdateVersion") (ReturnType) (Snippet . "UpdateVersion$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateVersion") (Description . "") (DisplayText . "UpdateVersion()") (RequiredNamespaceImport) (MethodHeader . "UpdateVersion()") (ReturnType) (Snippet . "UpdateVersion()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateVersion") (Description . "") (DisplayText . "UpdateVersion(FileVersionInfo fv)") (RequiredNamespaceImport) (MethodHeader . "UpdateVersion(FileVersionInfo fv)") (ReturnType) (Snippet . "UpdateVersion(${1:FileVersionInfo fv})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateVersion") (Description . "") (DisplayText . "UpdateVersion(string version)") (RequiredNamespaceImport) (MethodHeader . "UpdateVersion(string version)") (ReturnType) (Snippet . "UpdateVersion(${1:string version})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateWorkflowRequest") (Description . "") (DisplayText . "UpdateWorkflowRequest") (RequiredNamespaceImport) (MethodHeader . "UpdateWorkflowRequest") (ReturnType) (Snippet . "UpdateWorkflowRequest$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateWorkflowRequest") (Description . "") (DisplayText . "UpdateWorkflowRequest()") (RequiredNamespaceImport) (MethodHeader . "UpdateWorkflowRequest()") (ReturnType) (Snippet . "UpdateWorkflowRequest()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateWorkflowResponse") (Description . "") (DisplayText . "UpdateWorkflowResponse") (RequiredNamespaceImport) (MethodHeader . "UpdateWorkflowResponse") (ReturnType) (Snippet . "UpdateWorkflowResponse$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateWorkflowResponse") (Description . "") (DisplayText . "UpdateWorkflowResponse()") (RequiredNamespaceImport) (MethodHeader . "UpdateWorkflowResponse()") (ReturnType) (Snippet . "UpdateWorkflowResponse()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ValidateableObject") (Description . "Implements a model for validate objects. The validation methods have to be names like 
\"ValidatableObject.ValidationMethodNamePrefix\"\"PropertyName\" or \"ValidateDisplayName\".
The full declaration has to be: protected string ValidateDisplayName(). 
The validate methods are found automatically.
") (DisplayText . "ValidateableObject") (RequiredNamespaceImport) (MethodHeader . "ValidateableObject") (ReturnType) (Snippet . "ValidateableObject$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ValidateableObject") (Description . "Initializes a new instance of the Fls.Base.ValidateableObject class.
") (DisplayText . "ValidateableObject()") (RequiredNamespaceImport) (MethodHeader . "ValidateableObject()") (ReturnType) (Snippet . "ValidateableObject()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ValidatedVMs") (Description . "Stores the colors of viewmodels before the validating changes their color. Used to revert their color to
it's original value;
") (DisplayText . "ValidatedVMs") (RequiredNamespaceImport) (MethodHeader . "ValidatedVMs") (ReturnType . "Dictionary<DOBindingSource, List<NameViewModel>>") (Snippet . "ValidatedVMs$0") (Kind . "Field") (IsSuggestionMode . :json-false)) ((CompletionText . "ValidateEventArgs") (Description . "") (DisplayText . "ValidateEventArgs") (RequiredNamespaceImport) (MethodHeader . "ValidateEventArgs") (ReturnType) (Snippet . "ValidateEventArgs$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ValidateEventArgs") (Description . "") (DisplayText . "ValidateEventArgs(DOBase data, string field)") (RequiredNamespaceImport) (MethodHeader . "ValidateEventArgs(DOBase data, string field)") (ReturnType) (Snippet . "ValidateEventArgs(${1:DOBase data}, ${2:string field})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "XmlDateTimeSerializationMode") (Description . "") (DisplayText . "XmlDateTimeSerializationMode") (RequiredNamespaceImport) (MethodHeader . "XmlDateTimeSerializationMode") (ReturnType) (Snippet . "XmlDateTimeSerializationMode$0") (Kind . "Enum") (IsSuggestionMode . :json-false))]
[10:17:29] <-- 42 /typelookup: ((Type) (Documentation))
[10:17:32] <-- 43 /autocomplete: [((CompletionText . "DateEditExtensionPainter") (Description . "Implements a model for 
") (DisplayText . "DateEditExtensionPainter") (RequiredNamespaceImport) (MethodHeader . "DateEditExtensionPainter") (ReturnType) (Snippet . "DateEditExtensionPainter$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DateEditExtensionPainter") (Description . "") (DisplayText . "DateEditExtensionPainter()") (RequiredNamespaceImport) (MethodHeader . "DateEditExtensionPainter()") (ReturnType) (Snippet . "DateEditExtensionPainter()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateEditExtensionViewInfo") (Description . "") (DisplayText . "DateEditExtensionViewInfo") (RequiredNamespaceImport) (MethodHeader . "DateEditExtensionViewInfo") (ReturnType) (Snippet . "DateEditExtensionViewInfo$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DateEditExtensionViewInfo") (Description . "") (DisplayText . "DateEditExtensionViewInfo(RepositoryItem item)") (RequiredNamespaceImport) (MethodHeader . "DateEditExtensionViewInfo(RepositoryItem item)") (ReturnType) (Snippet . "DateEditExtensionViewInfo(${1:RepositoryItem item})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateSelectorViewModel") (Description . "Implements a model for a date selector.
") (DisplayText . "DateSelectorViewModel") (RequiredNamespaceImport) (MethodHeader . "DateSelectorViewModel") (ReturnType) (Snippet . "DateSelectorViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DateSelectorViewModel") (Description . "Initializes a new instance of the Fls.VisiTourClient.ViewModel.DateSelectorViewModel class.
") (DisplayText . "DateSelectorViewModel()") (RequiredNamespaceImport) (MethodHeader . "DateSelectorViewModel()") (ReturnType) (Snippet . "DateSelectorViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateSelectorViewModel") (Description . "Initializes a new instance of the Fls.VisiTourClient.ViewModel.DateSelectorViewModel class.

startDate: The selected start date.
endDate: The selected end date.") (DisplayText . "DateSelectorViewModel(DateTimeInputViewModel startDate, DateTimeInputViewModel endDate)") (RequiredNamespaceImport) (MethodHeader . "DateSelectorViewModel(DateTimeInputViewModel startDate, DateTimeInputViewModel endDate)") (ReturnType) (Snippet . "DateSelectorViewModel(${1:DateTimeInputViewModel startDate}, ${2:DateTimeInputViewModel endDate})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateSelectorViewModel") (Description . "Initializes a new instance of the Fls.VisiTourClient.ViewModel.DateSelectorViewModel class.

elementId: The elements id.
startDate: The selected start date.
endDate: The selected end date.") (DisplayText . "DateSelectorViewModel(UIItemId elementId, DateTimeInputViewModel startDate, DateTimeInputViewModel endDate)") (RequiredNamespaceImport) (MethodHeader . "DateSelectorViewModel(UIItemId elementId, DateTimeInputViewModel startDate, DateTimeInputViewModel endDate)") (ReturnType) (Snippet . "DateSelectorViewModel(${1:UIItemId elementId}, ${2:DateTimeInputViewModel startDate}, ${3:DateTimeInputViewModel endDate})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime") (RequiredNamespaceImport) (MethodHeader . "DateTime") (ReturnType) (Snippet . "DateTime$0") (Kind . "Struct") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime()") (RequiredNamespaceImport) (MethodHeader . "DateTime()") (ReturnType) (Snippet . "DateTime()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, Calendar calendar)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, Calendar calendar)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:Calendar calendar})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, int hour, int minute, int second)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, int hour, int minute, int second)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, int hour, int minute, int second, Calendar calendar)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, int hour, int minute, int second, Calendar calendar)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:Calendar calendar})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, int hour, int minute, int second, DateTimeKind kind)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, int hour, int minute, int second, DateTimeKind kind)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:DateTimeKind kind})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:int millisecond})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, Calendar calendar)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, Calendar calendar)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:int millisecond}, ${8:Calendar calendar})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, Calendar calendar, DateTimeKind kind)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, Calendar calendar, DateTimeKind kind)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:int millisecond}, ${8:Calendar calendar}, ${9:DateTimeKind kind})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, DateTimeKind kind)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, DateTimeKind kind)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:int millisecond}, ${8:DateTimeKind kind})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(long ticks)") (RequiredNamespaceImport) (MethodHeader . "DateTime(long ticks)") (ReturnType) (Snippet . "DateTime(${1:long ticks})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(long ticks, DateTimeKind kind)") (RequiredNamespaceImport) (MethodHeader . "DateTime(long ticks, DateTimeKind kind)") (ReturnType) (Snippet . "DateTime(${1:long ticks}, ${2:DateTimeKind kind})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeConverter") (Description . "") (DisplayText . "DateTimeConverter") (RequiredNamespaceImport) (MethodHeader . "DateTimeConverter") (ReturnType) (Snippet . "DateTimeConverter$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeConverter") (Description . "") (DisplayText . "DateTimeConverter()") (RequiredNamespaceImport) (MethodHeader . "DateTimeConverter()") (ReturnType) (Snippet . "DateTimeConverter()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeEditView") (Description . "Implements a forms user control based on a view model.
This control 
") (DisplayText . "DateTimeEditView") (RequiredNamespaceImport) (MethodHeader . "DateTimeEditView") (ReturnType) (Snippet . "DateTimeEditView$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeEditView") (Description . "Initializes a new instance of the Fls.Controls.Forms.DevExpressBase.DateTimeEditView class.
") (DisplayText . "DateTimeEditView()") (RequiredNamespaceImport) (MethodHeader . "DateTimeEditView()") (ReturnType) (Snippet . "DateTimeEditView()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeEditView") (Description . "Initializes a new instance of the Fls.Controls.Forms.DevExpressBase.DateTimeEditView class.

viewModel: The used view model ") (DisplayText . "DateTimeEditView(DateTimeInputViewModel viewModel)") (RequiredNamespaceImport) (MethodHeader . "DateTimeEditView(DateTimeInputViewModel viewModel)") (ReturnType) (Snippet . "DateTimeEditView(${1:DateTimeInputViewModel viewModel})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeHelper") (Description . "") (DisplayText . "DateTimeHelper") (RequiredNamespaceImport) (MethodHeader . "DateTimeHelper") (ReturnType) (Snippet . "DateTimeHelper$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeInputViewModel") (Description . "Implements a model for date time input.
") (DisplayText . "DateTimeInputViewModel") (RequiredNamespaceImport) (MethodHeader . "DateTimeInputViewModel") (ReturnType) (Snippet . "DateTimeInputViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeInputViewModel") (Description . "Initializes a new instance of the Fls.UI.Base.DateTimeInputViewModel class.
") (DisplayText . "DateTimeInputViewModel()") (RequiredNamespaceImport) (MethodHeader . "DateTimeInputViewModel()") (ReturnType) (Snippet . "DateTimeInputViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeInputViewModel") (Description . "Initializes a new instance of the Fls.UI.Base.DateTimeInputViewModel class.

elementId: The elements id.") (DisplayText . "DateTimeInputViewModel(UIItemId elementId)") (RequiredNamespaceImport) (MethodHeader . "DateTimeInputViewModel(UIItemId elementId)") (ReturnType) (Snippet . "DateTimeInputViewModel(${1:UIItemId elementId})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeInputViewModel") (Description . "Initializes a new instance of the Fls.UI.Base.DateTimeInputViewModel class.

elementId: The elements id.
minDate: The minimum selectable date.
maxDate: The maximum selectable date.
selectedDate: The selected date.") (DisplayText . "DateTimeInputViewModel(UIItemId elementId, DateTime minDate, DateTime maxDate, DateTime selectedDate)") (RequiredNamespaceImport) (MethodHeader . "DateTimeInputViewModel(UIItemId elementId, DateTime minDate, DateTime maxDate, DateTime selectedDate)") (ReturnType) (Snippet . "DateTimeInputViewModel(${1:UIItemId elementId}, ${2:DateTime minDate}, ${3:DateTime maxDate}, ${4:DateTime selectedDate})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeInputViewModel") (Description . "Initializes a new instance of the Fls.UI.Base.DateTimeInputViewModel class.

elementId: The elements id.
selectedDate: The selected date.") (DisplayText . "DateTimeInputViewModel(UIItemId elementId, DateTime selectedDate)") (RequiredNamespaceImport) (MethodHeader . "DateTimeInputViewModel(UIItemId elementId, DateTime selectedDate)") (ReturnType) (Snippet . "DateTimeInputViewModel(${1:UIItemId elementId}, ${2:DateTime selectedDate})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeKind") (Description . "") (DisplayText . "DateTimeKind") (RequiredNamespaceImport) (MethodHeader . "DateTimeKind") (ReturnType) (Snippet . "DateTimeKind$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset") (ReturnType) (Snippet . "DateTimeOffset$0") (Kind . "Struct") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset()") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset()") (ReturnType) (Snippet . "DateTimeOffset()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset(DateTime dateTime)") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset(DateTime dateTime)") (ReturnType) (Snippet . "DateTimeOffset(${1:DateTime dateTime})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset(DateTime dateTime, TimeSpan offset)") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset(DateTime dateTime, TimeSpan offset)") (ReturnType) (Snippet . "DateTimeOffset(${1:DateTime dateTime}, ${2:TimeSpan offset})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset(int year, int month, int day, int hour, int minute, int second, int millisecond, Calendar calendar, TimeSpan offset)") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset(int year, int month, int day, int hour, int minute, int second, int millisecond, Calendar calendar, TimeSpan offset)") (ReturnType) (Snippet . "DateTimeOffset(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:int millisecond}, ${8:Calendar calendar}, ${9:TimeSpan offset})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset(int year, int month, int day, int hour, int minute, int second, int millisecond, TimeSpan offset)") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset(int year, int month, int day, int hour, int minute, int second, int millisecond, TimeSpan offset)") (ReturnType) (Snippet . "DateTimeOffset(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:int millisecond}, ${8:TimeSpan offset})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset(int year, int month, int day, int hour, int minute, int second, TimeSpan offset)") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset(int year, int month, int day, int hour, int minute, int second, TimeSpan offset)") (ReturnType) (Snippet . "DateTimeOffset(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:TimeSpan offset})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset(long ticks, TimeSpan offset)") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset(long ticks, TimeSpan offset)") (ReturnType) (Snippet . "DateTimeOffset(${1:long ticks}, ${2:TimeSpan offset})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffsetConverter") (Description . "") (DisplayText . "DateTimeOffsetConverter") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffsetConverter") (ReturnType) (Snippet . "DateTimeOffsetConverter$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffsetConverter") (Description . "") (DisplayText . "DateTimeOffsetConverter()") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffsetConverter()") (ReturnType) (Snippet . "DateTimeOffsetConverter()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeSlot") (Description . "Implements a model for time intervals. 
") (DisplayText . "DateTimeSlot") (RequiredNamespaceImport) (MethodHeader . "DateTimeSlot") (ReturnType) (Snippet . "DateTimeSlot$0") (Kind . "Struct") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeSlot") (Description . "") (DisplayText . "DateTimeSlot()") (RequiredNamespaceImport) (MethodHeader . "DateTimeSlot()") (ReturnType) (Snippet . "DateTimeSlot()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeSlot") (Description . "Initializes a new instance of the Fls.Base.DateTimeSlot structure. 

start: The start time. 
duration: The duration. ") (DisplayText . "DateTimeSlot(DateTime start, DateTime end)") (RequiredNamespaceImport) (MethodHeader . "DateTimeSlot(DateTime start, DateTime end)") (ReturnType) (Snippet . "DateTimeSlot(${1:DateTime start}, ${2:DateTime end})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeSlot") (Description . "Initializes a new instance of the Fls.Base.DateTimeSlot structure. 

start: The start time. 
duration: The duration. ") (DisplayText . "DateTimeSlot(DateTime start, TimeSpan duration)") (RequiredNamespaceImport) (MethodHeader . "DateTimeSlot(DateTime start, TimeSpan duration)") (ReturnType) (Snippet . "DateTimeSlot(${1:DateTime start}, ${2:TimeSpan duration})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "BookResourceInDateFrameViewModel") (Description . "") (DisplayText . "BookResourceInDateFrameViewModel") (RequiredNamespaceImport) (MethodHeader . "BookResourceInDateFrameViewModel") (ReturnType) (Snippet . "BookResourceInDateFrameViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "BookResourceInDateFrameViewModel") (Description . "") (DisplayText . "BookResourceInDateFrameViewModel(TourModel mainTour, ConcurrentDictionary<int, DOEngineer> availableEngineeres, DateTime startDate, DateTime endDate, DOEngineer changeEngineer)") (RequiredNamespaceImport) (MethodHeader . "BookResourceInDateFrameViewModel(TourModel mainTour, ConcurrentDictionary<int, DOEngineer> availableEngineeres, DateTime startDate, DateTime endDate, DOEngineer changeEngineer)") (ReturnType) (Snippet . "BookResourceInDateFrameViewModel(${1:TourModel mainTour}, ${2:ConcurrentDictionary<int, DOEngineer> availableEngineeres}, ${3:DateTime startDate}, ${4:DateTime endDate}, ${5:DOEngineer changeEngineer})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ClientUpdater") (Description . "") (DisplayText . "ClientUpdater") (RequiredNamespaceImport) (MethodHeader . "ClientUpdater") (ReturnType) (Snippet . "ClientUpdater$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ClientUpdater") (Description . "") (DisplayText . "ClientUpdater(string[] cmdArgs)") (RequiredNamespaceImport) (MethodHeader . "ClientUpdater(string[] cmdArgs)") (ReturnType) (Snippet . "ClientUpdater(${1:string[] cmdArgs})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataAccess") (Description . "") (DisplayText . "DataAccess") (RequiredNamespaceImport) (MethodHeader . "DataAccess") (ReturnType) (Snippet . "DataAccess$0") (Kind . "Namespace") (IsSuggestionMode . :json-false)) ((CompletionText . "DataBaseRequiredPropertiesType") (Description . "") (DisplayText . "DataBaseRequiredPropertiesType") (RequiredNamespaceImport) (MethodHeader . "DataBaseRequiredPropertiesType") (ReturnType) (Snippet . "DataBaseRequiredPropertiesType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataBaseRequiredPropertiesType") (Description . "DataBaseRequiredPropertiesType class constructor
") (DisplayText . "DataBaseRequiredPropertiesType()") (RequiredNamespaceImport) (MethodHeader . "DataBaseRequiredPropertiesType()") (ReturnType) (Snippet . "DataBaseRequiredPropertiesType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataConnection") (Description . "TODO: Update summary.
") (DisplayText . "DataConnection") (RequiredNamespaceImport) (MethodHeader . "DataConnection") (ReturnType) (Snippet . "DataConnection$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataConnection") (Description . "") (DisplayText . "DataConnection()") (RequiredNamespaceImport) (MethodHeader . "DataConnection()") (ReturnType) (Snippet . "DataConnection()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataConnection") (Description . "") (DisplayText . "DataConnection(DOBindingSource lookupBindingSource, DProperty propertyName, string summary, DProperty lookedUpProperty)") (RequiredNamespaceImport) (MethodHeader . "DataConnection(DOBindingSource lookupBindingSource, DProperty propertyName, string summary, DProperty lookedUpProperty)") (ReturnType) (Snippet . "DataConnection(${1:DOBindingSource lookupBindingSource}, ${2:DProperty propertyName}, ${3:string summary}, ${4:DProperty lookedUpProperty})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataConnection") (Description . "") (DisplayText . "DataConnection(DODataView lookupBindingSource, DProperty propertyName, string summary, DProperty lookedUpProperty)") (RequiredNamespaceImport) (MethodHeader . "DataConnection(DODataView lookupBindingSource, DProperty propertyName, string summary, DProperty lookedUpProperty)") (ReturnType) (Snippet . "DataConnection(${1:DODataView lookupBindingSource}, ${2:DProperty propertyName}, ${3:string summary}, ${4:DProperty lookedUpProperty})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataDependencyEventArgs") (Description . "Implements a model for request event arguments.
") (DisplayText . "DataDependencyEventArgs") (RequiredNamespaceImport) (MethodHeader . "DataDependencyEventArgs") (ReturnType) (Snippet . "DataDependencyEventArgs$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataDependencyEventArgs") (Description . "Initializes a new instance of the Fls.UI.Base.UserInformationEventArgs class.

request: An user request.") (DisplayText . "DataDependencyEventArgs(DataDependencyViewModel infoViewModel)") (RequiredNamespaceImport) (MethodHeader . "DataDependencyEventArgs(DataDependencyViewModel infoViewModel)") (ReturnType) (Snippet . "DataDependencyEventArgs(${1:DataDependencyViewModel infoViewModel})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataDependencyViewModel") (Description . "") (DisplayText . "DataDependencyViewModel") (RequiredNamespaceImport) (MethodHeader . "DataDependencyViewModel") (ReturnType) (Snippet . "DataDependencyViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataDependencyViewModel") (Description . "") (DisplayText . "DataDependencyViewModel(DOBindingSource source, IEnumerable<string> ignoreEntitiesList)") (RequiredNamespaceImport) (MethodHeader . "DataDependencyViewModel(DOBindingSource source, IEnumerable<string> ignoreEntitiesList)") (ReturnType) (Snippet . "DataDependencyViewModel(${1:DOBindingSource source}, ${2:IEnumerable<string> ignoreEntitiesList})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataErrorsChangedEventArgs") (Description . "") (DisplayText . "DataErrorsChangedEventArgs") (RequiredNamespaceImport) (MethodHeader . "DataErrorsChangedEventArgs") (ReturnType) (Snippet . "DataErrorsChangedEventArgs$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataErrorsChangedEventArgs") (Description . "") (DisplayText . "DataErrorsChangedEventArgs(string propertyName)") (RequiredNamespaceImport) (MethodHeader . "DataErrorsChangedEventArgs(string propertyName)") (ReturnType) (Snippet . "DataErrorsChangedEventArgs(${1:string propertyName})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataGroupType") (Description . "") (DisplayText . "DataGroupType") (RequiredNamespaceImport) (MethodHeader . "DataGroupType") (ReturnType) (Snippet . "DataGroupType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataGroupType") (Description . "DataGroupType class constructor
") (DisplayText . "DataGroupType()") (RequiredNamespaceImport) (MethodHeader . "DataGroupType()") (ReturnType) (Snippet . "DataGroupType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataItemType") (Description . "") (DisplayText . "DataItemType") (RequiredNamespaceImport) (MethodHeader . "DataItemType") (ReturnType) (Snippet . "DataItemType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataItemType") (Description . "") (DisplayText . "DataItemType()") (RequiredNamespaceImport) (MethodHeader . "DataItemType()") (ReturnType) (Snippet . "DataItemType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataItemTypeCreateStyle") (Description . "") (DisplayText . "DataItemTypeCreateStyle") (RequiredNamespaceImport) (MethodHeader . "DataItemTypeCreateStyle") (ReturnType) (Snippet . "DataItemTypeCreateStyle$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DataItemTypeEntityViewSourceMode") (Description . "") (DisplayText . "DataItemTypeEntityViewSourceMode") (RequiredNamespaceImport) (MethodHeader . "DataItemTypeEntityViewSourceMode") (ReturnType) (Snippet . "DataItemTypeEntityViewSourceMode$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DataItemTypeInitAction") (Description . "") (DisplayText . "DataItemTypeInitAction") (RequiredNamespaceImport) (MethodHeader . "DataItemTypeInitAction") (ReturnType) (Snippet . "DataItemTypeInitAction$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DataMisalignedException") (Description . "") (DisplayText . "DataMisalignedException") (RequiredNamespaceImport) (MethodHeader . "DataMisalignedException") (ReturnType) (Snippet . "DataMisalignedException$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataMisalignedException") (Description . "") (DisplayText . "DataMisalignedException()") (RequiredNamespaceImport) (MethodHeader . "DataMisalignedException()") (ReturnType) (Snippet . "DataMisalignedException()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataMisalignedException") (Description . "") (DisplayText . "DataMisalignedException(string message)") (RequiredNamespaceImport) (MethodHeader . "DataMisalignedException(string message)") (ReturnType) (Snippet . "DataMisalignedException(${1:string message})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataMisalignedException") (Description . "") (DisplayText . "DataMisalignedException(string message, Exception innerException)") (RequiredNamespaceImport) (MethodHeader . "DataMisalignedException(string message, Exception innerException)") (ReturnType) (Snippet . "DataMisalignedException(${1:string message}, ${2:Exception innerException})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataModel") (Description . "Implements a model for 
") (DisplayText . "DataModel") (RequiredNamespaceImport) (MethodHeader . "DataModel") (ReturnType) (Snippet . "DataModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataModel") (Description . "") (DisplayText . "DataModel()") (RequiredNamespaceImport) (MethodHeader . "DataModel()") (ReturnType) (Snippet . "DataModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObject") (Description . "") (DisplayText . "DataObject") (RequiredNamespaceImport) (MethodHeader . "DataObject") (ReturnType) (Snippet . "DataObject$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObject") (Description . "") (DisplayText . "DataObject()") (RequiredNamespaceImport) (MethodHeader . "DataObject()") (ReturnType) (Snippet . "DataObject()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectAttribute") (Description . "") (DisplayText . "DataObjectAttribute") (RequiredNamespaceImport) (MethodHeader . "DataObjectAttribute") (ReturnType) (Snippet . "DataObjectAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectAttribute") (Description . "") (DisplayText . "DataObjectAttribute()") (RequiredNamespaceImport) (MethodHeader . "DataObjectAttribute()") (ReturnType) (Snippet . "DataObjectAttribute()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectAttribute") (Description . "") (DisplayText . "DataObjectAttribute(bool isDataObject)") (RequiredNamespaceImport) (MethodHeader . "DataObjectAttribute(bool isDataObject)") (ReturnType) (Snippet . "DataObjectAttribute(${1:bool isDataObject})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectClock") (Description . "") (DisplayText . "DataObjectClock<T>") (RequiredNamespaceImport) (MethodHeader . "DataObjectClock<T>") (ReturnType) (Snippet . "DataObjectClock<${1:T}>$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectClock") (Description . "") (DisplayText . "DataObjectClock<T>(T doObject, ITimeExtractor extractor, IZonedClock unbiasedLocalTime)") (RequiredNamespaceImport) (MethodHeader . "DataObjectClock<T>(T doObject, ITimeExtractor extractor, IZonedClock unbiasedLocalTime)") (ReturnType) (Snippet . "DataObjectClock<${1:T}>(${2:T doObject}, ${3:ITimeExtractor extractor}, ${4:IZonedClock unbiasedLocalTime})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectFieldAttribute") (Description . "") (DisplayText . "DataObjectFieldAttribute") (RequiredNamespaceImport) (MethodHeader . "DataObjectFieldAttribute") (ReturnType) (Snippet . "DataObjectFieldAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectFieldAttribute") (Description . "") (DisplayText . "DataObjectFieldAttribute(bool primaryKey)") (RequiredNamespaceImport) (MethodHeader . "DataObjectFieldAttribute(bool primaryKey)") (ReturnType) (Snippet . "DataObjectFieldAttribute(${1:bool primaryKey})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectFieldAttribute") (Description . "") (DisplayText . "DataObjectFieldAttribute(bool primaryKey, bool isIdentity)") (RequiredNamespaceImport) (MethodHeader . "DataObjectFieldAttribute(bool primaryKey, bool isIdentity)") (ReturnType) (Snippet . "DataObjectFieldAttribute(${1:bool primaryKey}, ${2:bool isIdentity})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectFieldAttribute") (Description . "") (DisplayText . "DataObjectFieldAttribute(bool primaryKey, bool isIdentity, bool isNullable)") (RequiredNamespaceImport) (MethodHeader . "DataObjectFieldAttribute(bool primaryKey, bool isIdentity, bool isNullable)") (ReturnType) (Snippet . "DataObjectFieldAttribute(${1:bool primaryKey}, ${2:bool isIdentity}, ${3:bool isNullable})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectFieldAttribute") (Description . "") (DisplayText . "DataObjectFieldAttribute(bool primaryKey, bool isIdentity, bool isNullable, int length)") (RequiredNamespaceImport) (MethodHeader . "DataObjectFieldAttribute(bool primaryKey, bool isIdentity, bool isNullable, int length)") (ReturnType) (Snippet . "DataObjectFieldAttribute(${1:bool primaryKey}, ${2:bool isIdentity}, ${3:bool isNullable}, ${4:int length})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectMethodAttribute") (Description . "") (DisplayText . "DataObjectMethodAttribute") (RequiredNamespaceImport) (MethodHeader . "DataObjectMethodAttribute") (ReturnType) (Snippet . "DataObjectMethodAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectMethodAttribute") (Description . "") (DisplayText . "DataObjectMethodAttribute(DataObjectMethodType methodType)") (RequiredNamespaceImport) (MethodHeader . "DataObjectMethodAttribute(DataObjectMethodType methodType)") (ReturnType) (Snippet . "DataObjectMethodAttribute(${1:DataObjectMethodType methodType})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectMethodAttribute") (Description . "") (DisplayText . "DataObjectMethodAttribute(DataObjectMethodType methodType, bool isDefault)") (RequiredNamespaceImport) (MethodHeader . "DataObjectMethodAttribute(DataObjectMethodType methodType, bool isDefault)") (ReturnType) (Snippet . "DataObjectMethodAttribute(${1:DataObjectMethodType methodType}, ${2:bool isDefault})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectMethodType") (Description . "") (DisplayText . "DataObjectMethodType") (RequiredNamespaceImport) (MethodHeader . "DataObjectMethodType") (ReturnType) (Snippet . "DataObjectMethodType$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectTimeInformation") (Description . "") (DisplayText . "DataObjectTimeInformation") (RequiredNamespaceImport) (MethodHeader . "DataObjectTimeInformation") (ReturnType) (Snippet . "DataObjectTimeInformation$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectTimeInformation") (Description . "") (DisplayText . "DataObjectTimeInformation(TimeZoneInfo timeZone, IProvideToday dateForTimeOfDayConversion, TimeZoneAlias alias)") (RequiredNamespaceImport) (MethodHeader . "DataObjectTimeInformation(TimeZoneInfo timeZone, IProvideToday dateForTimeOfDayConversion, TimeZoneAlias alias)") (ReturnType) (Snippet . "DataObjectTimeInformation(${1:TimeZoneInfo timeZone}, ${2:IProvideToday dateForTimeOfDayConversion}, ${3:TimeZoneAlias alias})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectTimeInformationExtractor") (Description . "") (DisplayText . "DataObjectTimeInformationExtractor") (RequiredNamespaceImport) (MethodHeader . "DataObjectTimeInformationExtractor") (ReturnType) (Snippet . "DataObjectTimeInformationExtractor$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectTimeInformationExtractor") (Description . "") (DisplayText . "DataObjectTimeInformationExtractor(TimeZoneInfo fallBackTimeZone, IProvideToday fallBackDateForTimeOfDayConversion)") (RequiredNamespaceImport) (MethodHeader . "DataObjectTimeInformationExtractor(TimeZoneInfo fallBackTimeZone, IProvideToday fallBackDateForTimeOfDayConversion)") (ReturnType) (Snippet . "DataObjectTimeInformationExtractor(${1:TimeZoneInfo fallBackTimeZone}, ${2:IProvideToday fallBackDateForTimeOfDayConversion})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectToDateMapper") (Description . "") (DisplayText . "DataObjectToDateMapper") (RequiredNamespaceImport) (MethodHeader . "DataObjectToDateMapper") (ReturnType) (Snippet . "DataObjectToDateMapper$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectToDateMapper") (Description . "") (DisplayText . "DataObjectToDateMapper(IProvideToday fallBackToday)") (RequiredNamespaceImport) (MethodHeader . "DataObjectToDateMapper(IProvideToday fallBackToday)") (ReturnType) (Snippet . "DataObjectToDateMapper(${1:IProvideToday fallBackToday})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataOutputType") (Description . "") (DisplayText . "DataOutputType") (RequiredNamespaceImport) (MethodHeader . "DataOutputType") (ReturnType) (Snippet . "DataOutputType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataOutputType") (Description . "DataOutputType class constructor
") (DisplayText . "DataOutputType()") (RequiredNamespaceImport) (MethodHeader . "DataOutputType()") (ReturnType) (Snippet . "DataOutputType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataRequestModel") (Description . "") (DisplayText . "DataRequestModel<Index, Data>") (RequiredNamespaceImport) (MethodHeader . "DataRequestModel<Index, Data>") (ReturnType) (Snippet . "DataRequestModel<${1:Index}, ${2:Data}>$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataRequestModel") (Description . "") (DisplayText . "DataRequestModel<Index, Data>()") (RequiredNamespaceImport) (MethodHeader . "DataRequestModel<Index, Data>()") (ReturnType) (Snippet . "DataRequestModel<${1:Index}, ${2:Data}>()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataSourceActionType") (Description . "") (DisplayText . "DataSourceActionType") (RequiredNamespaceImport) (MethodHeader . "DataSourceActionType") (ReturnType) (Snippet . "DataSourceActionType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataSourceActionType") (Description . "") (DisplayText . "DataSourceActionType()") (RequiredNamespaceImport) (MethodHeader . "DataSourceActionType()") (ReturnType) (Snippet . "DataSourceActionType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataSourceActionTypeType") (Description . "") (DisplayText . "DataSourceActionTypeType") (RequiredNamespaceImport) (MethodHeader . "DataSourceActionTypeType") (ReturnType) (Snippet . "DataSourceActionTypeType$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DataSourceErrorEventArgs") (Description . "") (DisplayText . "DataSourceErrorEventArgs") (RequiredNamespaceImport) (MethodHeader . "DataSourceErrorEventArgs") (ReturnType) (Snippet . "DataSourceErrorEventArgs$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataSourceErrorEventArgs") (Description . "") (DisplayText . "DataSourceErrorEventArgs(string textId)") (RequiredNamespaceImport) (MethodHeader . "DataSourceErrorEventArgs(string textId)") (ReturnType) (Snippet . "DataSourceErrorEventArgs(${1:string textId})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataSourceErrorEventArgs") (Description . "") (DisplayText . "DataSourceErrorEventArgs(string textId, int code)") (RequiredNamespaceImport) (MethodHeader . "DataSourceErrorEventArgs(string textId, int code)") (ReturnType) (Snippet . "DataSourceErrorEventArgs(${1:string textId}, ${2:int code})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataSourceNameAttribute") (Description . "Implements an attribute for a subversion version.
") (DisplayText . "DataSourceNameAttribute") (RequiredNamespaceImport) (MethodHeader . "DataSourceNameAttribute") (ReturnType) (Snippet . "DataSourceNameAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataSourceNameAttribute") (Description . "Initializes a new instance of the Fls.VisiTourClient.ViewModel.DataSourceNameAttribute class.

svnRevision: The subversion version.") (DisplayText . "DataSourceNameAttribute(string name)") (RequiredNamespaceImport) (MethodHeader . "DataSourceNameAttribute(string name)") (ReturnType) (Snippet . "DataSourceNameAttribute(${1:string name})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataSources") (Description . "") (DisplayText . "DataSources") (RequiredNamespaceImport) (MethodHeader . "DataSources") (ReturnType) (Snippet . "DataSources$0") (Kind . "Namespace") (IsSuggestionMode . :json-false)) ((CompletionText . "DataTableSourceViewModel") (Description . "") (DisplayText . "DataTableSourceViewModel") (RequiredNamespaceImport) (MethodHeader . "DataTableSourceViewModel") (ReturnType) (Snippet . "DataTableSourceViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataTableSourceViewModel") (Description . "") (DisplayText . "DataTableSourceViewModel()") (RequiredNamespaceImport) (MethodHeader . "DataTableSourceViewModel()") (ReturnType) (Snippet . "DataTableSourceViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataTableViewModel") (Description . "Implements a model for data table.
") (DisplayText . "DataTableViewModel") (RequiredNamespaceImport) (MethodHeader . "DataTableViewModel") (ReturnType) (Snippet . "DataTableViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataTableViewModel") (Description . "Initializes a new instance of the Fls.UI.Base.DataTableViewModel class.
") (DisplayText . "DataTableViewModel()") (RequiredNamespaceImport) (MethodHeader . "DataTableViewModel()") (ReturnType) (Snippet . "DataTableViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataTableWithColoringViewModel") (Description . "TODO: Update summary.
") (DisplayText . "DataTableWithColoringViewModel") (RequiredNamespaceImport) (MethodHeader . "DataTableWithColoringViewModel") (ReturnType) (Snippet . "DataTableWithColoringViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataTableWithColoringViewModel") (Description . "Initializes a new instance of the Fls.UI.Base.DataTableWithColoringViewModel class.
") (DisplayText . "DataTableWithColoringViewModel()") (RequiredNamespaceImport) (MethodHeader . "DataTableWithColoringViewModel()") (ReturnType) (Snippet . "DataTableWithColoringViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataTransfersTypes") (Description . "The available data transfer types.
") (DisplayText . "DataTransfersTypes") (RequiredNamespaceImport) (MethodHeader . "DataTransfersTypes") (ReturnType) (Snippet . "DataTransfersTypes$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DDataBase") (Description . "") (DisplayText . "DDataBase") (RequiredNamespaceImport) (MethodHeader . "DDataBase") (ReturnType) (Snippet . "DDataBase$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DDataBase") (Description . "") (DisplayText . "DDataBase()") (RequiredNamespaceImport) (MethodHeader . "DDataBase()") (ReturnType) (Snippet . "DDataBase()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DisplayTextEvaluator") (Description . "") (DisplayText . "DisplayTextEvaluator") (RequiredNamespaceImport) (MethodHeader . "DisplayTextEvaluator") (ReturnType) (Snippet . "DisplayTextEvaluator$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DisplayTextEvaluator") (Description . "") (DisplayText . "DisplayTextEvaluator(IDisplayTextEvaluatorOwner owner)") (RequiredNamespaceImport) (MethodHeader . "DisplayTextEvaluator(IDisplayTextEvaluatorOwner owner)") (ReturnType) (Snippet . "DisplayTextEvaluator(${1:IDisplayTextEvaluatorOwner owner})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DLocalizationType") (Description . "") (DisplayText . "DLocalizationType") (RequiredNamespaceImport) (MethodHeader . "DLocalizationType") (ReturnType) (Snippet . "DLocalizationType$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DOArticle") (Description . "") (DisplayText . "DOArticle") (RequiredNamespaceImport) (MethodHeader . "DOArticle") (ReturnType) (Snippet . "DOArticle$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOArticle") (Description . "") (DisplayText . "DOArticle()") (RequiredNamespaceImport) (MethodHeader . "DOArticle()") (ReturnType) (Snippet . "DOArticle()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOAttachmentFilter") (Description . "") (DisplayText . "DOAttachmentFilter") (RequiredNamespaceImport) (MethodHeader . "DOAttachmentFilter") (ReturnType) (Snippet . "DOAttachmentFilter$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOAttachmentFilter") (Description . "") (DisplayText . "DOAttachmentFilter()") (RequiredNamespaceImport) (MethodHeader . "DOAttachmentFilter()") (ReturnType) (Snippet . "DOAttachmentFilter()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOAttachments") (Description . "") (DisplayText . "DOAttachments") (RequiredNamespaceImport) (MethodHeader . "DOAttachments") (ReturnType) (Snippet . "DOAttachments$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOAttachments") (Description . "") (DisplayText . "DOAttachments()") (RequiredNamespaceImport) (MethodHeader . "DOAttachments()") (ReturnType) (Snippet . "DOAttachments()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOCallstate") (Description . "") (DisplayText . "DOCallstate") (RequiredNamespaceImport) (MethodHeader . "DOCallstate") (ReturnType) (Snippet . "DOCallstate$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOCallstate") (Description . "") (DisplayText . "DOCallstate()") (RequiredNamespaceImport) (MethodHeader . "DOCallstate()") (ReturnType) (Snippet . "DOCallstate()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOClientUpdateHistory") (Description . "") (DisplayText . "DOClientUpdateHistory") (RequiredNamespaceImport) (MethodHeader . "DOClientUpdateHistory") (ReturnType) (Snippet . "DOClientUpdateHistory$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOClientUpdateHistory") (Description . "") (DisplayText . "DOClientUpdateHistory()") (RequiredNamespaceImport) (MethodHeader . "DOClientUpdateHistory()") (ReturnType) (Snippet . "DOClientUpdateHistory()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DODataSource") (Description . "") (DisplayText . "DODataSource") (RequiredNamespaceImport) (MethodHeader . "DODataSource") (ReturnType) (Snippet . "DODataSource$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DODataSource") (Description . "") (DisplayText . "DODataSource(DEntity entity, IDOBaseRepository rep, IEntityValidation validator = null, eInitAction initAction = LoadAll)") (RequiredNamespaceImport) (MethodHeader . "DODataSource(DEntity entity, IDOBaseRepository rep, IEntityValidation validator = null, eInitAction initAction = LoadAll)") (ReturnType) (Snippet . "DODataSource(${1:DEntity entity}, ${2:IDOBaseRepository rep}, ${3:IEntityValidation validator = null}, ${4:eInitAction initAction = LoadAll})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DODataSource") (Description . "") (DisplayText . "DODataSource(DEntity entity, IDOBaseRepository rep, IEnumerable<DProperty> propertiesToRead, IEntityValidation validator = null)") (RequiredNamespaceImport) (MethodHeader . "DODataSource(DEntity entity, IDOBaseRepository rep, IEnumerable<DProperty> propertiesToRead, IEntityValidation validator = null)") (ReturnType) (Snippet . "DODataSource(${1:DEntity entity}, ${2:IDOBaseRepository rep}, ${3:IEnumerable<DProperty> propertiesToRead}, ${4:IEntityValidation validator = null})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DODataSource") (Description . "") (DisplayText . "DODataSource(DEntity entity, IDOBaseRepository rep, IEnumerable<string> propertyNames, IEntityValidation validator = null, eInitAction initAction = LoadAll)") (RequiredNamespaceImport) (MethodHeader . "DODataSource(DEntity entity, IDOBaseRepository rep, IEnumerable<string> propertyNames, IEntityValidation validator = null, eInitAction initAction = LoadAll)") (ReturnType) (Snippet . "DODataSource(${1:DEntity entity}, ${2:IDOBaseRepository rep}, ${3:IEnumerable<string> propertyNames}, ${4:IEntityValidation validator = null}, ${5:eInitAction initAction = LoadAll})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DODataSourceFactory") (Description . "") (DisplayText . "DODataSourceFactory") (RequiredNamespaceImport) (MethodHeader . "DODataSourceFactory") (ReturnType) (Snippet . "DODataSourceFactory$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DODataSourceFactory") (Description . "") (DisplayText . "DODataSourceFactory(IDOBaseRepository rep)") (RequiredNamespaceImport) (MethodHeader . "DODataSourceFactory(IDOBaseRepository rep)") (ReturnType) (Snippet . "DODataSourceFactory(${1:IDOBaseRepository rep})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DODataView") (Description . "") (DisplayText . "DODataView") (RequiredNamespaceImport) (MethodHeader . "DODataView") (ReturnType) (Snippet . "DODataView$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DODataView") (Description . "") (DisplayText . "DODataView(DODataSource dataSource, string clientFilterId = null, eInitAction initAction = LoadAll)") (RequiredNamespaceImport) (MethodHeader . "DODataView(DODataSource dataSource, string clientFilterId = null, eInitAction initAction = LoadAll)") (ReturnType) (Snippet . "DODataView(${1:DODataSource dataSource}, ${2:string clientFilterId = null}, ${3:eInitAction initAction = LoadAll})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DODataViewDirect") (Description . "") (DisplayText . "DODataViewDirect") (RequiredNamespaceImport) (MethodHeader . "DODataViewDirect") (ReturnType) (Snippet . "DODataViewDirect$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DODataViewDirect") (Description . "") (DisplayText . "DODataViewDirect(DODataSource dataSource, string clientFilterId = null, eInitAction initAction = LoadAll)") (RequiredNamespaceImport) (MethodHeader . "DODataViewDirect(DODataSource dataSource, string clientFilterId = null, eInitAction initAction = LoadAll)") (ReturnType) (Snippet . "DODataViewDirect(${1:DODataSource dataSource}, ${2:string clientFilterId = null}, ${3:eInitAction initAction = LoadAll})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOManufacturer") (Description . "") (DisplayText . "DOManufacturer") (RequiredNamespaceImport) (MethodHeader . "DOManufacturer") (ReturnType) (Snippet . "DOManufacturer$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOManufacturer") (Description . "") (DisplayText . "DOManufacturer()") (RequiredNamespaceImport) (MethodHeader . "DOManufacturer()") (ReturnType) (Snippet . "DOManufacturer()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMasterDataLog") (Description . "") (DisplayText . "DOMasterDataLog") (RequiredNamespaceImport) (MethodHeader . "DOMasterDataLog") (ReturnType) (Snippet . "DOMasterDataLog$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMasterDataLog") (Description . "") (DisplayText . "DOMasterDataLog()") (RequiredNamespaceImport) (MethodHeader . "DOMasterDataLog()") (ReturnType) (Snippet . "DOMasterDataLog()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMasterRoute") (Description . "") (DisplayText . "DOMasterRoute") (RequiredNamespaceImport) (MethodHeader . "DOMasterRoute") (ReturnType) (Snippet . "DOMasterRoute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMasterRoute") (Description . "") (DisplayText . "DOMasterRoute()") (RequiredNamespaceImport) (MethodHeader . "DOMasterRoute()") (ReturnType) (Snippet . "DOMasterRoute()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMasterRoutePc") (Description . "") (DisplayText . "DOMasterRoutePc") (RequiredNamespaceImport) (MethodHeader . "DOMasterRoutePc") (ReturnType) (Snippet . "DOMasterRoutePc$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMasterRoutePc") (Description . "") (DisplayText . "DOMasterRoutePc()") (RequiredNamespaceImport) (MethodHeader . "DOMasterRoutePc()") (ReturnType) (Snippet . "DOMasterRoutePc()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterial") (Description . "") (DisplayText . "DOMaterial") (RequiredNamespaceImport) (MethodHeader . "DOMaterial") (ReturnType) (Snippet . "DOMaterial$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterial") (Description . "") (DisplayText . "DOMaterial()") (RequiredNamespaceImport) (MethodHeader . "DOMaterial()") (ReturnType) (Snippet . "DOMaterial()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialGroup") (Description . "") (DisplayText . "DOMaterialGroup") (RequiredNamespaceImport) (MethodHeader . "DOMaterialGroup") (ReturnType) (Snippet . "DOMaterialGroup$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialGroup") (Description . "") (DisplayText . "DOMaterialGroup()") (RequiredNamespaceImport) (MethodHeader . "DOMaterialGroup()") (ReturnType) (Snippet . "DOMaterialGroup()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialMaster") (Description . "") (DisplayText . "DOMaterialMaster") (RequiredNamespaceImport) (MethodHeader . "DOMaterialMaster") (ReturnType) (Snippet . "DOMaterialMaster$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialMaster") (Description . "") (DisplayText . "DOMaterialMaster()") (RequiredNamespaceImport) (MethodHeader . "DOMaterialMaster()") (ReturnType) (Snippet . "DOMaterialMaster()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialOrder") (Description . "") (DisplayText . "DOMaterialOrder") (RequiredNamespaceImport) (MethodHeader . "DOMaterialOrder") (ReturnType) (Snippet . "DOMaterialOrder$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialOrder") (Description . "") (DisplayText . "DOMaterialOrder()") (RequiredNamespaceImport) (MethodHeader . "DOMaterialOrder()") (ReturnType) (Snippet . "DOMaterialOrder()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialPosting") (Description . "") (DisplayText . "DOMaterialPosting") (RequiredNamespaceImport) (MethodHeader . "DOMaterialPosting") (ReturnType) (Snippet . "DOMaterialPosting$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialPosting") (Description . "") (DisplayText . "DOMaterialPosting()") (RequiredNamespaceImport) (MethodHeader . "DOMaterialPosting()") (ReturnType) (Snippet . "DOMaterialPosting()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialRelevance") (Description . "") (DisplayText . "DOMaterialRelevance") (RequiredNamespaceImport) (MethodHeader . "DOMaterialRelevance") (ReturnType) (Snippet . "DOMaterialRelevance$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialRelevance") (Description . "") (DisplayText . "DOMaterialRelevance()") (RequiredNamespaceImport) (MethodHeader . "DOMaterialRelevance()") (ReturnType) (Snippet . "DOMaterialRelevance()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialStock") (Description . "") (DisplayText . "DOMaterialStock") (RequiredNamespaceImport) (MethodHeader . "DOMaterialStock") (ReturnType) (Snippet . "DOMaterialStock$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialStock") (Description . "") (DisplayText . "DOMaterialStock()") (RequiredNamespaceImport) (MethodHeader . "DOMaterialStock()") (ReturnType) (Snippet . "DOMaterialStock()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialStockLocation") (Description . "") (DisplayText . "DOMaterialStockLocation") (RequiredNamespaceImport) (MethodHeader . "DOMaterialStockLocation") (ReturnType) (Snippet . "DOMaterialStockLocation$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialStockLocation") (Description . "") (DisplayText . "DOMaterialStockLocation()") (RequiredNamespaceImport) (MethodHeader . "DOMaterialStockLocation()") (ReturnType) (Snippet . "DOMaterialStockLocation()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialStockLocationMA") (Description . "") (DisplayText . "DOMaterialStockLocationMA") (RequiredNamespaceImport) (MethodHeader . "DOMaterialStockLocationMA") (ReturnType) (Snippet . "DOMaterialStockLocationMA$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialStockLocationMA") (Description . "") (DisplayText . "DOMaterialStockLocationMA()") (RequiredNamespaceImport) (MethodHeader . "DOMaterialStockLocationMA()") (ReturnType) (Snippet . "DOMaterialStockLocationMA()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMSDArticles") (Description . "") (DisplayText . "DOMSDArticles") (RequiredNamespaceImport) (MethodHeader . "DOMSDArticles") (ReturnType) (Snippet . "DOMSDArticles$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMSDArticles") (Description . "") (DisplayText . "DOMSDArticles()") (RequiredNamespaceImport) (MethodHeader . "DOMSDArticles()") (ReturnType) (Snippet . "DOMSDArticles()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOWasteType") (Description . "") (DisplayText . "DOWasteType") (RequiredNamespaceImport) (MethodHeader . "DOWasteType") (ReturnType) (Snippet . "DOWasteType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOWasteType") (Description . "") (DisplayText . "DOWasteType()") (RequiredNamespaceImport) (MethodHeader . "DOWasteType()") (ReturnType) (Snippet . "DOWasteType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DragState") (Description . "The different states with in a drag and drop. 
") (DisplayText . "DragState") (RequiredNamespaceImport) (MethodHeader . "DragState") (ReturnType) (Snippet . "DragState$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DuplicateWaitObjectException") (Description . "") (DisplayText . "DuplicateWaitObjectException") (RequiredNamespaceImport) (MethodHeader . "DuplicateWaitObjectException") (ReturnType) (Snippet . "DuplicateWaitObjectException$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DuplicateWaitObjectException") (Description . "") (DisplayText . "DuplicateWaitObjectException()") (RequiredNamespaceImport) (MethodHeader . "DuplicateWaitObjectException()") (ReturnType) (Snippet . "DuplicateWaitObjectException()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DuplicateWaitObjectException") (Description . "") (DisplayText . "DuplicateWaitObjectException(SerializationInfo info, StreamingContext context)") (RequiredNamespaceImport) (MethodHeader . "DuplicateWaitObjectException(SerializationInfo info, StreamingContext context)") (ReturnType) (Snippet . "DuplicateWaitObjectException(${1:SerializationInfo info}, ${2:StreamingContext context})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DuplicateWaitObjectException") (Description . "") (DisplayText . "DuplicateWaitObjectException(string message, Exception innerException)") (RequiredNamespaceImport) (MethodHeader . "DuplicateWaitObjectException(string message, Exception innerException)") (ReturnType) (Snippet . "DuplicateWaitObjectException(${1:string message}, ${2:Exception innerException})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DuplicateWaitObjectException") (Description . "") (DisplayText . "DuplicateWaitObjectException(string parameterName)") (RequiredNamespaceImport) (MethodHeader . "DuplicateWaitObjectException(string parameterName)") (ReturnType) (Snippet . "DuplicateWaitObjectException(${1:string parameterName})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DuplicateWaitObjectException") (Description . "") (DisplayText . "DuplicateWaitObjectException(string parameterName, string message)") (RequiredNamespaceImport) (MethodHeader . "DuplicateWaitObjectException(string parameterName, string message)") (ReturnType) (Snippet . "DuplicateWaitObjectException(${1:string parameterName}, ${2:string message})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DurationView") (Description . "") (DisplayText . "DurationView") (RequiredNamespaceImport) (MethodHeader . "DurationView") (ReturnType) (Snippet . "DurationView$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DurationView") (Description . "") (DisplayText . "DurationView(DurationViewModel viewModel)") (RequiredNamespaceImport) (MethodHeader . "DurationView(DurationViewModel viewModel)") (ReturnType) (Snippet . "DurationView(${1:DurationViewModel viewModel})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DurationViewModel") (Description . "TODO: Update summary.
") (DisplayText . "DurationViewModel") (RequiredNamespaceImport) (MethodHeader . "DurationViewModel") (ReturnType) (Snippet . "DurationViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DurationViewModel") (Description . "") (DisplayText . "DurationViewModel()") (RequiredNamespaceImport) (MethodHeader . "DurationViewModel()") (ReturnType) (Snippet . "DurationViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicDataInputViewModel") (Description . "Implements only methods to create view models form dynamic data.
") (DisplayText . "DynamicDataInputViewModel") (RequiredNamespaceImport) (MethodHeader . "DynamicDataInputViewModel") (ReturnType) (Snippet . "DynamicDataInputViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicTreeTableView") (Description . "Implements a forms user control based on a view model. This control 
") (DisplayText . "DynamicTreeTableView") (RequiredNamespaceImport) (MethodHeader . "DynamicTreeTableView") (ReturnType) (Snippet . "DynamicTreeTableView$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicTreeTableView") (Description . "Initializes a new instance of the FormatedTableView class. 
") (DisplayText . "DynamicTreeTableView()") (RequiredNamespaceImport) (MethodHeader . "DynamicTreeTableView()") (ReturnType) (Snippet . "DynamicTreeTableView()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicTreeTableView") (Description . "Initializes a new instance of the FormatedTableView class. 

viewModel: The used view model ") (DisplayText . "DynamicTreeTableView(IDataTableSourceViewModel viewModel)") (RequiredNamespaceImport) (MethodHeader . "DynamicTreeTableView(IDataTableSourceViewModel viewModel)") (ReturnType) (Snippet . "DynamicTreeTableView(${1:IDataTableSourceViewModel viewModel})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicXmlTable") (Description . "
Remarks:
") (DisplayText . "DynamicXmlTable") (RequiredNamespaceImport) (MethodHeader . "DynamicXmlTable") (ReturnType) (Snippet . "DynamicXmlTable$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicXmlTable") (Description . "") (DisplayText . "DynamicXmlTable()") (RequiredNamespaceImport) (MethodHeader . "DynamicXmlTable()") (ReturnType) (Snippet . "DynamicXmlTable()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DynmicDataAttribute") (Description . "Implements an attribute for a subversion version.
") (DisplayText . "DynmicDataAttribute") (RequiredNamespaceImport) (MethodHeader . "DynmicDataAttribute") (ReturnType) (Snippet . "DynmicDataAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DynmicDataAttribute") (Description . "Initializes a new instance of the Fls.Base.SvnRevisionAttribute class.

svnRevision: The subversion version.") (DisplayText . "DynmicDataAttribute(string name)") (RequiredNamespaceImport) (MethodHeader . "DynmicDataAttribute(string name)") (ReturnType) (Snippet . "DynmicDataAttribute(${1:string name})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "EntityUpdateHandler") (Description . "") (DisplayText . "EntityUpdateHandler") (RequiredNamespaceImport) (MethodHeader . "EntityUpdateHandler") (ReturnType) (Snippet . "EntityUpdateHandler$0") (Kind . "Delegate") (IsSuggestionMode . :json-false)) ((CompletionText . "EntityUpdateHandler") (Description . "") (DisplayText . "EntityUpdateHandler(object @object, IntPtr method)") (RequiredNamespaceImport) (MethodHeader . "EntityUpdateHandler(object @object, IntPtr method)") (ReturnType) (Snippet . "EntityUpdateHandler(${1:object @object}, ${2:IntPtr method})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "EntityUpdateType") (Description . "") (DisplayText . "EntityUpdateType") (RequiredNamespaceImport) (MethodHeader . "EntityUpdateType") (ReturnType) (Snippet . "EntityUpdateType$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "FLSDateEdit") (Description . "TODO: Update summary.
") (DisplayText . "FLSDateEdit") (RequiredNamespaceImport) (MethodHeader . "FLSDateEdit") (ReturnType) (Snippet . "FLSDateEdit$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "FLSDateEdit") (Description . "") (DisplayText . "FLSDateEdit()") (RequiredNamespaceImport) (MethodHeader . "FLSDateEdit()") (ReturnType) (Snippet . "FLSDateEdit()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "IDateTimeInputViewModel") (Description . "Implements an interface for date time object which may use only date or only time or both or nothing.
") (DisplayText . "IDateTimeInputViewModel") (RequiredNamespaceImport) (MethodHeader . "IDateTimeInputViewModel") (ReturnType) (Snippet . "IDateTimeInputViewModel$0") (Kind . "Interface") (IsSuggestionMode . :json-false)) ((CompletionText . "IMaxMinDateTime") (Description . "Implements an interface for minimum and maximum date time classes.
") (DisplayText . "IMaxMinDateTime") (RequiredNamespaceImport) (MethodHeader . "IMaxMinDateTime") (ReturnType) (Snippet . "IMaxMinDateTime$0") (Kind . "Interface") (IsSuggestionMode . :json-false)) ((CompletionText . "OutputDateFrameSelectionType") (Description . "") (DisplayText . "OutputDateFrameSelectionType") (RequiredNamespaceImport) (MethodHeader . "OutputDateFrameSelectionType") (ReturnType) (Snippet . "OutputDateFrameSelectionType$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "ReConvertDateTimesEventArgs") (Description . "") (DisplayText . "ReConvertDateTimesEventArgs") (RequiredNamespaceImport) (MethodHeader . "ReConvertDateTimesEventArgs") (ReturnType) (Snippet . "ReConvertDateTimesEventArgs$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ReConvertDateTimesEventArgs") (Description . "") (DisplayText . "ReConvertDateTimesEventArgs(ITimeConverter converter, IProvideToday dateForTimeOfDayConversion)") (RequiredNamespaceImport) (MethodHeader . "ReConvertDateTimesEventArgs(ITimeConverter converter, IProvideToday dateForTimeOfDayConversion)") (ReturnType) (Snippet . "ReConvertDateTimesEventArgs(${1:ITimeConverter converter}, ${2:IProvideToday dateForTimeOfDayConversion})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "RepositoryItemDateEdit") (Description . "
A repository item storing settings specific to a DevExpress.XtraEditors.DateEdit control.") (DisplayText . "RepositoryItemDateEdit") (RequiredNamespaceImport) (MethodHeader . "RepositoryItemDateEdit") (ReturnType) (Snippet . "RepositoryItemDateEdit$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "RepositoryItemDateEdit") (Description . "
Initializes a new DevExpress.XtraEditors.Repository.RepositoryItemDateEdit class instance with default settings. ") (DisplayText . "RepositoryItemDateEdit()") (RequiredNamespaceImport) (MethodHeader . "RepositoryItemDateEdit()") (ReturnType) (Snippet . "RepositoryItemDateEdit()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "RepositoryItemFLSDateEdit") (Description . "TODO: Update summary.
") (DisplayText . "RepositoryItemFLSDateEdit") (RequiredNamespaceImport) (MethodHeader . "RepositoryItemFLSDateEdit") (ReturnType) (Snippet . "RepositoryItemFLSDateEdit$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "RepositoryItemFLSDateEdit") (Description . "") (DisplayText . "RepositoryItemFLSDateEdit()") (RequiredNamespaceImport) (MethodHeader . "RepositoryItemFLSDateEdit()") (ReturnType) (Snippet . "RepositoryItemFLSDateEdit()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ResourceSchedulerDateComparer") (Description . "Implements a model for 
") (DisplayText . "ResourceSchedulerDateComparer") (RequiredNamespaceImport) (MethodHeader . "ResourceSchedulerDateComparer") (ReturnType) (Snippet . "ResourceSchedulerDateComparer$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ResourceSchedulerDateComparer") (Description . "Initializes a new instance of the Fls.VisiTourClient.ViewModel.Scheduler.ResourceSchedulerDateComparer class. 
") (DisplayText . "ResourceSchedulerDateComparer()") (RequiredNamespaceImport) (MethodHeader . "ResourceSchedulerDateComparer()") (ReturnType) (Snippet . "ResourceSchedulerDateComparer()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "SchedulerViewDateTimeSlotModel") (Description . "Implements a model for scheduler view scheduleTable column header.
") (DisplayText . "SchedulerViewDateTimeSlotModel") (RequiredNamespaceImport) (MethodHeader . "SchedulerViewDateTimeSlotModel") (ReturnType) (Snippet . "SchedulerViewDateTimeSlotModel$0") (Kind . "Struct") (IsSuggestionMode . :json-false)) ((CompletionText . "SchedulerViewDateTimeSlotModel") (Description . "") (DisplayText . "SchedulerViewDateTimeSlotModel()") (RequiredNamespaceImport) (MethodHeader . "SchedulerViewDateTimeSlotModel()") (ReturnType) (Snippet . "SchedulerViewDateTimeSlotModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "SchedulerViewDateTimeSlotModel") (Description . "Initializes a new instance of the Fls.VisiTourClient.ViewModel.Scheduler.SchedulerViewDateTimeSlotModel struct.

slot: The date time slot.
isZombieTime: Indicates that slot is a zombie.
width: The slots width.") (DisplayText . "SchedulerViewDateTimeSlotModel(DateTimeSlot slot, bool isZombieTime, double width)") (RequiredNamespaceImport) (MethodHeader . "SchedulerViewDateTimeSlotModel(DateTimeSlot slot, bool isZombieTime, double width)") (ReturnType) (Snippet . "SchedulerViewDateTimeSlotModel(${1:DateTimeSlot slot}, ${2:bool isZombieTime}, ${3:double width})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateLists") (Description . "Implements a model for 
") (DisplayText . "UpdateLists<TKey, TData>") (RequiredNamespaceImport) (MethodHeader . "UpdateLists<TKey, TData>") (ReturnType) (Snippet . "UpdateLists<${1:TKey}, ${2:TData}>$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateLists") (Description . "Initializes a new instance of the UpdateLists class.
") (DisplayText . "UpdateLists<TKey, TData>(string primaryKeyPropertyName, string modificationDatePropertyName)") (RequiredNamespaceImport) (MethodHeader . "UpdateLists<TKey, TData>(string primaryKeyPropertyName, string modificationDatePropertyName)") (ReturnType) (Snippet . "UpdateLists<${1:TKey}, ${2:TData}>(${3:string primaryKeyPropertyName}, ${4:string modificationDatePropertyName})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateVersion") (Description . "") (DisplayText . "UpdateVersion") (RequiredNamespaceImport) (MethodHeader . "UpdateVersion") (ReturnType) (Snippet . "UpdateVersion$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateVersion") (Description . "") (DisplayText . "UpdateVersion()") (RequiredNamespaceImport) (MethodHeader . "UpdateVersion()") (ReturnType) (Snippet . "UpdateVersion()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateVersion") (Description . "") (DisplayText . "UpdateVersion(FileVersionInfo fv)") (RequiredNamespaceImport) (MethodHeader . "UpdateVersion(FileVersionInfo fv)") (ReturnType) (Snippet . "UpdateVersion(${1:FileVersionInfo fv})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateVersion") (Description . "") (DisplayText . "UpdateVersion(string version)") (RequiredNamespaceImport) (MethodHeader . "UpdateVersion(string version)") (ReturnType) (Snippet . "UpdateVersion(${1:string version})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateWorkflowRequest") (Description . "") (DisplayText . "UpdateWorkflowRequest") (RequiredNamespaceImport) (MethodHeader . "UpdateWorkflowRequest") (ReturnType) (Snippet . "UpdateWorkflowRequest$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateWorkflowRequest") (Description . "") (DisplayText . "UpdateWorkflowRequest()") (RequiredNamespaceImport) (MethodHeader . "UpdateWorkflowRequest()") (ReturnType) (Snippet . "UpdateWorkflowRequest()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateWorkflowResponse") (Description . "") (DisplayText . "UpdateWorkflowResponse") (RequiredNamespaceImport) (MethodHeader . "UpdateWorkflowResponse") (ReturnType) (Snippet . "UpdateWorkflowResponse$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateWorkflowResponse") (Description . "") (DisplayText . "UpdateWorkflowResponse()") (RequiredNamespaceImport) (MethodHeader . "UpdateWorkflowResponse()") (ReturnType) (Snippet . "UpdateWorkflowResponse()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ValidateableObject") (Description . "Implements a model for validate objects. The validation methods have to be names like 
\"ValidatableObject.ValidationMethodNamePrefix\"\"PropertyName\" or \"ValidateDisplayName\".
The full declaration has to be: protected string ValidateDisplayName(). 
The validate methods are found automatically.
") (DisplayText . "ValidateableObject") (RequiredNamespaceImport) (MethodHeader . "ValidateableObject") (ReturnType) (Snippet . "ValidateableObject$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ValidateableObject") (Description . "Initializes a new instance of the Fls.Base.ValidateableObject class.
") (DisplayText . "ValidateableObject()") (RequiredNamespaceImport) (MethodHeader . "ValidateableObject()") (ReturnType) (Snippet . "ValidateableObject()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ValidateEventArgs") (Description . "") (DisplayText . "ValidateEventArgs") (RequiredNamespaceImport) (MethodHeader . "ValidateEventArgs") (ReturnType) (Snippet . "ValidateEventArgs$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ValidateEventArgs") (Description . "") (DisplayText . "ValidateEventArgs(DOBase data, string field)") (RequiredNamespaceImport) (MethodHeader . "ValidateEventArgs(DOBase data, string field)") (ReturnType) (Snippet . "ValidateEventArgs(${1:DOBase data}, ${2:string field})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "XmlDateTimeSerializationMode") (Description . "") (DisplayText . "XmlDateTimeSerializationMode") (RequiredNamespaceImport) (MethodHeader . "XmlDateTimeSerializationMode") (ReturnType) (Snippet . "XmlDateTimeSerializationMode$0") (Kind . "Enum") (IsSuggestionMode . :json-false))]
[10:17:32] <-- 44 /typelookup: ((Type) (Documentation))
[10:17:35] <-- 45 /autocomplete: [((CompletionText . "DateEditExtensionPainter") (Description . "Implements a model for 
") (DisplayText . "DateEditExtensionPainter") (RequiredNamespaceImport) (MethodHeader . "DateEditExtensionPainter") (ReturnType) (Snippet . "DateEditExtensionPainter$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DateEditExtensionPainter") (Description . "") (DisplayText . "DateEditExtensionPainter()") (RequiredNamespaceImport) (MethodHeader . "DateEditExtensionPainter()") (ReturnType) (Snippet . "DateEditExtensionPainter()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateEditExtensionViewInfo") (Description . "") (DisplayText . "DateEditExtensionViewInfo") (RequiredNamespaceImport) (MethodHeader . "DateEditExtensionViewInfo") (ReturnType) (Snippet . "DateEditExtensionViewInfo$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DateEditExtensionViewInfo") (Description . "") (DisplayText . "DateEditExtensionViewInfo(RepositoryItem item)") (RequiredNamespaceImport) (MethodHeader . "DateEditExtensionViewInfo(RepositoryItem item)") (ReturnType) (Snippet . "DateEditExtensionViewInfo(${1:RepositoryItem item})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateSelectorViewModel") (Description . "Implements a model for a date selector.
") (DisplayText . "DateSelectorViewModel") (RequiredNamespaceImport) (MethodHeader . "DateSelectorViewModel") (ReturnType) (Snippet . "DateSelectorViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DateSelectorViewModel") (Description . "Initializes a new instance of the Fls.VisiTourClient.ViewModel.DateSelectorViewModel class.
") (DisplayText . "DateSelectorViewModel()") (RequiredNamespaceImport) (MethodHeader . "DateSelectorViewModel()") (ReturnType) (Snippet . "DateSelectorViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateSelectorViewModel") (Description . "Initializes a new instance of the Fls.VisiTourClient.ViewModel.DateSelectorViewModel class.

startDate: The selected start date.
endDate: The selected end date.") (DisplayText . "DateSelectorViewModel(DateTimeInputViewModel startDate, DateTimeInputViewModel endDate)") (RequiredNamespaceImport) (MethodHeader . "DateSelectorViewModel(DateTimeInputViewModel startDate, DateTimeInputViewModel endDate)") (ReturnType) (Snippet . "DateSelectorViewModel(${1:DateTimeInputViewModel startDate}, ${2:DateTimeInputViewModel endDate})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateSelectorViewModel") (Description . "Initializes a new instance of the Fls.VisiTourClient.ViewModel.DateSelectorViewModel class.

elementId: The elements id.
startDate: The selected start date.
endDate: The selected end date.") (DisplayText . "DateSelectorViewModel(UIItemId elementId, DateTimeInputViewModel startDate, DateTimeInputViewModel endDate)") (RequiredNamespaceImport) (MethodHeader . "DateSelectorViewModel(UIItemId elementId, DateTimeInputViewModel startDate, DateTimeInputViewModel endDate)") (ReturnType) (Snippet . "DateSelectorViewModel(${1:UIItemId elementId}, ${2:DateTimeInputViewModel startDate}, ${3:DateTimeInputViewModel endDate})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime") (RequiredNamespaceImport) (MethodHeader . "DateTime") (ReturnType) (Snippet . "DateTime$0") (Kind . "Struct") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime()") (RequiredNamespaceImport) (MethodHeader . "DateTime()") (ReturnType) (Snippet . "DateTime()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, Calendar calendar)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, Calendar calendar)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:Calendar calendar})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, int hour, int minute, int second)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, int hour, int minute, int second)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, int hour, int minute, int second, Calendar calendar)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, int hour, int minute, int second, Calendar calendar)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:Calendar calendar})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, int hour, int minute, int second, DateTimeKind kind)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, int hour, int minute, int second, DateTimeKind kind)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:DateTimeKind kind})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:int millisecond})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, Calendar calendar)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, Calendar calendar)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:int millisecond}, ${8:Calendar calendar})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, Calendar calendar, DateTimeKind kind)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, Calendar calendar, DateTimeKind kind)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:int millisecond}, ${8:Calendar calendar}, ${9:DateTimeKind kind})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, DateTimeKind kind)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, DateTimeKind kind)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:int millisecond}, ${8:DateTimeKind kind})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(long ticks)") (RequiredNamespaceImport) (MethodHeader . "DateTime(long ticks)") (ReturnType) (Snippet . "DateTime(${1:long ticks})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(long ticks, DateTimeKind kind)") (RequiredNamespaceImport) (MethodHeader . "DateTime(long ticks, DateTimeKind kind)") (ReturnType) (Snippet . "DateTime(${1:long ticks}, ${2:DateTimeKind kind})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeConverter") (Description . "") (DisplayText . "DateTimeConverter") (RequiredNamespaceImport) (MethodHeader . "DateTimeConverter") (ReturnType) (Snippet . "DateTimeConverter$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeConverter") (Description . "") (DisplayText . "DateTimeConverter()") (RequiredNamespaceImport) (MethodHeader . "DateTimeConverter()") (ReturnType) (Snippet . "DateTimeConverter()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeEditView") (Description . "Implements a forms user control based on a view model.
This control 
") (DisplayText . "DateTimeEditView") (RequiredNamespaceImport) (MethodHeader . "DateTimeEditView") (ReturnType) (Snippet . "DateTimeEditView$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeEditView") (Description . "Initializes a new instance of the Fls.Controls.Forms.DevExpressBase.DateTimeEditView class.
") (DisplayText . "DateTimeEditView()") (RequiredNamespaceImport) (MethodHeader . "DateTimeEditView()") (ReturnType) (Snippet . "DateTimeEditView()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeEditView") (Description . "Initializes a new instance of the Fls.Controls.Forms.DevExpressBase.DateTimeEditView class.

viewModel: The used view model ") (DisplayText . "DateTimeEditView(DateTimeInputViewModel viewModel)") (RequiredNamespaceImport) (MethodHeader . "DateTimeEditView(DateTimeInputViewModel viewModel)") (ReturnType) (Snippet . "DateTimeEditView(${1:DateTimeInputViewModel viewModel})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeHelper") (Description . "") (DisplayText . "DateTimeHelper") (RequiredNamespaceImport) (MethodHeader . "DateTimeHelper") (ReturnType) (Snippet . "DateTimeHelper$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeInputViewModel") (Description . "Implements a model for date time input.
") (DisplayText . "DateTimeInputViewModel") (RequiredNamespaceImport) (MethodHeader . "DateTimeInputViewModel") (ReturnType) (Snippet . "DateTimeInputViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeInputViewModel") (Description . "Initializes a new instance of the Fls.UI.Base.DateTimeInputViewModel class.
") (DisplayText . "DateTimeInputViewModel()") (RequiredNamespaceImport) (MethodHeader . "DateTimeInputViewModel()") (ReturnType) (Snippet . "DateTimeInputViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeInputViewModel") (Description . "Initializes a new instance of the Fls.UI.Base.DateTimeInputViewModel class.

elementId: The elements id.") (DisplayText . "DateTimeInputViewModel(UIItemId elementId)") (RequiredNamespaceImport) (MethodHeader . "DateTimeInputViewModel(UIItemId elementId)") (ReturnType) (Snippet . "DateTimeInputViewModel(${1:UIItemId elementId})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeInputViewModel") (Description . "Initializes a new instance of the Fls.UI.Base.DateTimeInputViewModel class.

elementId: The elements id.
minDate: The minimum selectable date.
maxDate: The maximum selectable date.
selectedDate: The selected date.") (DisplayText . "DateTimeInputViewModel(UIItemId elementId, DateTime minDate, DateTime maxDate, DateTime selectedDate)") (RequiredNamespaceImport) (MethodHeader . "DateTimeInputViewModel(UIItemId elementId, DateTime minDate, DateTime maxDate, DateTime selectedDate)") (ReturnType) (Snippet . "DateTimeInputViewModel(${1:UIItemId elementId}, ${2:DateTime minDate}, ${3:DateTime maxDate}, ${4:DateTime selectedDate})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeInputViewModel") (Description . "Initializes a new instance of the Fls.UI.Base.DateTimeInputViewModel class.

elementId: The elements id.
selectedDate: The selected date.") (DisplayText . "DateTimeInputViewModel(UIItemId elementId, DateTime selectedDate)") (RequiredNamespaceImport) (MethodHeader . "DateTimeInputViewModel(UIItemId elementId, DateTime selectedDate)") (ReturnType) (Snippet . "DateTimeInputViewModel(${1:UIItemId elementId}, ${2:DateTime selectedDate})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeKind") (Description . "") (DisplayText . "DateTimeKind") (RequiredNamespaceImport) (MethodHeader . "DateTimeKind") (ReturnType) (Snippet . "DateTimeKind$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset") (ReturnType) (Snippet . "DateTimeOffset$0") (Kind . "Struct") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset()") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset()") (ReturnType) (Snippet . "DateTimeOffset()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset(DateTime dateTime)") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset(DateTime dateTime)") (ReturnType) (Snippet . "DateTimeOffset(${1:DateTime dateTime})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset(DateTime dateTime, TimeSpan offset)") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset(DateTime dateTime, TimeSpan offset)") (ReturnType) (Snippet . "DateTimeOffset(${1:DateTime dateTime}, ${2:TimeSpan offset})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset(int year, int month, int day, int hour, int minute, int second, int millisecond, Calendar calendar, TimeSpan offset)") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset(int year, int month, int day, int hour, int minute, int second, int millisecond, Calendar calendar, TimeSpan offset)") (ReturnType) (Snippet . "DateTimeOffset(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:int millisecond}, ${8:Calendar calendar}, ${9:TimeSpan offset})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset(int year, int month, int day, int hour, int minute, int second, int millisecond, TimeSpan offset)") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset(int year, int month, int day, int hour, int minute, int second, int millisecond, TimeSpan offset)") (ReturnType) (Snippet . "DateTimeOffset(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:int millisecond}, ${8:TimeSpan offset})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset(int year, int month, int day, int hour, int minute, int second, TimeSpan offset)") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset(int year, int month, int day, int hour, int minute, int second, TimeSpan offset)") (ReturnType) (Snippet . "DateTimeOffset(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:TimeSpan offset})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset(long ticks, TimeSpan offset)") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset(long ticks, TimeSpan offset)") (ReturnType) (Snippet . "DateTimeOffset(${1:long ticks}, ${2:TimeSpan offset})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffsetConverter") (Description . "") (DisplayText . "DateTimeOffsetConverter") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffsetConverter") (ReturnType) (Snippet . "DateTimeOffsetConverter$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffsetConverter") (Description . "") (DisplayText . "DateTimeOffsetConverter()") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffsetConverter()") (ReturnType) (Snippet . "DateTimeOffsetConverter()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeSlot") (Description . "Implements a model for time intervals. 
") (DisplayText . "DateTimeSlot") (RequiredNamespaceImport) (MethodHeader . "DateTimeSlot") (ReturnType) (Snippet . "DateTimeSlot$0") (Kind . "Struct") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeSlot") (Description . "") (DisplayText . "DateTimeSlot()") (RequiredNamespaceImport) (MethodHeader . "DateTimeSlot()") (ReturnType) (Snippet . "DateTimeSlot()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeSlot") (Description . "Initializes a new instance of the Fls.Base.DateTimeSlot structure. 

start: The start time. 
duration: The duration. ") (DisplayText . "DateTimeSlot(DateTime start, DateTime end)") (RequiredNamespaceImport) (MethodHeader . "DateTimeSlot(DateTime start, DateTime end)") (ReturnType) (Snippet . "DateTimeSlot(${1:DateTime start}, ${2:DateTime end})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeSlot") (Description . "Initializes a new instance of the Fls.Base.DateTimeSlot structure. 

start: The start time. 
duration: The duration. ") (DisplayText . "DateTimeSlot(DateTime start, TimeSpan duration)") (RequiredNamespaceImport) (MethodHeader . "DateTimeSlot(DateTime start, TimeSpan duration)") (ReturnType) (Snippet . "DateTimeSlot(${1:DateTime start}, ${2:TimeSpan duration})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "BookResourceInDateFrameViewModel") (Description . "") (DisplayText . "BookResourceInDateFrameViewModel") (RequiredNamespaceImport) (MethodHeader . "BookResourceInDateFrameViewModel") (ReturnType) (Snippet . "BookResourceInDateFrameViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "BookResourceInDateFrameViewModel") (Description . "") (DisplayText . "BookResourceInDateFrameViewModel(TourModel mainTour, ConcurrentDictionary<int, DOEngineer> availableEngineeres, DateTime startDate, DateTime endDate, DOEngineer changeEngineer)") (RequiredNamespaceImport) (MethodHeader . "BookResourceInDateFrameViewModel(TourModel mainTour, ConcurrentDictionary<int, DOEngineer> availableEngineeres, DateTime startDate, DateTime endDate, DOEngineer changeEngineer)") (ReturnType) (Snippet . "BookResourceInDateFrameViewModel(${1:TourModel mainTour}, ${2:ConcurrentDictionary<int, DOEngineer> availableEngineeres}, ${3:DateTime startDate}, ${4:DateTime endDate}, ${5:DOEngineer changeEngineer})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ClientUpdater") (Description . "") (DisplayText . "ClientUpdater") (RequiredNamespaceImport) (MethodHeader . "ClientUpdater") (ReturnType) (Snippet . "ClientUpdater$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ClientUpdater") (Description . "") (DisplayText . "ClientUpdater(string[] cmdArgs)") (RequiredNamespaceImport) (MethodHeader . "ClientUpdater(string[] cmdArgs)") (ReturnType) (Snippet . "ClientUpdater(${1:string[] cmdArgs})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataAccess") (Description . "") (DisplayText . "DataAccess") (RequiredNamespaceImport) (MethodHeader . "DataAccess") (ReturnType) (Snippet . "DataAccess$0") (Kind . "Namespace") (IsSuggestionMode . :json-false)) ((CompletionText . "DataBaseRequiredPropertiesType") (Description . "") (DisplayText . "DataBaseRequiredPropertiesType") (RequiredNamespaceImport) (MethodHeader . "DataBaseRequiredPropertiesType") (ReturnType) (Snippet . "DataBaseRequiredPropertiesType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataBaseRequiredPropertiesType") (Description . "DataBaseRequiredPropertiesType class constructor
") (DisplayText . "DataBaseRequiredPropertiesType()") (RequiredNamespaceImport) (MethodHeader . "DataBaseRequiredPropertiesType()") (ReturnType) (Snippet . "DataBaseRequiredPropertiesType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataConnection") (Description . "TODO: Update summary.
") (DisplayText . "DataConnection") (RequiredNamespaceImport) (MethodHeader . "DataConnection") (ReturnType) (Snippet . "DataConnection$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataConnection") (Description . "") (DisplayText . "DataConnection()") (RequiredNamespaceImport) (MethodHeader . "DataConnection()") (ReturnType) (Snippet . "DataConnection()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataConnection") (Description . "") (DisplayText . "DataConnection(DOBindingSource lookupBindingSource, DProperty propertyName, string summary, DProperty lookedUpProperty)") (RequiredNamespaceImport) (MethodHeader . "DataConnection(DOBindingSource lookupBindingSource, DProperty propertyName, string summary, DProperty lookedUpProperty)") (ReturnType) (Snippet . "DataConnection(${1:DOBindingSource lookupBindingSource}, ${2:DProperty propertyName}, ${3:string summary}, ${4:DProperty lookedUpProperty})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataConnection") (Description . "") (DisplayText . "DataConnection(DODataView lookupBindingSource, DProperty propertyName, string summary, DProperty lookedUpProperty)") (RequiredNamespaceImport) (MethodHeader . "DataConnection(DODataView lookupBindingSource, DProperty propertyName, string summary, DProperty lookedUpProperty)") (ReturnType) (Snippet . "DataConnection(${1:DODataView lookupBindingSource}, ${2:DProperty propertyName}, ${3:string summary}, ${4:DProperty lookedUpProperty})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataDependencyEventArgs") (Description . "Implements a model for request event arguments.
") (DisplayText . "DataDependencyEventArgs") (RequiredNamespaceImport) (MethodHeader . "DataDependencyEventArgs") (ReturnType) (Snippet . "DataDependencyEventArgs$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataDependencyEventArgs") (Description . "Initializes a new instance of the Fls.UI.Base.UserInformationEventArgs class.

request: An user request.") (DisplayText . "DataDependencyEventArgs(DataDependencyViewModel infoViewModel)") (RequiredNamespaceImport) (MethodHeader . "DataDependencyEventArgs(DataDependencyViewModel infoViewModel)") (ReturnType) (Snippet . "DataDependencyEventArgs(${1:DataDependencyViewModel infoViewModel})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataDependencyViewModel") (Description . "") (DisplayText . "DataDependencyViewModel") (RequiredNamespaceImport) (MethodHeader . "DataDependencyViewModel") (ReturnType) (Snippet . "DataDependencyViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataDependencyViewModel") (Description . "") (DisplayText . "DataDependencyViewModel(DOBindingSource source, IEnumerable<string> ignoreEntitiesList)") (RequiredNamespaceImport) (MethodHeader . "DataDependencyViewModel(DOBindingSource source, IEnumerable<string> ignoreEntitiesList)") (ReturnType) (Snippet . "DataDependencyViewModel(${1:DOBindingSource source}, ${2:IEnumerable<string> ignoreEntitiesList})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataErrorsChangedEventArgs") (Description . "") (DisplayText . "DataErrorsChangedEventArgs") (RequiredNamespaceImport) (MethodHeader . "DataErrorsChangedEventArgs") (ReturnType) (Snippet . "DataErrorsChangedEventArgs$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataErrorsChangedEventArgs") (Description . "") (DisplayText . "DataErrorsChangedEventArgs(string propertyName)") (RequiredNamespaceImport) (MethodHeader . "DataErrorsChangedEventArgs(string propertyName)") (ReturnType) (Snippet . "DataErrorsChangedEventArgs(${1:string propertyName})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataGroupType") (Description . "") (DisplayText . "DataGroupType") (RequiredNamespaceImport) (MethodHeader . "DataGroupType") (ReturnType) (Snippet . "DataGroupType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataGroupType") (Description . "DataGroupType class constructor
") (DisplayText . "DataGroupType()") (RequiredNamespaceImport) (MethodHeader . "DataGroupType()") (ReturnType) (Snippet . "DataGroupType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataItemType") (Description . "") (DisplayText . "DataItemType") (RequiredNamespaceImport) (MethodHeader . "DataItemType") (ReturnType) (Snippet . "DataItemType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataItemType") (Description . "") (DisplayText . "DataItemType()") (RequiredNamespaceImport) (MethodHeader . "DataItemType()") (ReturnType) (Snippet . "DataItemType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataItemTypeCreateStyle") (Description . "") (DisplayText . "DataItemTypeCreateStyle") (RequiredNamespaceImport) (MethodHeader . "DataItemTypeCreateStyle") (ReturnType) (Snippet . "DataItemTypeCreateStyle$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DataItemTypeEntityViewSourceMode") (Description . "") (DisplayText . "DataItemTypeEntityViewSourceMode") (RequiredNamespaceImport) (MethodHeader . "DataItemTypeEntityViewSourceMode") (ReturnType) (Snippet . "DataItemTypeEntityViewSourceMode$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DataItemTypeInitAction") (Description . "") (DisplayText . "DataItemTypeInitAction") (RequiredNamespaceImport) (MethodHeader . "DataItemTypeInitAction") (ReturnType) (Snippet . "DataItemTypeInitAction$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DataMisalignedException") (Description . "") (DisplayText . "DataMisalignedException") (RequiredNamespaceImport) (MethodHeader . "DataMisalignedException") (ReturnType) (Snippet . "DataMisalignedException$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataMisalignedException") (Description . "") (DisplayText . "DataMisalignedException()") (RequiredNamespaceImport) (MethodHeader . "DataMisalignedException()") (ReturnType) (Snippet . "DataMisalignedException()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataMisalignedException") (Description . "") (DisplayText . "DataMisalignedException(string message)") (RequiredNamespaceImport) (MethodHeader . "DataMisalignedException(string message)") (ReturnType) (Snippet . "DataMisalignedException(${1:string message})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataMisalignedException") (Description . "") (DisplayText . "DataMisalignedException(string message, Exception innerException)") (RequiredNamespaceImport) (MethodHeader . "DataMisalignedException(string message, Exception innerException)") (ReturnType) (Snippet . "DataMisalignedException(${1:string message}, ${2:Exception innerException})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataModel") (Description . "Implements a model for 
") (DisplayText . "DataModel") (RequiredNamespaceImport) (MethodHeader . "DataModel") (ReturnType) (Snippet . "DataModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataModel") (Description . "") (DisplayText . "DataModel()") (RequiredNamespaceImport) (MethodHeader . "DataModel()") (ReturnType) (Snippet . "DataModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObject") (Description . "") (DisplayText . "DataObject") (RequiredNamespaceImport) (MethodHeader . "DataObject") (ReturnType) (Snippet . "DataObject$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObject") (Description . "") (DisplayText . "DataObject()") (RequiredNamespaceImport) (MethodHeader . "DataObject()") (ReturnType) (Snippet . "DataObject()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectAttribute") (Description . "") (DisplayText . "DataObjectAttribute") (RequiredNamespaceImport) (MethodHeader . "DataObjectAttribute") (ReturnType) (Snippet . "DataObjectAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectAttribute") (Description . "") (DisplayText . "DataObjectAttribute()") (RequiredNamespaceImport) (MethodHeader . "DataObjectAttribute()") (ReturnType) (Snippet . "DataObjectAttribute()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectAttribute") (Description . "") (DisplayText . "DataObjectAttribute(bool isDataObject)") (RequiredNamespaceImport) (MethodHeader . "DataObjectAttribute(bool isDataObject)") (ReturnType) (Snippet . "DataObjectAttribute(${1:bool isDataObject})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectClock") (Description . "") (DisplayText . "DataObjectClock<T>") (RequiredNamespaceImport) (MethodHeader . "DataObjectClock<T>") (ReturnType) (Snippet . "DataObjectClock<${1:T}>$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectClock") (Description . "") (DisplayText . "DataObjectClock<T>(T doObject, ITimeExtractor extractor, IZonedClock unbiasedLocalTime)") (RequiredNamespaceImport) (MethodHeader . "DataObjectClock<T>(T doObject, ITimeExtractor extractor, IZonedClock unbiasedLocalTime)") (ReturnType) (Snippet . "DataObjectClock<${1:T}>(${2:T doObject}, ${3:ITimeExtractor extractor}, ${4:IZonedClock unbiasedLocalTime})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectFieldAttribute") (Description . "") (DisplayText . "DataObjectFieldAttribute") (RequiredNamespaceImport) (MethodHeader . "DataObjectFieldAttribute") (ReturnType) (Snippet . "DataObjectFieldAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectFieldAttribute") (Description . "") (DisplayText . "DataObjectFieldAttribute(bool primaryKey)") (RequiredNamespaceImport) (MethodHeader . "DataObjectFieldAttribute(bool primaryKey)") (ReturnType) (Snippet . "DataObjectFieldAttribute(${1:bool primaryKey})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectFieldAttribute") (Description . "") (DisplayText . "DataObjectFieldAttribute(bool primaryKey, bool isIdentity)") (RequiredNamespaceImport) (MethodHeader . "DataObjectFieldAttribute(bool primaryKey, bool isIdentity)") (ReturnType) (Snippet . "DataObjectFieldAttribute(${1:bool primaryKey}, ${2:bool isIdentity})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectFieldAttribute") (Description . "") (DisplayText . "DataObjectFieldAttribute(bool primaryKey, bool isIdentity, bool isNullable)") (RequiredNamespaceImport) (MethodHeader . "DataObjectFieldAttribute(bool primaryKey, bool isIdentity, bool isNullable)") (ReturnType) (Snippet . "DataObjectFieldAttribute(${1:bool primaryKey}, ${2:bool isIdentity}, ${3:bool isNullable})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectFieldAttribute") (Description . "") (DisplayText . "DataObjectFieldAttribute(bool primaryKey, bool isIdentity, bool isNullable, int length)") (RequiredNamespaceImport) (MethodHeader . "DataObjectFieldAttribute(bool primaryKey, bool isIdentity, bool isNullable, int length)") (ReturnType) (Snippet . "DataObjectFieldAttribute(${1:bool primaryKey}, ${2:bool isIdentity}, ${3:bool isNullable}, ${4:int length})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectMethodAttribute") (Description . "") (DisplayText . "DataObjectMethodAttribute") (RequiredNamespaceImport) (MethodHeader . "DataObjectMethodAttribute") (ReturnType) (Snippet . "DataObjectMethodAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectMethodAttribute") (Description . "") (DisplayText . "DataObjectMethodAttribute(DataObjectMethodType methodType)") (RequiredNamespaceImport) (MethodHeader . "DataObjectMethodAttribute(DataObjectMethodType methodType)") (ReturnType) (Snippet . "DataObjectMethodAttribute(${1:DataObjectMethodType methodType})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectMethodAttribute") (Description . "") (DisplayText . "DataObjectMethodAttribute(DataObjectMethodType methodType, bool isDefault)") (RequiredNamespaceImport) (MethodHeader . "DataObjectMethodAttribute(DataObjectMethodType methodType, bool isDefault)") (ReturnType) (Snippet . "DataObjectMethodAttribute(${1:DataObjectMethodType methodType}, ${2:bool isDefault})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectMethodType") (Description . "") (DisplayText . "DataObjectMethodType") (RequiredNamespaceImport) (MethodHeader . "DataObjectMethodType") (ReturnType) (Snippet . "DataObjectMethodType$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectTimeInformation") (Description . "") (DisplayText . "DataObjectTimeInformation") (RequiredNamespaceImport) (MethodHeader . "DataObjectTimeInformation") (ReturnType) (Snippet . "DataObjectTimeInformation$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectTimeInformation") (Description . "") (DisplayText . "DataObjectTimeInformation(TimeZoneInfo timeZone, IProvideToday dateForTimeOfDayConversion, TimeZoneAlias alias)") (RequiredNamespaceImport) (MethodHeader . "DataObjectTimeInformation(TimeZoneInfo timeZone, IProvideToday dateForTimeOfDayConversion, TimeZoneAlias alias)") (ReturnType) (Snippet . "DataObjectTimeInformation(${1:TimeZoneInfo timeZone}, ${2:IProvideToday dateForTimeOfDayConversion}, ${3:TimeZoneAlias alias})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectTimeInformationExtractor") (Description . "") (DisplayText . "DataObjectTimeInformationExtractor") (RequiredNamespaceImport) (MethodHeader . "DataObjectTimeInformationExtractor") (ReturnType) (Snippet . "DataObjectTimeInformationExtractor$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectTimeInformationExtractor") (Description . "") (DisplayText . "DataObjectTimeInformationExtractor(TimeZoneInfo fallBackTimeZone, IProvideToday fallBackDateForTimeOfDayConversion)") (RequiredNamespaceImport) (MethodHeader . "DataObjectTimeInformationExtractor(TimeZoneInfo fallBackTimeZone, IProvideToday fallBackDateForTimeOfDayConversion)") (ReturnType) (Snippet . "DataObjectTimeInformationExtractor(${1:TimeZoneInfo fallBackTimeZone}, ${2:IProvideToday fallBackDateForTimeOfDayConversion})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectToDateMapper") (Description . "") (DisplayText . "DataObjectToDateMapper") (RequiredNamespaceImport) (MethodHeader . "DataObjectToDateMapper") (ReturnType) (Snippet . "DataObjectToDateMapper$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectToDateMapper") (Description . "") (DisplayText . "DataObjectToDateMapper(IProvideToday fallBackToday)") (RequiredNamespaceImport) (MethodHeader . "DataObjectToDateMapper(IProvideToday fallBackToday)") (ReturnType) (Snippet . "DataObjectToDateMapper(${1:IProvideToday fallBackToday})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataOutputType") (Description . "") (DisplayText . "DataOutputType") (RequiredNamespaceImport) (MethodHeader . "DataOutputType") (ReturnType) (Snippet . "DataOutputType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataOutputType") (Description . "DataOutputType class constructor
") (DisplayText . "DataOutputType()") (RequiredNamespaceImport) (MethodHeader . "DataOutputType()") (ReturnType) (Snippet . "DataOutputType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataRequestModel") (Description . "") (DisplayText . "DataRequestModel<Index, Data>") (RequiredNamespaceImport) (MethodHeader . "DataRequestModel<Index, Data>") (ReturnType) (Snippet . "DataRequestModel<${1:Index}, ${2:Data}>$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataRequestModel") (Description . "") (DisplayText . "DataRequestModel<Index, Data>()") (RequiredNamespaceImport) (MethodHeader . "DataRequestModel<Index, Data>()") (ReturnType) (Snippet . "DataRequestModel<${1:Index}, ${2:Data}>()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataSourceActionType") (Description . "") (DisplayText . "DataSourceActionType") (RequiredNamespaceImport) (MethodHeader . "DataSourceActionType") (ReturnType) (Snippet . "DataSourceActionType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataSourceActionType") (Description . "") (DisplayText . "DataSourceActionType()") (RequiredNamespaceImport) (MethodHeader . "DataSourceActionType()") (ReturnType) (Snippet . "DataSourceActionType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataSourceActionTypeType") (Description . "") (DisplayText . "DataSourceActionTypeType") (RequiredNamespaceImport) (MethodHeader . "DataSourceActionTypeType") (ReturnType) (Snippet . "DataSourceActionTypeType$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DataSourceErrorEventArgs") (Description . "") (DisplayText . "DataSourceErrorEventArgs") (RequiredNamespaceImport) (MethodHeader . "DataSourceErrorEventArgs") (ReturnType) (Snippet . "DataSourceErrorEventArgs$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataSourceErrorEventArgs") (Description . "") (DisplayText . "DataSourceErrorEventArgs(string textId)") (RequiredNamespaceImport) (MethodHeader . "DataSourceErrorEventArgs(string textId)") (ReturnType) (Snippet . "DataSourceErrorEventArgs(${1:string textId})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataSourceErrorEventArgs") (Description . "") (DisplayText . "DataSourceErrorEventArgs(string textId, int code)") (RequiredNamespaceImport) (MethodHeader . "DataSourceErrorEventArgs(string textId, int code)") (ReturnType) (Snippet . "DataSourceErrorEventArgs(${1:string textId}, ${2:int code})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataSourceNameAttribute") (Description . "Implements an attribute for a subversion version.
") (DisplayText . "DataSourceNameAttribute") (RequiredNamespaceImport) (MethodHeader . "DataSourceNameAttribute") (ReturnType) (Snippet . "DataSourceNameAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataSourceNameAttribute") (Description . "Initializes a new instance of the Fls.VisiTourClient.ViewModel.DataSourceNameAttribute class.

svnRevision: The subversion version.") (DisplayText . "DataSourceNameAttribute(string name)") (RequiredNamespaceImport) (MethodHeader . "DataSourceNameAttribute(string name)") (ReturnType) (Snippet . "DataSourceNameAttribute(${1:string name})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataSources") (Description . "") (DisplayText . "DataSources") (RequiredNamespaceImport) (MethodHeader . "DataSources") (ReturnType) (Snippet . "DataSources$0") (Kind . "Namespace") (IsSuggestionMode . :json-false)) ((CompletionText . "DataTableSourceViewModel") (Description . "") (DisplayText . "DataTableSourceViewModel") (RequiredNamespaceImport) (MethodHeader . "DataTableSourceViewModel") (ReturnType) (Snippet . "DataTableSourceViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataTableSourceViewModel") (Description . "") (DisplayText . "DataTableSourceViewModel()") (RequiredNamespaceImport) (MethodHeader . "DataTableSourceViewModel()") (ReturnType) (Snippet . "DataTableSourceViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataTableViewModel") (Description . "Implements a model for data table.
") (DisplayText . "DataTableViewModel") (RequiredNamespaceImport) (MethodHeader . "DataTableViewModel") (ReturnType) (Snippet . "DataTableViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataTableViewModel") (Description . "Initializes a new instance of the Fls.UI.Base.DataTableViewModel class.
") (DisplayText . "DataTableViewModel()") (RequiredNamespaceImport) (MethodHeader . "DataTableViewModel()") (ReturnType) (Snippet . "DataTableViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataTableWithColoringViewModel") (Description . "TODO: Update summary.
") (DisplayText . "DataTableWithColoringViewModel") (RequiredNamespaceImport) (MethodHeader . "DataTableWithColoringViewModel") (ReturnType) (Snippet . "DataTableWithColoringViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataTableWithColoringViewModel") (Description . "Initializes a new instance of the Fls.UI.Base.DataTableWithColoringViewModel class.
") (DisplayText . "DataTableWithColoringViewModel()") (RequiredNamespaceImport) (MethodHeader . "DataTableWithColoringViewModel()") (ReturnType) (Snippet . "DataTableWithColoringViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataTransfersTypes") (Description . "The available data transfer types.
") (DisplayText . "DataTransfersTypes") (RequiredNamespaceImport) (MethodHeader . "DataTransfersTypes") (ReturnType) (Snippet . "DataTransfersTypes$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DDataBase") (Description . "") (DisplayText . "DDataBase") (RequiredNamespaceImport) (MethodHeader . "DDataBase") (ReturnType) (Snippet . "DDataBase$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DDataBase") (Description . "") (DisplayText . "DDataBase()") (RequiredNamespaceImport) (MethodHeader . "DDataBase()") (ReturnType) (Snippet . "DDataBase()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DisplayTextEvaluator") (Description . "") (DisplayText . "DisplayTextEvaluator") (RequiredNamespaceImport) (MethodHeader . "DisplayTextEvaluator") (ReturnType) (Snippet . "DisplayTextEvaluator$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DisplayTextEvaluator") (Description . "") (DisplayText . "DisplayTextEvaluator(IDisplayTextEvaluatorOwner owner)") (RequiredNamespaceImport) (MethodHeader . "DisplayTextEvaluator(IDisplayTextEvaluatorOwner owner)") (ReturnType) (Snippet . "DisplayTextEvaluator(${1:IDisplayTextEvaluatorOwner owner})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DLocalizationType") (Description . "") (DisplayText . "DLocalizationType") (RequiredNamespaceImport) (MethodHeader . "DLocalizationType") (ReturnType) (Snippet . "DLocalizationType$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DOArticle") (Description . "") (DisplayText . "DOArticle") (RequiredNamespaceImport) (MethodHeader . "DOArticle") (ReturnType) (Snippet . "DOArticle$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOArticle") (Description . "") (DisplayText . "DOArticle()") (RequiredNamespaceImport) (MethodHeader . "DOArticle()") (ReturnType) (Snippet . "DOArticle()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOAttachmentFilter") (Description . "") (DisplayText . "DOAttachmentFilter") (RequiredNamespaceImport) (MethodHeader . "DOAttachmentFilter") (ReturnType) (Snippet . "DOAttachmentFilter$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOAttachmentFilter") (Description . "") (DisplayText . "DOAttachmentFilter()") (RequiredNamespaceImport) (MethodHeader . "DOAttachmentFilter()") (ReturnType) (Snippet . "DOAttachmentFilter()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOAttachments") (Description . "") (DisplayText . "DOAttachments") (RequiredNamespaceImport) (MethodHeader . "DOAttachments") (ReturnType) (Snippet . "DOAttachments$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOAttachments") (Description . "") (DisplayText . "DOAttachments()") (RequiredNamespaceImport) (MethodHeader . "DOAttachments()") (ReturnType) (Snippet . "DOAttachments()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOCallstate") (Description . "") (DisplayText . "DOCallstate") (RequiredNamespaceImport) (MethodHeader . "DOCallstate") (ReturnType) (Snippet . "DOCallstate$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOCallstate") (Description . "") (DisplayText . "DOCallstate()") (RequiredNamespaceImport) (MethodHeader . "DOCallstate()") (ReturnType) (Snippet . "DOCallstate()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOClientUpdateHistory") (Description . "") (DisplayText . "DOClientUpdateHistory") (RequiredNamespaceImport) (MethodHeader . "DOClientUpdateHistory") (ReturnType) (Snippet . "DOClientUpdateHistory$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOClientUpdateHistory") (Description . "") (DisplayText . "DOClientUpdateHistory()") (RequiredNamespaceImport) (MethodHeader . "DOClientUpdateHistory()") (ReturnType) (Snippet . "DOClientUpdateHistory()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DODataSource") (Description . "") (DisplayText . "DODataSource") (RequiredNamespaceImport) (MethodHeader . "DODataSource") (ReturnType) (Snippet . "DODataSource$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DODataSource") (Description . "") (DisplayText . "DODataSource(DEntity entity, IDOBaseRepository rep, IEntityValidation validator = null, eInitAction initAction = LoadAll)") (RequiredNamespaceImport) (MethodHeader . "DODataSource(DEntity entity, IDOBaseRepository rep, IEntityValidation validator = null, eInitAction initAction = LoadAll)") (ReturnType) (Snippet . "DODataSource(${1:DEntity entity}, ${2:IDOBaseRepository rep}, ${3:IEntityValidation validator = null}, ${4:eInitAction initAction = LoadAll})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DODataSource") (Description . "") (DisplayText . "DODataSource(DEntity entity, IDOBaseRepository rep, IEnumerable<DProperty> propertiesToRead, IEntityValidation validator = null)") (RequiredNamespaceImport) (MethodHeader . "DODataSource(DEntity entity, IDOBaseRepository rep, IEnumerable<DProperty> propertiesToRead, IEntityValidation validator = null)") (ReturnType) (Snippet . "DODataSource(${1:DEntity entity}, ${2:IDOBaseRepository rep}, ${3:IEnumerable<DProperty> propertiesToRead}, ${4:IEntityValidation validator = null})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DODataSource") (Description . "") (DisplayText . "DODataSource(DEntity entity, IDOBaseRepository rep, IEnumerable<string> propertyNames, IEntityValidation validator = null, eInitAction initAction = LoadAll)") (RequiredNamespaceImport) (MethodHeader . "DODataSource(DEntity entity, IDOBaseRepository rep, IEnumerable<string> propertyNames, IEntityValidation validator = null, eInitAction initAction = LoadAll)") (ReturnType) (Snippet . "DODataSource(${1:DEntity entity}, ${2:IDOBaseRepository rep}, ${3:IEnumerable<string> propertyNames}, ${4:IEntityValidation validator = null}, ${5:eInitAction initAction = LoadAll})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DODataSourceFactory") (Description . "") (DisplayText . "DODataSourceFactory") (RequiredNamespaceImport) (MethodHeader . "DODataSourceFactory") (ReturnType) (Snippet . "DODataSourceFactory$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DODataSourceFactory") (Description . "") (DisplayText . "DODataSourceFactory(IDOBaseRepository rep)") (RequiredNamespaceImport) (MethodHeader . "DODataSourceFactory(IDOBaseRepository rep)") (ReturnType) (Snippet . "DODataSourceFactory(${1:IDOBaseRepository rep})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DODataView") (Description . "") (DisplayText . "DODataView") (RequiredNamespaceImport) (MethodHeader . "DODataView") (ReturnType) (Snippet . "DODataView$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DODataView") (Description . "") (DisplayText . "DODataView(DODataSource dataSource, string clientFilterId = null, eInitAction initAction = LoadAll)") (RequiredNamespaceImport) (MethodHeader . "DODataView(DODataSource dataSource, string clientFilterId = null, eInitAction initAction = LoadAll)") (ReturnType) (Snippet . "DODataView(${1:DODataSource dataSource}, ${2:string clientFilterId = null}, ${3:eInitAction initAction = LoadAll})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DODataViewDirect") (Description . "") (DisplayText . "DODataViewDirect") (RequiredNamespaceImport) (MethodHeader . "DODataViewDirect") (ReturnType) (Snippet . "DODataViewDirect$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DODataViewDirect") (Description . "") (DisplayText . "DODataViewDirect(DODataSource dataSource, string clientFilterId = null, eInitAction initAction = LoadAll)") (RequiredNamespaceImport) (MethodHeader . "DODataViewDirect(DODataSource dataSource, string clientFilterId = null, eInitAction initAction = LoadAll)") (ReturnType) (Snippet . "DODataViewDirect(${1:DODataSource dataSource}, ${2:string clientFilterId = null}, ${3:eInitAction initAction = LoadAll})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOManufacturer") (Description . "") (DisplayText . "DOManufacturer") (RequiredNamespaceImport) (MethodHeader . "DOManufacturer") (ReturnType) (Snippet . "DOManufacturer$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOManufacturer") (Description . "") (DisplayText . "DOManufacturer()") (RequiredNamespaceImport) (MethodHeader . "DOManufacturer()") (ReturnType) (Snippet . "DOManufacturer()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMasterDataLog") (Description . "") (DisplayText . "DOMasterDataLog") (RequiredNamespaceImport) (MethodHeader . "DOMasterDataLog") (ReturnType) (Snippet . "DOMasterDataLog$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMasterDataLog") (Description . "") (DisplayText . "DOMasterDataLog()") (RequiredNamespaceImport) (MethodHeader . "DOMasterDataLog()") (ReturnType) (Snippet . "DOMasterDataLog()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMasterRoute") (Description . "") (DisplayText . "DOMasterRoute") (RequiredNamespaceImport) (MethodHeader . "DOMasterRoute") (ReturnType) (Snippet . "DOMasterRoute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMasterRoute") (Description . "") (DisplayText . "DOMasterRoute()") (RequiredNamespaceImport) (MethodHeader . "DOMasterRoute()") (ReturnType) (Snippet . "DOMasterRoute()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMasterRoutePc") (Description . "") (DisplayText . "DOMasterRoutePc") (RequiredNamespaceImport) (MethodHeader . "DOMasterRoutePc") (ReturnType) (Snippet . "DOMasterRoutePc$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMasterRoutePc") (Description . "") (DisplayText . "DOMasterRoutePc()") (RequiredNamespaceImport) (MethodHeader . "DOMasterRoutePc()") (ReturnType) (Snippet . "DOMasterRoutePc()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterial") (Description . "") (DisplayText . "DOMaterial") (RequiredNamespaceImport) (MethodHeader . "DOMaterial") (ReturnType) (Snippet . "DOMaterial$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterial") (Description . "") (DisplayText . "DOMaterial()") (RequiredNamespaceImport) (MethodHeader . "DOMaterial()") (ReturnType) (Snippet . "DOMaterial()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialGroup") (Description . "") (DisplayText . "DOMaterialGroup") (RequiredNamespaceImport) (MethodHeader . "DOMaterialGroup") (ReturnType) (Snippet . "DOMaterialGroup$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialGroup") (Description . "") (DisplayText . "DOMaterialGroup()") (RequiredNamespaceImport) (MethodHeader . "DOMaterialGroup()") (ReturnType) (Snippet . "DOMaterialGroup()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialMaster") (Description . "") (DisplayText . "DOMaterialMaster") (RequiredNamespaceImport) (MethodHeader . "DOMaterialMaster") (ReturnType) (Snippet . "DOMaterialMaster$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialMaster") (Description . "") (DisplayText . "DOMaterialMaster()") (RequiredNamespaceImport) (MethodHeader . "DOMaterialMaster()") (ReturnType) (Snippet . "DOMaterialMaster()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialOrder") (Description . "") (DisplayText . "DOMaterialOrder") (RequiredNamespaceImport) (MethodHeader . "DOMaterialOrder") (ReturnType) (Snippet . "DOMaterialOrder$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialOrder") (Description . "") (DisplayText . "DOMaterialOrder()") (RequiredNamespaceImport) (MethodHeader . "DOMaterialOrder()") (ReturnType) (Snippet . "DOMaterialOrder()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialPosting") (Description . "") (DisplayText . "DOMaterialPosting") (RequiredNamespaceImport) (MethodHeader . "DOMaterialPosting") (ReturnType) (Snippet . "DOMaterialPosting$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialPosting") (Description . "") (DisplayText . "DOMaterialPosting()") (RequiredNamespaceImport) (MethodHeader . "DOMaterialPosting()") (ReturnType) (Snippet . "DOMaterialPosting()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialRelevance") (Description . "") (DisplayText . "DOMaterialRelevance") (RequiredNamespaceImport) (MethodHeader . "DOMaterialRelevance") (ReturnType) (Snippet . "DOMaterialRelevance$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialRelevance") (Description . "") (DisplayText . "DOMaterialRelevance()") (RequiredNamespaceImport) (MethodHeader . "DOMaterialRelevance()") (ReturnType) (Snippet . "DOMaterialRelevance()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialStock") (Description . "") (DisplayText . "DOMaterialStock") (RequiredNamespaceImport) (MethodHeader . "DOMaterialStock") (ReturnType) (Snippet . "DOMaterialStock$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialStock") (Description . "") (DisplayText . "DOMaterialStock()") (RequiredNamespaceImport) (MethodHeader . "DOMaterialStock()") (ReturnType) (Snippet . "DOMaterialStock()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialStockLocation") (Description . "") (DisplayText . "DOMaterialStockLocation") (RequiredNamespaceImport) (MethodHeader . "DOMaterialStockLocation") (ReturnType) (Snippet . "DOMaterialStockLocation$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialStockLocation") (Description . "") (DisplayText . "DOMaterialStockLocation()") (RequiredNamespaceImport) (MethodHeader . "DOMaterialStockLocation()") (ReturnType) (Snippet . "DOMaterialStockLocation()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialStockLocationMA") (Description . "") (DisplayText . "DOMaterialStockLocationMA") (RequiredNamespaceImport) (MethodHeader . "DOMaterialStockLocationMA") (ReturnType) (Snippet . "DOMaterialStockLocationMA$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialStockLocationMA") (Description . "") (DisplayText . "DOMaterialStockLocationMA()") (RequiredNamespaceImport) (MethodHeader . "DOMaterialStockLocationMA()") (ReturnType) (Snippet . "DOMaterialStockLocationMA()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMSDArticles") (Description . "") (DisplayText . "DOMSDArticles") (RequiredNamespaceImport) (MethodHeader . "DOMSDArticles") (ReturnType) (Snippet . "DOMSDArticles$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMSDArticles") (Description . "") (DisplayText . "DOMSDArticles()") (RequiredNamespaceImport) (MethodHeader . "DOMSDArticles()") (ReturnType) (Snippet . "DOMSDArticles()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOWasteType") (Description . "") (DisplayText . "DOWasteType") (RequiredNamespaceImport) (MethodHeader . "DOWasteType") (ReturnType) (Snippet . "DOWasteType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOWasteType") (Description . "") (DisplayText . "DOWasteType()") (RequiredNamespaceImport) (MethodHeader . "DOWasteType()") (ReturnType) (Snippet . "DOWasteType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DragState") (Description . "The different states with in a drag and drop. 
") (DisplayText . "DragState") (RequiredNamespaceImport) (MethodHeader . "DragState") (ReturnType) (Snippet . "DragState$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DuplicateWaitObjectException") (Description . "") (DisplayText . "DuplicateWaitObjectException") (RequiredNamespaceImport) (MethodHeader . "DuplicateWaitObjectException") (ReturnType) (Snippet . "DuplicateWaitObjectException$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DuplicateWaitObjectException") (Description . "") (DisplayText . "DuplicateWaitObjectException()") (RequiredNamespaceImport) (MethodHeader . "DuplicateWaitObjectException()") (ReturnType) (Snippet . "DuplicateWaitObjectException()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DuplicateWaitObjectException") (Description . "") (DisplayText . "DuplicateWaitObjectException(SerializationInfo info, StreamingContext context)") (RequiredNamespaceImport) (MethodHeader . "DuplicateWaitObjectException(SerializationInfo info, StreamingContext context)") (ReturnType) (Snippet . "DuplicateWaitObjectException(${1:SerializationInfo info}, ${2:StreamingContext context})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DuplicateWaitObjectException") (Description . "") (DisplayText . "DuplicateWaitObjectException(string message, Exception innerException)") (RequiredNamespaceImport) (MethodHeader . "DuplicateWaitObjectException(string message, Exception innerException)") (ReturnType) (Snippet . "DuplicateWaitObjectException(${1:string message}, ${2:Exception innerException})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DuplicateWaitObjectException") (Description . "") (DisplayText . "DuplicateWaitObjectException(string parameterName)") (RequiredNamespaceImport) (MethodHeader . "DuplicateWaitObjectException(string parameterName)") (ReturnType) (Snippet . "DuplicateWaitObjectException(${1:string parameterName})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DuplicateWaitObjectException") (Description . "") (DisplayText . "DuplicateWaitObjectException(string parameterName, string message)") (RequiredNamespaceImport) (MethodHeader . "DuplicateWaitObjectException(string parameterName, string message)") (ReturnType) (Snippet . "DuplicateWaitObjectException(${1:string parameterName}, ${2:string message})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DurationView") (Description . "") (DisplayText . "DurationView") (RequiredNamespaceImport) (MethodHeader . "DurationView") (ReturnType) (Snippet . "DurationView$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DurationView") (Description . "") (DisplayText . "DurationView(DurationViewModel viewModel)") (RequiredNamespaceImport) (MethodHeader . "DurationView(DurationViewModel viewModel)") (ReturnType) (Snippet . "DurationView(${1:DurationViewModel viewModel})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DurationViewModel") (Description . "TODO: Update summary.
") (DisplayText . "DurationViewModel") (RequiredNamespaceImport) (MethodHeader . "DurationViewModel") (ReturnType) (Snippet . "DurationViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DurationViewModel") (Description . "") (DisplayText . "DurationViewModel()") (RequiredNamespaceImport) (MethodHeader . "DurationViewModel()") (ReturnType) (Snippet . "DurationViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicDataInputViewModel") (Description . "Implements only methods to create view models form dynamic data.
") (DisplayText . "DynamicDataInputViewModel") (RequiredNamespaceImport) (MethodHeader . "DynamicDataInputViewModel") (ReturnType) (Snippet . "DynamicDataInputViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicTreeTableView") (Description . "Implements a forms user control based on a view model. This control 
") (DisplayText . "DynamicTreeTableView") (RequiredNamespaceImport) (MethodHeader . "DynamicTreeTableView") (ReturnType) (Snippet . "DynamicTreeTableView$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicTreeTableView") (Description . "Initializes a new instance of the FormatedTableView class. 
") (DisplayText . "DynamicTreeTableView()") (RequiredNamespaceImport) (MethodHeader . "DynamicTreeTableView()") (ReturnType) (Snippet . "DynamicTreeTableView()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicTreeTableView") (Description . "Initializes a new instance of the FormatedTableView class. 

viewModel: The used view model ") (DisplayText . "DynamicTreeTableView(IDataTableSourceViewModel viewModel)") (RequiredNamespaceImport) (MethodHeader . "DynamicTreeTableView(IDataTableSourceViewModel viewModel)") (ReturnType) (Snippet . "DynamicTreeTableView(${1:IDataTableSourceViewModel viewModel})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicXmlTable") (Description . "
Remarks:
") (DisplayText . "DynamicXmlTable") (RequiredNamespaceImport) (MethodHeader . "DynamicXmlTable") (ReturnType) (Snippet . "DynamicXmlTable$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DynamicXmlTable") (Description . "") (DisplayText . "DynamicXmlTable()") (RequiredNamespaceImport) (MethodHeader . "DynamicXmlTable()") (ReturnType) (Snippet . "DynamicXmlTable()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DynmicDataAttribute") (Description . "Implements an attribute for a subversion version.
") (DisplayText . "DynmicDataAttribute") (RequiredNamespaceImport) (MethodHeader . "DynmicDataAttribute") (ReturnType) (Snippet . "DynmicDataAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DynmicDataAttribute") (Description . "Initializes a new instance of the Fls.Base.SvnRevisionAttribute class.

svnRevision: The subversion version.") (DisplayText . "DynmicDataAttribute(string name)") (RequiredNamespaceImport) (MethodHeader . "DynmicDataAttribute(string name)") (ReturnType) (Snippet . "DynmicDataAttribute(${1:string name})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "EntityUpdateHandler") (Description . "") (DisplayText . "EntityUpdateHandler") (RequiredNamespaceImport) (MethodHeader . "EntityUpdateHandler") (ReturnType) (Snippet . "EntityUpdateHandler$0") (Kind . "Delegate") (IsSuggestionMode . :json-false)) ((CompletionText . "EntityUpdateHandler") (Description . "") (DisplayText . "EntityUpdateHandler(object @object, IntPtr method)") (RequiredNamespaceImport) (MethodHeader . "EntityUpdateHandler(object @object, IntPtr method)") (ReturnType) (Snippet . "EntityUpdateHandler(${1:object @object}, ${2:IntPtr method})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "EntityUpdateType") (Description . "") (DisplayText . "EntityUpdateType") (RequiredNamespaceImport) (MethodHeader . "EntityUpdateType") (ReturnType) (Snippet . "EntityUpdateType$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "FLSDateEdit") (Description . "TODO: Update summary.
") (DisplayText . "FLSDateEdit") (RequiredNamespaceImport) (MethodHeader . "FLSDateEdit") (ReturnType) (Snippet . "FLSDateEdit$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "FLSDateEdit") (Description . "") (DisplayText . "FLSDateEdit()") (RequiredNamespaceImport) (MethodHeader . "FLSDateEdit()") (ReturnType) (Snippet . "FLSDateEdit()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "IDateTimeInputViewModel") (Description . "Implements an interface for date time object which may use only date or only time or both or nothing.
") (DisplayText . "IDateTimeInputViewModel") (RequiredNamespaceImport) (MethodHeader . "IDateTimeInputViewModel") (ReturnType) (Snippet . "IDateTimeInputViewModel$0") (Kind . "Interface") (IsSuggestionMode . :json-false)) ((CompletionText . "IMaxMinDateTime") (Description . "Implements an interface for minimum and maximum date time classes.
") (DisplayText . "IMaxMinDateTime") (RequiredNamespaceImport) (MethodHeader . "IMaxMinDateTime") (ReturnType) (Snippet . "IMaxMinDateTime$0") (Kind . "Interface") (IsSuggestionMode . :json-false)) ((CompletionText . "OutputDateFrameSelectionType") (Description . "") (DisplayText . "OutputDateFrameSelectionType") (RequiredNamespaceImport) (MethodHeader . "OutputDateFrameSelectionType") (ReturnType) (Snippet . "OutputDateFrameSelectionType$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "ReConvertDateTimesEventArgs") (Description . "") (DisplayText . "ReConvertDateTimesEventArgs") (RequiredNamespaceImport) (MethodHeader . "ReConvertDateTimesEventArgs") (ReturnType) (Snippet . "ReConvertDateTimesEventArgs$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ReConvertDateTimesEventArgs") (Description . "") (DisplayText . "ReConvertDateTimesEventArgs(ITimeConverter converter, IProvideToday dateForTimeOfDayConversion)") (RequiredNamespaceImport) (MethodHeader . "ReConvertDateTimesEventArgs(ITimeConverter converter, IProvideToday dateForTimeOfDayConversion)") (ReturnType) (Snippet . "ReConvertDateTimesEventArgs(${1:ITimeConverter converter}, ${2:IProvideToday dateForTimeOfDayConversion})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "RepositoryItemDateEdit") (Description . "
A repository item storing settings specific to a DevExpress.XtraEditors.DateEdit control.") (DisplayText . "RepositoryItemDateEdit") (RequiredNamespaceImport) (MethodHeader . "RepositoryItemDateEdit") (ReturnType) (Snippet . "RepositoryItemDateEdit$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "RepositoryItemDateEdit") (Description . "
Initializes a new DevExpress.XtraEditors.Repository.RepositoryItemDateEdit class instance with default settings. ") (DisplayText . "RepositoryItemDateEdit()") (RequiredNamespaceImport) (MethodHeader . "RepositoryItemDateEdit()") (ReturnType) (Snippet . "RepositoryItemDateEdit()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "RepositoryItemFLSDateEdit") (Description . "TODO: Update summary.
") (DisplayText . "RepositoryItemFLSDateEdit") (RequiredNamespaceImport) (MethodHeader . "RepositoryItemFLSDateEdit") (ReturnType) (Snippet . "RepositoryItemFLSDateEdit$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "RepositoryItemFLSDateEdit") (Description . "") (DisplayText . "RepositoryItemFLSDateEdit()") (RequiredNamespaceImport) (MethodHeader . "RepositoryItemFLSDateEdit()") (ReturnType) (Snippet . "RepositoryItemFLSDateEdit()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ResourceSchedulerDateComparer") (Description . "Implements a model for 
") (DisplayText . "ResourceSchedulerDateComparer") (RequiredNamespaceImport) (MethodHeader . "ResourceSchedulerDateComparer") (ReturnType) (Snippet . "ResourceSchedulerDateComparer$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ResourceSchedulerDateComparer") (Description . "Initializes a new instance of the Fls.VisiTourClient.ViewModel.Scheduler.ResourceSchedulerDateComparer class. 
") (DisplayText . "ResourceSchedulerDateComparer()") (RequiredNamespaceImport) (MethodHeader . "ResourceSchedulerDateComparer()") (ReturnType) (Snippet . "ResourceSchedulerDateComparer()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "SchedulerViewDateTimeSlotModel") (Description . "Implements a model for scheduler view scheduleTable column header.
") (DisplayText . "SchedulerViewDateTimeSlotModel") (RequiredNamespaceImport) (MethodHeader . "SchedulerViewDateTimeSlotModel") (ReturnType) (Snippet . "SchedulerViewDateTimeSlotModel$0") (Kind . "Struct") (IsSuggestionMode . :json-false)) ((CompletionText . "SchedulerViewDateTimeSlotModel") (Description . "") (DisplayText . "SchedulerViewDateTimeSlotModel()") (RequiredNamespaceImport) (MethodHeader . "SchedulerViewDateTimeSlotModel()") (ReturnType) (Snippet . "SchedulerViewDateTimeSlotModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "SchedulerViewDateTimeSlotModel") (Description . "Initializes a new instance of the Fls.VisiTourClient.ViewModel.Scheduler.SchedulerViewDateTimeSlotModel struct.

slot: The date time slot.
isZombieTime: Indicates that slot is a zombie.
width: The slots width.") (DisplayText . "SchedulerViewDateTimeSlotModel(DateTimeSlot slot, bool isZombieTime, double width)") (RequiredNamespaceImport) (MethodHeader . "SchedulerViewDateTimeSlotModel(DateTimeSlot slot, bool isZombieTime, double width)") (ReturnType) (Snippet . "SchedulerViewDateTimeSlotModel(${1:DateTimeSlot slot}, ${2:bool isZombieTime}, ${3:double width})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateLists") (Description . "Implements a model for 
") (DisplayText . "UpdateLists<TKey, TData>") (RequiredNamespaceImport) (MethodHeader . "UpdateLists<TKey, TData>") (ReturnType) (Snippet . "UpdateLists<${1:TKey}, ${2:TData}>$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateLists") (Description . "Initializes a new instance of the UpdateLists class.
") (DisplayText . "UpdateLists<TKey, TData>(string primaryKeyPropertyName, string modificationDatePropertyName)") (RequiredNamespaceImport) (MethodHeader . "UpdateLists<TKey, TData>(string primaryKeyPropertyName, string modificationDatePropertyName)") (ReturnType) (Snippet . "UpdateLists<${1:TKey}, ${2:TData}>(${3:string primaryKeyPropertyName}, ${4:string modificationDatePropertyName})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateVersion") (Description . "") (DisplayText . "UpdateVersion") (RequiredNamespaceImport) (MethodHeader . "UpdateVersion") (ReturnType) (Snippet . "UpdateVersion$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateVersion") (Description . "") (DisplayText . "UpdateVersion()") (RequiredNamespaceImport) (MethodHeader . "UpdateVersion()") (ReturnType) (Snippet . "UpdateVersion()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateVersion") (Description . "") (DisplayText . "UpdateVersion(FileVersionInfo fv)") (RequiredNamespaceImport) (MethodHeader . "UpdateVersion(FileVersionInfo fv)") (ReturnType) (Snippet . "UpdateVersion(${1:FileVersionInfo fv})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateVersion") (Description . "") (DisplayText . "UpdateVersion(string version)") (RequiredNamespaceImport) (MethodHeader . "UpdateVersion(string version)") (ReturnType) (Snippet . "UpdateVersion(${1:string version})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateWorkflowRequest") (Description . "") (DisplayText . "UpdateWorkflowRequest") (RequiredNamespaceImport) (MethodHeader . "UpdateWorkflowRequest") (ReturnType) (Snippet . "UpdateWorkflowRequest$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateWorkflowRequest") (Description . "") (DisplayText . "UpdateWorkflowRequest()") (RequiredNamespaceImport) (MethodHeader . "UpdateWorkflowRequest()") (ReturnType) (Snippet . "UpdateWorkflowRequest()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateWorkflowResponse") (Description . "") (DisplayText . "UpdateWorkflowResponse") (RequiredNamespaceImport) (MethodHeader . "UpdateWorkflowResponse") (ReturnType) (Snippet . "UpdateWorkflowResponse$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "UpdateWorkflowResponse") (Description . "") (DisplayText . "UpdateWorkflowResponse()") (RequiredNamespaceImport) (MethodHeader . "UpdateWorkflowResponse()") (ReturnType) (Snippet . "UpdateWorkflowResponse()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ValidateableObject") (Description . "Implements a model for validate objects. The validation methods have to be names like 
\"ValidatableObject.ValidationMethodNamePrefix\"\"PropertyName\" or \"ValidateDisplayName\".
The full declaration has to be: protected string ValidateDisplayName(). 
The validate methods are found automatically.
") (DisplayText . "ValidateableObject") (RequiredNamespaceImport) (MethodHeader . "ValidateableObject") (ReturnType) (Snippet . "ValidateableObject$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ValidateableObject") (Description . "Initializes a new instance of the Fls.Base.ValidateableObject class.
") (DisplayText . "ValidateableObject()") (RequiredNamespaceImport) (MethodHeader . "ValidateableObject()") (ReturnType) (Snippet . "ValidateableObject()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ValidateEventArgs") (Description . "") (DisplayText . "ValidateEventArgs") (RequiredNamespaceImport) (MethodHeader . "ValidateEventArgs") (ReturnType) (Snippet . "ValidateEventArgs$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ValidateEventArgs") (Description . "") (DisplayText . "ValidateEventArgs(DOBase data, string field)") (RequiredNamespaceImport) (MethodHeader . "ValidateEventArgs(DOBase data, string field)") (ReturnType) (Snippet . "ValidateEventArgs(${1:DOBase data}, ${2:string field})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "XmlDateTimeSerializationMode") (Description . "") (DisplayText . "XmlDateTimeSerializationMode") (RequiredNamespaceImport) (MethodHeader . "XmlDateTimeSerializationMode") (ReturnType) (Snippet . "XmlDateTimeSerializationMode$0") (Kind . "Enum") (IsSuggestionMode . :json-false))]
[10:17:46] <-- 46 /autocomplete: [((CompletionText . "DataBaseRequiredPropertiesType") (Description . "") (DisplayText . "DataBaseRequiredPropertiesType") (RequiredNamespaceImport) (MethodHeader . "DataBaseRequiredPropertiesType") (ReturnType) (Snippet . "DataBaseRequiredPropertiesType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataBaseRequiredPropertiesType") (Description . "DataBaseRequiredPropertiesType class constructor
") (DisplayText . "DataBaseRequiredPropertiesType()") (RequiredNamespaceImport) (MethodHeader . "DataBaseRequiredPropertiesType()") (ReturnType) (Snippet . "DataBaseRequiredPropertiesType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataConnection") (Description . "TODO: Update summary.
") (DisplayText . "DataConnection") (RequiredNamespaceImport) (MethodHeader . "DataConnection") (ReturnType) (Snippet . "DataConnection$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataConnection") (Description . "") (DisplayText . "DataConnection()") (RequiredNamespaceImport) (MethodHeader . "DataConnection()") (ReturnType) (Snippet . "DataConnection()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataConnection") (Description . "") (DisplayText . "DataConnection(DOBindingSource lookupBindingSource, DProperty propertyName, string summary, DProperty lookedUpProperty)") (RequiredNamespaceImport) (MethodHeader . "DataConnection(DOBindingSource lookupBindingSource, DProperty propertyName, string summary, DProperty lookedUpProperty)") (ReturnType) (Snippet . "DataConnection(${1:DOBindingSource lookupBindingSource}, ${2:DProperty propertyName}, ${3:string summary}, ${4:DProperty lookedUpProperty})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataConnection") (Description . "") (DisplayText . "DataConnection(DODataView lookupBindingSource, DProperty propertyName, string summary, DProperty lookedUpProperty)") (RequiredNamespaceImport) (MethodHeader . "DataConnection(DODataView lookupBindingSource, DProperty propertyName, string summary, DProperty lookedUpProperty)") (ReturnType) (Snippet . "DataConnection(${1:DODataView lookupBindingSource}, ${2:DProperty propertyName}, ${3:string summary}, ${4:DProperty lookedUpProperty})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataDependencyViewModel") (Description . "") (DisplayText . "DataDependencyViewModel") (RequiredNamespaceImport) (MethodHeader . "DataDependencyViewModel") (ReturnType) (Snippet . "DataDependencyViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataDependencyViewModel") (Description . "") (DisplayText . "DataDependencyViewModel(DOBindingSource source, IEnumerable<string> ignoreEntitiesList)") (RequiredNamespaceImport) (MethodHeader . "DataDependencyViewModel(DOBindingSource source, IEnumerable<string> ignoreEntitiesList)") (ReturnType) (Snippet . "DataDependencyViewModel(${1:DOBindingSource source}, ${2:IEnumerable<string> ignoreEntitiesList})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectAttribute") (Description . "") (DisplayText . "DataObjectAttribute") (RequiredNamespaceImport) (MethodHeader . "DataObjectAttribute") (ReturnType) (Snippet . "DataObjectAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectAttribute") (Description . "") (DisplayText . "DataObjectAttribute()") (RequiredNamespaceImport) (MethodHeader . "DataObjectAttribute()") (ReturnType) (Snippet . "DataObjectAttribute()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectAttribute") (Description . "") (DisplayText . "DataObjectAttribute(bool isDataObject)") (RequiredNamespaceImport) (MethodHeader . "DataObjectAttribute(bool isDataObject)") (ReturnType) (Snippet . "DataObjectAttribute(${1:bool isDataObject})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectFieldAttribute") (Description . "") (DisplayText . "DataObjectFieldAttribute") (RequiredNamespaceImport) (MethodHeader . "DataObjectFieldAttribute") (ReturnType) (Snippet . "DataObjectFieldAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectFieldAttribute") (Description . "") (DisplayText . "DataObjectFieldAttribute(bool primaryKey)") (RequiredNamespaceImport) (MethodHeader . "DataObjectFieldAttribute(bool primaryKey)") (ReturnType) (Snippet . "DataObjectFieldAttribute(${1:bool primaryKey})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectFieldAttribute") (Description . "") (DisplayText . "DataObjectFieldAttribute(bool primaryKey, bool isIdentity)") (RequiredNamespaceImport) (MethodHeader . "DataObjectFieldAttribute(bool primaryKey, bool isIdentity)") (ReturnType) (Snippet . "DataObjectFieldAttribute(${1:bool primaryKey}, ${2:bool isIdentity})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectFieldAttribute") (Description . "") (DisplayText . "DataObjectFieldAttribute(bool primaryKey, bool isIdentity, bool isNullable)") (RequiredNamespaceImport) (MethodHeader . "DataObjectFieldAttribute(bool primaryKey, bool isIdentity, bool isNullable)") (ReturnType) (Snippet . "DataObjectFieldAttribute(${1:bool primaryKey}, ${2:bool isIdentity}, ${3:bool isNullable})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectFieldAttribute") (Description . "") (DisplayText . "DataObjectFieldAttribute(bool primaryKey, bool isIdentity, bool isNullable, int length)") (RequiredNamespaceImport) (MethodHeader . "DataObjectFieldAttribute(bool primaryKey, bool isIdentity, bool isNullable, int length)") (ReturnType) (Snippet . "DataObjectFieldAttribute(${1:bool primaryKey}, ${2:bool isIdentity}, ${3:bool isNullable}, ${4:int length})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectMethodAttribute") (Description . "") (DisplayText . "DataObjectMethodAttribute") (RequiredNamespaceImport) (MethodHeader . "DataObjectMethodAttribute") (ReturnType) (Snippet . "DataObjectMethodAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectMethodAttribute") (Description . "") (DisplayText . "DataObjectMethodAttribute(DataObjectMethodType methodType)") (RequiredNamespaceImport) (MethodHeader . "DataObjectMethodAttribute(DataObjectMethodType methodType)") (ReturnType) (Snippet . "DataObjectMethodAttribute(${1:DataObjectMethodType methodType})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectMethodAttribute") (Description . "") (DisplayText . "DataObjectMethodAttribute(DataObjectMethodType methodType, bool isDefault)") (RequiredNamespaceImport) (MethodHeader . "DataObjectMethodAttribute(DataObjectMethodType methodType, bool isDefault)") (ReturnType) (Snippet . "DataObjectMethodAttribute(${1:DataObjectMethodType methodType}, ${2:bool isDefault})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectTimeInformation") (Description . "") (DisplayText . "DataObjectTimeInformation") (RequiredNamespaceImport) (MethodHeader . "DataObjectTimeInformation") (ReturnType) (Snippet . "DataObjectTimeInformation$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectTimeInformation") (Description . "") (DisplayText . "DataObjectTimeInformation(TimeZoneInfo timeZone, IProvideToday dateForTimeOfDayConversion, TimeZoneAlias alias)") (RequiredNamespaceImport) (MethodHeader . "DataObjectTimeInformation(TimeZoneInfo timeZone, IProvideToday dateForTimeOfDayConversion, TimeZoneAlias alias)") (ReturnType) (Snippet . "DataObjectTimeInformation(${1:TimeZoneInfo timeZone}, ${2:IProvideToday dateForTimeOfDayConversion}, ${3:TimeZoneAlias alias})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectTimeInformationExtractor") (Description . "") (DisplayText . "DataObjectTimeInformationExtractor") (RequiredNamespaceImport) (MethodHeader . "DataObjectTimeInformationExtractor") (ReturnType) (Snippet . "DataObjectTimeInformationExtractor$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataObjectTimeInformationExtractor") (Description . "") (DisplayText . "DataObjectTimeInformationExtractor(TimeZoneInfo fallBackTimeZone, IProvideToday fallBackDateForTimeOfDayConversion)") (RequiredNamespaceImport) (MethodHeader . "DataObjectTimeInformationExtractor(TimeZoneInfo fallBackTimeZone, IProvideToday fallBackDateForTimeOfDayConversion)") (ReturnType) (Snippet . "DataObjectTimeInformationExtractor(${1:TimeZoneInfo fallBackTimeZone}, ${2:IProvideToday fallBackDateForTimeOfDayConversion})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataSourceActionType") (Description . "") (DisplayText . "DataSourceActionType") (RequiredNamespaceImport) (MethodHeader . "DataSourceActionType") (ReturnType) (Snippet . "DataSourceActionType$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataSourceActionType") (Description . "") (DisplayText . "DataSourceActionType()") (RequiredNamespaceImport) (MethodHeader . "DataSourceActionType()") (ReturnType) (Snippet . "DataSourceActionType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataSourceActionTypeType") (Description . "") (DisplayText . "DataSourceActionTypeType") (RequiredNamespaceImport) (MethodHeader . "DataSourceActionTypeType") (ReturnType) (Snippet . "DataSourceActionTypeType$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DataSourceNameAttribute") (Description . "Implements an attribute for a subversion version.
") (DisplayText . "DataSourceNameAttribute") (RequiredNamespaceImport) (MethodHeader . "DataSourceNameAttribute") (ReturnType) (Snippet . "DataSourceNameAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataSourceNameAttribute") (Description . "Initializes a new instance of the Fls.VisiTourClient.ViewModel.DataSourceNameAttribute class.

svnRevision: The subversion version.") (DisplayText . "DataSourceNameAttribute(string name)") (RequiredNamespaceImport) (MethodHeader . "DataSourceNameAttribute(string name)") (ReturnType) (Snippet . "DataSourceNameAttribute(${1:string name})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataTableSourceViewModel") (Description . "") (DisplayText . "DataTableSourceViewModel") (RequiredNamespaceImport) (MethodHeader . "DataTableSourceViewModel") (ReturnType) (Snippet . "DataTableSourceViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataTableSourceViewModel") (Description . "") (DisplayText . "DataTableSourceViewModel()") (RequiredNamespaceImport) (MethodHeader . "DataTableSourceViewModel()") (ReturnType) (Snippet . "DataTableSourceViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataTableViewModel") (Description . "Implements a model for data table.
") (DisplayText . "DataTableViewModel") (RequiredNamespaceImport) (MethodHeader . "DataTableViewModel") (ReturnType) (Snippet . "DataTableViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataTableViewModel") (Description . "Initializes a new instance of the Fls.UI.Base.DataTableViewModel class.
") (DisplayText . "DataTableViewModel()") (RequiredNamespaceImport) (MethodHeader . "DataTableViewModel()") (ReturnType) (Snippet . "DataTableViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DataTableWithColoringViewModel") (Description . "TODO: Update summary.
") (DisplayText . "DataTableWithColoringViewModel") (RequiredNamespaceImport) (MethodHeader . "DataTableWithColoringViewModel") (ReturnType) (Snippet . "DataTableWithColoringViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DataTableWithColoringViewModel") (Description . "Initializes a new instance of the Fls.UI.Base.DataTableWithColoringViewModel class.
") (DisplayText . "DataTableWithColoringViewModel()") (RequiredNamespaceImport) (MethodHeader . "DataTableWithColoringViewModel()") (ReturnType) (Snippet . "DataTableWithColoringViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateEditExtensionPainter") (Description . "Implements a model for 
") (DisplayText . "DateEditExtensionPainter") (RequiredNamespaceImport) (MethodHeader . "DateEditExtensionPainter") (ReturnType) (Snippet . "DateEditExtensionPainter$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DateEditExtensionPainter") (Description . "") (DisplayText . "DateEditExtensionPainter()") (RequiredNamespaceImport) (MethodHeader . "DateEditExtensionPainter()") (ReturnType) (Snippet . "DateEditExtensionPainter()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateEditExtensionViewInfo") (Description . "") (DisplayText . "DateEditExtensionViewInfo") (RequiredNamespaceImport) (MethodHeader . "DateEditExtensionViewInfo") (ReturnType) (Snippet . "DateEditExtensionViewInfo$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DateEditExtensionViewInfo") (Description . "") (DisplayText . "DateEditExtensionViewInfo(RepositoryItem item)") (RequiredNamespaceImport) (MethodHeader . "DateEditExtensionViewInfo(RepositoryItem item)") (ReturnType) (Snippet . "DateEditExtensionViewInfo(${1:RepositoryItem item})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateSelectorViewModel") (Description . "Implements a model for a date selector.
") (DisplayText . "DateSelectorViewModel") (RequiredNamespaceImport) (MethodHeader . "DateSelectorViewModel") (ReturnType) (Snippet . "DateSelectorViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DateSelectorViewModel") (Description . "Initializes a new instance of the Fls.VisiTourClient.ViewModel.DateSelectorViewModel class.
") (DisplayText . "DateSelectorViewModel()") (RequiredNamespaceImport) (MethodHeader . "DateSelectorViewModel()") (ReturnType) (Snippet . "DateSelectorViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateSelectorViewModel") (Description . "Initializes a new instance of the Fls.VisiTourClient.ViewModel.DateSelectorViewModel class.

startDate: The selected start date.
endDate: The selected end date.") (DisplayText . "DateSelectorViewModel(DateTimeInputViewModel startDate, DateTimeInputViewModel endDate)") (RequiredNamespaceImport) (MethodHeader . "DateSelectorViewModel(DateTimeInputViewModel startDate, DateTimeInputViewModel endDate)") (ReturnType) (Snippet . "DateSelectorViewModel(${1:DateTimeInputViewModel startDate}, ${2:DateTimeInputViewModel endDate})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateSelectorViewModel") (Description . "Initializes a new instance of the Fls.VisiTourClient.ViewModel.DateSelectorViewModel class.

elementId: The elements id.
startDate: The selected start date.
endDate: The selected end date.") (DisplayText . "DateSelectorViewModel(UIItemId elementId, DateTimeInputViewModel startDate, DateTimeInputViewModel endDate)") (RequiredNamespaceImport) (MethodHeader . "DateSelectorViewModel(UIItemId elementId, DateTimeInputViewModel startDate, DateTimeInputViewModel endDate)") (ReturnType) (Snippet . "DateSelectorViewModel(${1:UIItemId elementId}, ${2:DateTimeInputViewModel startDate}, ${3:DateTimeInputViewModel endDate})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime") (RequiredNamespaceImport) (MethodHeader . "DateTime") (ReturnType) (Snippet . "DateTime$0") (Kind . "Struct") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime()") (RequiredNamespaceImport) (MethodHeader . "DateTime()") (ReturnType) (Snippet . "DateTime()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, Calendar calendar)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, Calendar calendar)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:Calendar calendar})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, int hour, int minute, int second)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, int hour, int minute, int second)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, int hour, int minute, int second, Calendar calendar)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, int hour, int minute, int second, Calendar calendar)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:Calendar calendar})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, int hour, int minute, int second, DateTimeKind kind)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, int hour, int minute, int second, DateTimeKind kind)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:DateTimeKind kind})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:int millisecond})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, Calendar calendar)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, Calendar calendar)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:int millisecond}, ${8:Calendar calendar})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, Calendar calendar, DateTimeKind kind)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, Calendar calendar, DateTimeKind kind)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:int millisecond}, ${8:Calendar calendar}, ${9:DateTimeKind kind})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, DateTimeKind kind)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, DateTimeKind kind)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:int millisecond}, ${8:DateTimeKind kind})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(long ticks)") (RequiredNamespaceImport) (MethodHeader . "DateTime(long ticks)") (ReturnType) (Snippet . "DateTime(${1:long ticks})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(long ticks, DateTimeKind kind)") (RequiredNamespaceImport) (MethodHeader . "DateTime(long ticks, DateTimeKind kind)") (ReturnType) (Snippet . "DateTime(${1:long ticks}, ${2:DateTimeKind kind})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeConverter") (Description . "") (DisplayText . "DateTimeConverter") (RequiredNamespaceImport) (MethodHeader . "DateTimeConverter") (ReturnType) (Snippet . "DateTimeConverter$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeConverter") (Description . "") (DisplayText . "DateTimeConverter()") (RequiredNamespaceImport) (MethodHeader . "DateTimeConverter()") (ReturnType) (Snippet . "DateTimeConverter()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeEditView") (Description . "Implements a forms user control based on a view model.
This control 
") (DisplayText . "DateTimeEditView") (RequiredNamespaceImport) (MethodHeader . "DateTimeEditView") (ReturnType) (Snippet . "DateTimeEditView$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeEditView") (Description . "Initializes a new instance of the Fls.Controls.Forms.DevExpressBase.DateTimeEditView class.
") (DisplayText . "DateTimeEditView()") (RequiredNamespaceImport) (MethodHeader . "DateTimeEditView()") (ReturnType) (Snippet . "DateTimeEditView()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeEditView") (Description . "Initializes a new instance of the Fls.Controls.Forms.DevExpressBase.DateTimeEditView class.

viewModel: The used view model ") (DisplayText . "DateTimeEditView(DateTimeInputViewModel viewModel)") (RequiredNamespaceImport) (MethodHeader . "DateTimeEditView(DateTimeInputViewModel viewModel)") (ReturnType) (Snippet . "DateTimeEditView(${1:DateTimeInputViewModel viewModel})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeHelper") (Description . "") (DisplayText . "DateTimeHelper") (RequiredNamespaceImport) (MethodHeader . "DateTimeHelper") (ReturnType) (Snippet . "DateTimeHelper$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeInputViewModel") (Description . "Implements a model for date time input.
") (DisplayText . "DateTimeInputViewModel") (RequiredNamespaceImport) (MethodHeader . "DateTimeInputViewModel") (ReturnType) (Snippet . "DateTimeInputViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeInputViewModel") (Description . "Initializes a new instance of the Fls.UI.Base.DateTimeInputViewModel class.
") (DisplayText . "DateTimeInputViewModel()") (RequiredNamespaceImport) (MethodHeader . "DateTimeInputViewModel()") (ReturnType) (Snippet . "DateTimeInputViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeInputViewModel") (Description . "Initializes a new instance of the Fls.UI.Base.DateTimeInputViewModel class.

elementId: The elements id.") (DisplayText . "DateTimeInputViewModel(UIItemId elementId)") (RequiredNamespaceImport) (MethodHeader . "DateTimeInputViewModel(UIItemId elementId)") (ReturnType) (Snippet . "DateTimeInputViewModel(${1:UIItemId elementId})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeInputViewModel") (Description . "Initializes a new instance of the Fls.UI.Base.DateTimeInputViewModel class.

elementId: The elements id.
minDate: The minimum selectable date.
maxDate: The maximum selectable date.
selectedDate: The selected date.") (DisplayText . "DateTimeInputViewModel(UIItemId elementId, DateTime minDate, DateTime maxDate, DateTime selectedDate)") (RequiredNamespaceImport) (MethodHeader . "DateTimeInputViewModel(UIItemId elementId, DateTime minDate, DateTime maxDate, DateTime selectedDate)") (ReturnType) (Snippet . "DateTimeInputViewModel(${1:UIItemId elementId}, ${2:DateTime minDate}, ${3:DateTime maxDate}, ${4:DateTime selectedDate})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeInputViewModel") (Description . "Initializes a new instance of the Fls.UI.Base.DateTimeInputViewModel class.

elementId: The elements id.
selectedDate: The selected date.") (DisplayText . "DateTimeInputViewModel(UIItemId elementId, DateTime selectedDate)") (RequiredNamespaceImport) (MethodHeader . "DateTimeInputViewModel(UIItemId elementId, DateTime selectedDate)") (ReturnType) (Snippet . "DateTimeInputViewModel(${1:UIItemId elementId}, ${2:DateTime selectedDate})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeKind") (Description . "") (DisplayText . "DateTimeKind") (RequiredNamespaceImport) (MethodHeader . "DateTimeKind") (ReturnType) (Snippet . "DateTimeKind$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset") (ReturnType) (Snippet . "DateTimeOffset$0") (Kind . "Struct") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset()") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset()") (ReturnType) (Snippet . "DateTimeOffset()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset(DateTime dateTime)") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset(DateTime dateTime)") (ReturnType) (Snippet . "DateTimeOffset(${1:DateTime dateTime})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset(DateTime dateTime, TimeSpan offset)") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset(DateTime dateTime, TimeSpan offset)") (ReturnType) (Snippet . "DateTimeOffset(${1:DateTime dateTime}, ${2:TimeSpan offset})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset(int year, int month, int day, int hour, int minute, int second, int millisecond, Calendar calendar, TimeSpan offset)") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset(int year, int month, int day, int hour, int minute, int second, int millisecond, Calendar calendar, TimeSpan offset)") (ReturnType) (Snippet . "DateTimeOffset(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:int millisecond}, ${8:Calendar calendar}, ${9:TimeSpan offset})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset(int year, int month, int day, int hour, int minute, int second, int millisecond, TimeSpan offset)") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset(int year, int month, int day, int hour, int minute, int second, int millisecond, TimeSpan offset)") (ReturnType) (Snippet . "DateTimeOffset(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:int millisecond}, ${8:TimeSpan offset})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset(int year, int month, int day, int hour, int minute, int second, TimeSpan offset)") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset(int year, int month, int day, int hour, int minute, int second, TimeSpan offset)") (ReturnType) (Snippet . "DateTimeOffset(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:TimeSpan offset})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset(long ticks, TimeSpan offset)") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset(long ticks, TimeSpan offset)") (ReturnType) (Snippet . "DateTimeOffset(${1:long ticks}, ${2:TimeSpan offset})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffsetConverter") (Description . "") (DisplayText . "DateTimeOffsetConverter") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffsetConverter") (ReturnType) (Snippet . "DateTimeOffsetConverter$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffsetConverter") (Description . "") (DisplayText . "DateTimeOffsetConverter()") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffsetConverter()") (ReturnType) (Snippet . "DateTimeOffsetConverter()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeSlot") (Description . "Implements a model for time intervals. 
") (DisplayText . "DateTimeSlot") (RequiredNamespaceImport) (MethodHeader . "DateTimeSlot") (ReturnType) (Snippet . "DateTimeSlot$0") (Kind . "Struct") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeSlot") (Description . "") (DisplayText . "DateTimeSlot()") (RequiredNamespaceImport) (MethodHeader . "DateTimeSlot()") (ReturnType) (Snippet . "DateTimeSlot()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeSlot") (Description . "Initializes a new instance of the Fls.Base.DateTimeSlot structure. 

start: The start time. 
duration: The duration. ") (DisplayText . "DateTimeSlot(DateTime start, DateTime end)") (RequiredNamespaceImport) (MethodHeader . "DateTimeSlot(DateTime start, DateTime end)") (ReturnType) (Snippet . "DateTimeSlot(${1:DateTime start}, ${2:DateTime end})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeSlot") (Description . "Initializes a new instance of the Fls.Base.DateTimeSlot structure. 

start: The start time. 
duration: The duration. ") (DisplayText . "DateTimeSlot(DateTime start, TimeSpan duration)") (RequiredNamespaceImport) (MethodHeader . "DateTimeSlot(DateTime start, TimeSpan duration)") (ReturnType) (Snippet . "DateTimeSlot(${1:DateTime start}, ${2:TimeSpan duration})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOAttachmentFilter") (Description . "") (DisplayText . "DOAttachmentFilter") (RequiredNamespaceImport) (MethodHeader . "DOAttachmentFilter") (ReturnType) (Snippet . "DOAttachmentFilter$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOAttachmentFilter") (Description . "") (DisplayText . "DOAttachmentFilter()") (RequiredNamespaceImport) (MethodHeader . "DOAttachmentFilter()") (ReturnType) (Snippet . "DOAttachmentFilter()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterial") (Description . "") (DisplayText . "DOMaterial") (RequiredNamespaceImport) (MethodHeader . "DOMaterial") (ReturnType) (Snippet . "DOMaterial$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterial") (Description . "") (DisplayText . "DOMaterial()") (RequiredNamespaceImport) (MethodHeader . "DOMaterial()") (ReturnType) (Snippet . "DOMaterial()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialGroup") (Description . "") (DisplayText . "DOMaterialGroup") (RequiredNamespaceImport) (MethodHeader . "DOMaterialGroup") (ReturnType) (Snippet . "DOMaterialGroup$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialGroup") (Description . "") (DisplayText . "DOMaterialGroup()") (RequiredNamespaceImport) (MethodHeader . "DOMaterialGroup()") (ReturnType) (Snippet . "DOMaterialGroup()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialMaster") (Description . "") (DisplayText . "DOMaterialMaster") (RequiredNamespaceImport) (MethodHeader . "DOMaterialMaster") (ReturnType) (Snippet . "DOMaterialMaster$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialMaster") (Description . "") (DisplayText . "DOMaterialMaster()") (RequiredNamespaceImport) (MethodHeader . "DOMaterialMaster()") (ReturnType) (Snippet . "DOMaterialMaster()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialOrder") (Description . "") (DisplayText . "DOMaterialOrder") (RequiredNamespaceImport) (MethodHeader . "DOMaterialOrder") (ReturnType) (Snippet . "DOMaterialOrder$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialOrder") (Description . "") (DisplayText . "DOMaterialOrder()") (RequiredNamespaceImport) (MethodHeader . "DOMaterialOrder()") (ReturnType) (Snippet . "DOMaterialOrder()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialPosting") (Description . "") (DisplayText . "DOMaterialPosting") (RequiredNamespaceImport) (MethodHeader . "DOMaterialPosting") (ReturnType) (Snippet . "DOMaterialPosting$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialPosting") (Description . "") (DisplayText . "DOMaterialPosting()") (RequiredNamespaceImport) (MethodHeader . "DOMaterialPosting()") (ReturnType) (Snippet . "DOMaterialPosting()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialRelevance") (Description . "") (DisplayText . "DOMaterialRelevance") (RequiredNamespaceImport) (MethodHeader . "DOMaterialRelevance") (ReturnType) (Snippet . "DOMaterialRelevance$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialRelevance") (Description . "") (DisplayText . "DOMaterialRelevance()") (RequiredNamespaceImport) (MethodHeader . "DOMaterialRelevance()") (ReturnType) (Snippet . "DOMaterialRelevance()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialStock") (Description . "") (DisplayText . "DOMaterialStock") (RequiredNamespaceImport) (MethodHeader . "DOMaterialStock") (ReturnType) (Snippet . "DOMaterialStock$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialStock") (Description . "") (DisplayText . "DOMaterialStock()") (RequiredNamespaceImport) (MethodHeader . "DOMaterialStock()") (ReturnType) (Snippet . "DOMaterialStock()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialStockLocation") (Description . "") (DisplayText . "DOMaterialStockLocation") (RequiredNamespaceImport) (MethodHeader . "DOMaterialStockLocation") (ReturnType) (Snippet . "DOMaterialStockLocation$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialStockLocation") (Description . "") (DisplayText . "DOMaterialStockLocation()") (RequiredNamespaceImport) (MethodHeader . "DOMaterialStockLocation()") (ReturnType) (Snippet . "DOMaterialStockLocation()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialStockLocationMA") (Description . "") (DisplayText . "DOMaterialStockLocationMA") (RequiredNamespaceImport) (MethodHeader . "DOMaterialStockLocationMA") (ReturnType) (Snippet . "DOMaterialStockLocationMA$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DOMaterialStockLocationMA") (Description . "") (DisplayText . "DOMaterialStockLocationMA()") (RequiredNamespaceImport) (MethodHeader . "DOMaterialStockLocationMA()") (ReturnType) (Snippet . "DOMaterialStockLocationMA()$0") (Kind . "Method") (IsSuggestionMode . :json-false))]
[10:17:46] <-- 47 /typelookup: ((Type) (Documentation))
[10:17:51] <-- 48 /autocomplete: [((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime") (RequiredNamespaceImport) (MethodHeader . "DateTime") (ReturnType) (Snippet . "DateTime$0") (Kind . "Struct") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime()") (RequiredNamespaceImport) (MethodHeader . "DateTime()") (ReturnType) (Snippet . "DateTime()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, Calendar calendar)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, Calendar calendar)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:Calendar calendar})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, int hour, int minute, int second)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, int hour, int minute, int second)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, int hour, int minute, int second, Calendar calendar)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, int hour, int minute, int second, Calendar calendar)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:Calendar calendar})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, int hour, int minute, int second, DateTimeKind kind)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, int hour, int minute, int second, DateTimeKind kind)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:DateTimeKind kind})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:int millisecond})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, Calendar calendar)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, Calendar calendar)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:int millisecond}, ${8:Calendar calendar})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, Calendar calendar, DateTimeKind kind)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, Calendar calendar, DateTimeKind kind)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:int millisecond}, ${8:Calendar calendar}, ${9:DateTimeKind kind})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, DateTimeKind kind)") (RequiredNamespaceImport) (MethodHeader . "DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, DateTimeKind kind)") (ReturnType) (Snippet . "DateTime(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:int millisecond}, ${8:DateTimeKind kind})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(long ticks)") (RequiredNamespaceImport) (MethodHeader . "DateTime(long ticks)") (ReturnType) (Snippet . "DateTime(${1:long ticks})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTime") (Description . "") (DisplayText . "DateTime(long ticks, DateTimeKind kind)") (RequiredNamespaceImport) (MethodHeader . "DateTime(long ticks, DateTimeKind kind)") (ReturnType) (Snippet . "DateTime(${1:long ticks}, ${2:DateTimeKind kind})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeConverter") (Description . "") (DisplayText . "DateTimeConverter") (RequiredNamespaceImport) (MethodHeader . "DateTimeConverter") (ReturnType) (Snippet . "DateTimeConverter$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeConverter") (Description . "") (DisplayText . "DateTimeConverter()") (RequiredNamespaceImport) (MethodHeader . "DateTimeConverter()") (ReturnType) (Snippet . "DateTimeConverter()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeEditView") (Description . "Implements a forms user control based on a view model.
This control 
") (DisplayText . "DateTimeEditView") (RequiredNamespaceImport) (MethodHeader . "DateTimeEditView") (ReturnType) (Snippet . "DateTimeEditView$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeEditView") (Description . "Initializes a new instance of the Fls.Controls.Forms.DevExpressBase.DateTimeEditView class.
") (DisplayText . "DateTimeEditView()") (RequiredNamespaceImport) (MethodHeader . "DateTimeEditView()") (ReturnType) (Snippet . "DateTimeEditView()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeEditView") (Description . "Initializes a new instance of the Fls.Controls.Forms.DevExpressBase.DateTimeEditView class.

viewModel: The used view model ") (DisplayText . "DateTimeEditView(DateTimeInputViewModel viewModel)") (RequiredNamespaceImport) (MethodHeader . "DateTimeEditView(DateTimeInputViewModel viewModel)") (ReturnType) (Snippet . "DateTimeEditView(${1:DateTimeInputViewModel viewModel})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeHelper") (Description . "") (DisplayText . "DateTimeHelper") (RequiredNamespaceImport) (MethodHeader . "DateTimeHelper") (ReturnType) (Snippet . "DateTimeHelper$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeInputViewModel") (Description . "Implements a model for date time input.
") (DisplayText . "DateTimeInputViewModel") (RequiredNamespaceImport) (MethodHeader . "DateTimeInputViewModel") (ReturnType) (Snippet . "DateTimeInputViewModel$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeInputViewModel") (Description . "Initializes a new instance of the Fls.UI.Base.DateTimeInputViewModel class.
") (DisplayText . "DateTimeInputViewModel()") (RequiredNamespaceImport) (MethodHeader . "DateTimeInputViewModel()") (ReturnType) (Snippet . "DateTimeInputViewModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeInputViewModel") (Description . "Initializes a new instance of the Fls.UI.Base.DateTimeInputViewModel class.

elementId: The elements id.") (DisplayText . "DateTimeInputViewModel(UIItemId elementId)") (RequiredNamespaceImport) (MethodHeader . "DateTimeInputViewModel(UIItemId elementId)") (ReturnType) (Snippet . "DateTimeInputViewModel(${1:UIItemId elementId})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeInputViewModel") (Description . "Initializes a new instance of the Fls.UI.Base.DateTimeInputViewModel class.

elementId: The elements id.
minDate: The minimum selectable date.
maxDate: The maximum selectable date.
selectedDate: The selected date.") (DisplayText . "DateTimeInputViewModel(UIItemId elementId, DateTime minDate, DateTime maxDate, DateTime selectedDate)") (RequiredNamespaceImport) (MethodHeader . "DateTimeInputViewModel(UIItemId elementId, DateTime minDate, DateTime maxDate, DateTime selectedDate)") (ReturnType) (Snippet . "DateTimeInputViewModel(${1:UIItemId elementId}, ${2:DateTime minDate}, ${3:DateTime maxDate}, ${4:DateTime selectedDate})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeInputViewModel") (Description . "Initializes a new instance of the Fls.UI.Base.DateTimeInputViewModel class.

elementId: The elements id.
selectedDate: The selected date.") (DisplayText . "DateTimeInputViewModel(UIItemId elementId, DateTime selectedDate)") (RequiredNamespaceImport) (MethodHeader . "DateTimeInputViewModel(UIItemId elementId, DateTime selectedDate)") (ReturnType) (Snippet . "DateTimeInputViewModel(${1:UIItemId elementId}, ${2:DateTime selectedDate})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeKind") (Description . "") (DisplayText . "DateTimeKind") (RequiredNamespaceImport) (MethodHeader . "DateTimeKind") (ReturnType) (Snippet . "DateTimeKind$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset") (ReturnType) (Snippet . "DateTimeOffset$0") (Kind . "Struct") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset()") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset()") (ReturnType) (Snippet . "DateTimeOffset()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset(DateTime dateTime)") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset(DateTime dateTime)") (ReturnType) (Snippet . "DateTimeOffset(${1:DateTime dateTime})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset(DateTime dateTime, TimeSpan offset)") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset(DateTime dateTime, TimeSpan offset)") (ReturnType) (Snippet . "DateTimeOffset(${1:DateTime dateTime}, ${2:TimeSpan offset})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset(int year, int month, int day, int hour, int minute, int second, int millisecond, Calendar calendar, TimeSpan offset)") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset(int year, int month, int day, int hour, int minute, int second, int millisecond, Calendar calendar, TimeSpan offset)") (ReturnType) (Snippet . "DateTimeOffset(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:int millisecond}, ${8:Calendar calendar}, ${9:TimeSpan offset})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset(int year, int month, int day, int hour, int minute, int second, int millisecond, TimeSpan offset)") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset(int year, int month, int day, int hour, int minute, int second, int millisecond, TimeSpan offset)") (ReturnType) (Snippet . "DateTimeOffset(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:int millisecond}, ${8:TimeSpan offset})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset(int year, int month, int day, int hour, int minute, int second, TimeSpan offset)") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset(int year, int month, int day, int hour, int minute, int second, TimeSpan offset)") (ReturnType) (Snippet . "DateTimeOffset(${1:int year}, ${2:int month}, ${3:int day}, ${4:int hour}, ${5:int minute}, ${6:int second}, ${7:TimeSpan offset})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffset") (Description . "") (DisplayText . "DateTimeOffset(long ticks, TimeSpan offset)") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffset(long ticks, TimeSpan offset)") (ReturnType) (Snippet . "DateTimeOffset(${1:long ticks}, ${2:TimeSpan offset})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffsetConverter") (Description . "") (DisplayText . "DateTimeOffsetConverter") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffsetConverter") (ReturnType) (Snippet . "DateTimeOffsetConverter$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeOffsetConverter") (Description . "") (DisplayText . "DateTimeOffsetConverter()") (RequiredNamespaceImport) (MethodHeader . "DateTimeOffsetConverter()") (ReturnType) (Snippet . "DateTimeOffsetConverter()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeSlot") (Description . "Implements a model for time intervals. 
") (DisplayText . "DateTimeSlot") (RequiredNamespaceImport) (MethodHeader . "DateTimeSlot") (ReturnType) (Snippet . "DateTimeSlot$0") (Kind . "Struct") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeSlot") (Description . "") (DisplayText . "DateTimeSlot()") (RequiredNamespaceImport) (MethodHeader . "DateTimeSlot()") (ReturnType) (Snippet . "DateTimeSlot()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeSlot") (Description . "Initializes a new instance of the Fls.Base.DateTimeSlot structure. 

start: The start time. 
duration: The duration. ") (DisplayText . "DateTimeSlot(DateTime start, DateTime end)") (RequiredNamespaceImport) (MethodHeader . "DateTimeSlot(DateTime start, DateTime end)") (ReturnType) (Snippet . "DateTimeSlot(${1:DateTime start}, ${2:DateTime end})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "DateTimeSlot") (Description . "Initializes a new instance of the Fls.Base.DateTimeSlot structure. 

start: The start time. 
duration: The duration. ") (DisplayText . "DateTimeSlot(DateTime start, TimeSpan duration)") (RequiredNamespaceImport) (MethodHeader . "DateTimeSlot(DateTime start, TimeSpan duration)") (ReturnType) (Snippet . "DateTimeSlot(${1:DateTime start}, ${2:TimeSpan duration})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "EntityUpdateType") (Description . "") (DisplayText . "EntityUpdateType") (RequiredNamespaceImport) (MethodHeader . "EntityUpdateType") (ReturnType) (Snippet . "EntityUpdateType$0") (Kind . "Enum") (IsSuggestionMode . :json-false)) ((CompletionText . "IDateTimeInputViewModel") (Description . "Implements an interface for date time object which may use only date or only time or both or nothing.
") (DisplayText . "IDateTimeInputViewModel") (RequiredNamespaceImport) (MethodHeader . "IDateTimeInputViewModel") (ReturnType) (Snippet . "IDateTimeInputViewModel$0") (Kind . "Interface") (IsSuggestionMode . :json-false)) ((CompletionText . "IMaxMinDateTime") (Description . "Implements an interface for minimum and maximum date time classes.
") (DisplayText . "IMaxMinDateTime") (RequiredNamespaceImport) (MethodHeader . "IMaxMinDateTime") (ReturnType) (Snippet . "IMaxMinDateTime$0") (Kind . "Interface") (IsSuggestionMode . :json-false)) ((CompletionText . "ReConvertDateTimesEventArgs") (Description . "") (DisplayText . "ReConvertDateTimesEventArgs") (RequiredNamespaceImport) (MethodHeader . "ReConvertDateTimesEventArgs") (ReturnType) (Snippet . "ReConvertDateTimesEventArgs$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "ReConvertDateTimesEventArgs") (Description . "") (DisplayText . "ReConvertDateTimesEventArgs(ITimeConverter converter, IProvideToday dateForTimeOfDayConversion)") (RequiredNamespaceImport) (MethodHeader . "ReConvertDateTimesEventArgs(ITimeConverter converter, IProvideToday dateForTimeOfDayConversion)") (ReturnType) (Snippet . "ReConvertDateTimesEventArgs(${1:ITimeConverter converter}, ${2:IProvideToday dateForTimeOfDayConversion})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "SchedulerViewDateTimeSlotModel") (Description . "Implements a model for scheduler view scheduleTable column header.
") (DisplayText . "SchedulerViewDateTimeSlotModel") (RequiredNamespaceImport) (MethodHeader . "SchedulerViewDateTimeSlotModel") (ReturnType) (Snippet . "SchedulerViewDateTimeSlotModel$0") (Kind . "Struct") (IsSuggestionMode . :json-false)) ((CompletionText . "SchedulerViewDateTimeSlotModel") (Description . "") (DisplayText . "SchedulerViewDateTimeSlotModel()") (RequiredNamespaceImport) (MethodHeader . "SchedulerViewDateTimeSlotModel()") (ReturnType) (Snippet . "SchedulerViewDateTimeSlotModel()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "SchedulerViewDateTimeSlotModel") (Description . "Initializes a new instance of the Fls.VisiTourClient.ViewModel.Scheduler.SchedulerViewDateTimeSlotModel struct.

slot: The date time slot.
isZombieTime: Indicates that slot is a zombie.
width: The slots width.") (DisplayText . "SchedulerViewDateTimeSlotModel(DateTimeSlot slot, bool isZombieTime, double width)") (RequiredNamespaceImport) (MethodHeader . "SchedulerViewDateTimeSlotModel(DateTimeSlot slot, bool isZombieTime, double width)") (ReturnType) (Snippet . "SchedulerViewDateTimeSlotModel(${1:DateTimeSlot slot}, ${2:bool isZombieTime}, ${3:double width})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "XmlDateTimeSerializationMode") (Description . "") (DisplayText . "XmlDateTimeSerializationMode") (RequiredNamespaceImport) (MethodHeader . "XmlDateTimeSerializationMode") (ReturnType) (Snippet . "XmlDateTimeSerializationMode$0") (Kind . "Enum") (IsSuggestionMode . :json-false))]
[10:17:51] <-- 49 /typelookup: ((Type) (Documentation))
[10:17:58] <-- 50 /autocomplete: [((CompletionText . "t1") (Description . "") (DisplayText . "t1") (RequiredNamespaceImport) (MethodHeader . "t1") (ReturnType . "DateTime") (Snippet . "t1$0") (Kind . "Local") (IsSuggestionMode . :json-false)) ((CompletionText . "Int16Converter") (Description . "") (DisplayText . "Int16Converter") (RequiredNamespaceImport) (MethodHeader . "Int16Converter") (ReturnType) (Snippet . "Int16Converter$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "Int16Converter") (Description . "") (DisplayText . "Int16Converter()") (RequiredNamespaceImport) (MethodHeader . "Int16Converter()") (ReturnType) (Snippet . "Int16Converter()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "Int16") (Description . "") (DisplayText . "short") (RequiredNamespaceImport) (MethodHeader . "short") (ReturnType) (Snippet . "short$0") (Kind . "Struct") (IsSuggestionMode . :json-false)) ((CompletionText . "Int16") (Description . "") (DisplayText . "short()") (RequiredNamespaceImport) (MethodHeader . "short()") (ReturnType) (Snippet . "short()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "UInt16Converter") (Description . "") (DisplayText . "UInt16Converter") (RequiredNamespaceImport) (MethodHeader . "UInt16Converter") (ReturnType) (Snippet . "UInt16Converter$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "UInt16Converter") (Description . "") (DisplayText . "UInt16Converter()") (RequiredNamespaceImport) (MethodHeader . "UInt16Converter()") (ReturnType) (Snippet . "UInt16Converter()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "UInt16") (Description . "") (DisplayText . "ushort") (RequiredNamespaceImport) (MethodHeader . "ushort") (ReturnType) (Snippet . "ushort$0") (Kind . "Struct") (IsSuggestionMode . :json-false)) ((CompletionText . "UInt16") (Description . "") (DisplayText . "ushort()") (RequiredNamespaceImport) (MethodHeader . "ushort()") (ReturnType) (Snippet . "ushort()$0") (Kind . "Method") (IsSuggestionMode . :json-false))]
[10:17:59] <-- 51 /typelookup: ((Type . "DateTime t1") (Documentation . ""))
[10:18:01] <-- 52 /autocomplete: [((CompletionText . "Add") (Description . "") (DisplayText . "Add(TimeSpan value)") (RequiredNamespaceImport) (MethodHeader . "Add(TimeSpan value)") (ReturnType . "DateTime") (Snippet . "Add(${1:TimeSpan value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "AddDays") (Description . "") (DisplayText . "AddDays(double value)") (RequiredNamespaceImport) (MethodHeader . "AddDays(double value)") (ReturnType . "DateTime") (Snippet . "AddDays(${1:double value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "AddHours") (Description . "") (DisplayText . "AddHours(double value)") (RequiredNamespaceImport) (MethodHeader . "AddHours(double value)") (ReturnType . "DateTime") (Snippet . "AddHours(${1:double value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "AddMilliseconds") (Description . "") (DisplayText . "AddMilliseconds(double value)") (RequiredNamespaceImport) (MethodHeader . "AddMilliseconds(double value)") (ReturnType . "DateTime") (Snippet . "AddMilliseconds(${1:double value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "AddMinutes") (Description . "") (DisplayText . "AddMinutes(double value)") (RequiredNamespaceImport) (MethodHeader . "AddMinutes(double value)") (ReturnType . "DateTime") (Snippet . "AddMinutes(${1:double value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "AddMonths") (Description . "") (DisplayText . "AddMonths(int months)") (RequiredNamespaceImport) (MethodHeader . "AddMonths(int months)") (ReturnType . "DateTime") (Snippet . "AddMonths(${1:int months})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "AddSeconds") (Description . "") (DisplayText . "AddSeconds(double value)") (RequiredNamespaceImport) (MethodHeader . "AddSeconds(double value)") (ReturnType . "DateTime") (Snippet . "AddSeconds(${1:double value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "AddTicks") (Description . "") (DisplayText . "AddTicks(long value)") (RequiredNamespaceImport) (MethodHeader . "AddTicks(long value)") (ReturnType . "DateTime") (Snippet . "AddTicks(${1:long value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "AddWorkingDays") (Description . "") (DisplayText . "AddWorkingDays(int days)") (RequiredNamespaceImport) (MethodHeader . "AddWorkingDays(int days)") (ReturnType . "DateTime") (Snippet . "AddWorkingDays(${1:int days})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "AddWorkingDays") (Description . "") (DisplayText . "AddWorkingDays(int days, DayOfWeek[] workingdays = null)") (RequiredNamespaceImport) (MethodHeader . "AddWorkingDays(int days, DayOfWeek[] workingdays = null)") (ReturnType . "DateTime") (Snippet . "AddWorkingDays(${1:int days}, ${2:DayOfWeek[] workingdays = null})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "AddYears") (Description . "") (DisplayText . "AddYears(int value)") (RequiredNamespaceImport) (MethodHeader . "AddYears(int value)") (ReturnType . "DateTime") (Snippet . "AddYears(${1:int value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "BusinessDaysBetween") (Description . "") (DisplayText . "BusinessDaysBetween(DateTime lastDay)") (RequiredNamespaceImport) (MethodHeader . "BusinessDaysBetween(DateTime lastDay)") (ReturnType . "int") (Snippet . "BusinessDaysBetween(${1:DateTime lastDay})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ChangeType") (Description . "") (DisplayText . "ChangeType(out T resultValue)") (RequiredNamespaceImport) (MethodHeader . "ChangeType(out T resultValue)") (ReturnType . "bool") (Snippet . "ChangeType(${1:out T resultValue})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ChangeType") (Description . "") (DisplayText . "ChangeType(out T resultValue, CultureInfo cultureInformation = null)") (RequiredNamespaceImport) (MethodHeader . "ChangeType(out T resultValue, CultureInfo cultureInformation = null)") (ReturnType . "bool") (Snippet . "ChangeType(${1:out T resultValue}, ${2:CultureInfo cultureInformation = null})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ClearMiliSeconds") (Description . "l\224scht Milisekunden

dt: 
Returns: ") (DisplayText . "ClearMiliSeconds()") (RequiredNamespaceImport) (MethodHeader . "ClearMiliSeconds()") (ReturnType . "DateTime") (Snippet . "ClearMiliSeconds()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ClearSeconds") (Description . "l\224scht Sekunden und Milisekunden

dt: 
Returns: ") (DisplayText . "ClearSeconds()") (RequiredNamespaceImport) (MethodHeader . "ClearSeconds()") (ReturnType . "DateTime") (Snippet . "ClearSeconds()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "CompareTo") (Description . "") (DisplayText . "CompareTo(DateTime value)") (RequiredNamespaceImport) (MethodHeader . "CompareTo(DateTime value)") (ReturnType . "int") (Snippet . "CompareTo(${1:DateTime value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "CompareTo") (Description . "") (DisplayText . "CompareTo(object value)") (RequiredNamespaceImport) (MethodHeader . "CompareTo(object value)") (ReturnType . "int") (Snippet . "CompareTo(${1:object value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "Date") (Description . "") (DisplayText . "Date") (RequiredNamespaceImport) (MethodHeader . "Date") (ReturnType . "DateTime") (Snippet . "Date$0") (Kind . "Property") (IsSuggestionMode . :json-false)) ((CompletionText . "Day") (Description . "") (DisplayText . "Day") (RequiredNamespaceImport) (MethodHeader . "Day") (ReturnType . "int") (Snippet . "Day$0") (Kind . "Property") (IsSuggestionMode . :json-false)) ((CompletionText . "DayOfWeek") (Description . "") (DisplayText . "DayOfWeek") (RequiredNamespaceImport) (MethodHeader . "DayOfWeek") (ReturnType . "DayOfWeek") (Snippet . "DayOfWeek$0") (Kind . "Property") (IsSuggestionMode . :json-false)) ((CompletionText . "DayOfYear") (Description . "") (DisplayText . "DayOfYear") (RequiredNamespaceImport) (MethodHeader . "DayOfYear") (ReturnType . "int") (Snippet . "DayOfYear$0") (Kind . "Property") (IsSuggestionMode . :json-false)) ((CompletionText . "Equals") (Description . "") (DisplayText . "Equals(DateTime value)") (RequiredNamespaceImport) (MethodHeader . "Equals(DateTime value)") (ReturnType . "bool") (Snippet . "Equals(${1:DateTime value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "Equals") (Description . "") (DisplayText . "Equals(object value)") (RequiredNamespaceImport) (MethodHeader . "Equals(object value)") (ReturnType . "bool") (Snippet . "Equals(${1:object value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "GetDateTimeFormats") (Description . "") (DisplayText . "GetDateTimeFormats()") (RequiredNamespaceImport) (MethodHeader . "GetDateTimeFormats()") (ReturnType . "string[]") (Snippet . "GetDateTimeFormats()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "GetDateTimeFormats") (Description . "") (DisplayText . "GetDateTimeFormats(char format)") (RequiredNamespaceImport) (MethodHeader . "GetDateTimeFormats(char format)") (ReturnType . "string[]") (Snippet . "GetDateTimeFormats(${1:char format})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "GetDateTimeFormats") (Description . "") (DisplayText . "GetDateTimeFormats(char format, IFormatProvider provider)") (RequiredNamespaceImport) (MethodHeader . "GetDateTimeFormats(char format, IFormatProvider provider)") (ReturnType . "string[]") (Snippet . "GetDateTimeFormats(${1:char format}, ${2:IFormatProvider provider})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "GetDateTimeFormats") (Description . "") (DisplayText . "GetDateTimeFormats(IFormatProvider provider)") (RequiredNamespaceImport) (MethodHeader . "GetDateTimeFormats(IFormatProvider provider)") (ReturnType . "string[]") (Snippet . "GetDateTimeFormats(${1:IFormatProvider provider})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "GetHashCode") (Description . "") (DisplayText . "GetHashCode()") (RequiredNamespaceImport) (MethodHeader . "GetHashCode()") (ReturnType . "int") (Snippet . "GetHashCode()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "GetMethode") (Description . "") (DisplayText . "GetMethode(string name)") (RequiredNamespaceImport) (MethodHeader . "GetMethode(string name)") (ReturnType . "MethodInfo") (Snippet . "GetMethode(${1:string name})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "GetMethode") (Description . "") (DisplayText . "GetMethode(string name, Type[] parameterTypes)") (RequiredNamespaceImport) (MethodHeader . "GetMethode(string name, Type[] parameterTypes)") (ReturnType . "MethodInfo") (Snippet . "GetMethode(${1:string name}, ${2:Type[] parameterTypes})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "GetNextMonth") (Description . "") (DisplayText . "GetNextMonth()") (RequiredNamespaceImport) (MethodHeader . "GetNextMonth()") (ReturnType . "DateTimeSlot") (Snippet . "GetNextMonth()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "GetPrevMonth") (Description . "") (DisplayText . "GetPrevMonth()") (RequiredNamespaceImport) (MethodHeader . "GetPrevMonth()") (ReturnType . "DateTimeSlot") (Snippet . "GetPrevMonth()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "GetType") (Description . "") (DisplayText . "GetType()") (RequiredNamespaceImport) (MethodHeader . "GetType()") (ReturnType . "Type") (Snippet . "GetType()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "GetTypeCode") (Description . "") (DisplayText . "GetTypeCode()") (RequiredNamespaceImport) (MethodHeader . "GetTypeCode()") (ReturnType . "TypeCode") (Snippet . "GetTypeCode()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "Hour") (Description . "") (DisplayText . "Hour") (RequiredNamespaceImport) (MethodHeader . "Hour") (ReturnType . "int") (Snippet . "Hour$0") (Kind . "Property") (IsSuggestionMode . :json-false)) ((CompletionText . "In") (Description . "") (DisplayText . "In(params DateTime[] values)") (RequiredNamespaceImport) (MethodHeader . "In(params DateTime[] values)") (ReturnType . "bool") (Snippet . "In(${1:params DateTime[] values})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "IsDaylightSavingTime") (Description . "") (DisplayText . "IsDaylightSavingTime()") (RequiredNamespaceImport) (MethodHeader . "IsDaylightSavingTime()") (ReturnType . "bool") (Snippet . "IsDaylightSavingTime()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "IsNotNull") (Description . "Gets a value indicating whether the value is not null or null. 

value: The object to be tested. 
Returns: If value isn't null then true else false. ") (DisplayText . "IsNotNull()") (RequiredNamespaceImport) (MethodHeader . "IsNotNull()") (ReturnType . "bool") (Snippet . "IsNotNull()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "IsNull") (Description . "Gets a value indicating whether the value is null or not. 

value: The object to be tested. 
Returns: If value is null then true else false. ") (DisplayText . "IsNull()") (RequiredNamespaceImport) (MethodHeader . "IsNull()") (ReturnType . "bool") (Snippet . "IsNull()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "Kind") (Description . "") (DisplayText . "Kind") (RequiredNamespaceImport) (MethodHeader . "Kind") (ReturnType . "DateTimeKind") (Snippet . "Kind$0") (Kind . "Property") (IsSuggestionMode . :json-false)) ((CompletionText . "Max") (Description . "") (DisplayText . "Max(DateTime comp)") (RequiredNamespaceImport) (MethodHeader . "Max(DateTime comp)") (ReturnType . "DateTime") (Snippet . "Max(${1:DateTime comp})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "Millisecond") (Description . "") (DisplayText . "Millisecond") (RequiredNamespaceImport) (MethodHeader . "Millisecond") (ReturnType . "int") (Snippet . "Millisecond$0") (Kind . "Property") (IsSuggestionMode . :json-false)) ((CompletionText . "Min") (Description . "") (DisplayText . "Min(DateTime comp)") (RequiredNamespaceImport) (MethodHeader . "Min(DateTime comp)") (ReturnType . "DateTime") (Snippet . "Min(${1:DateTime comp})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "Minute") (Description . "") (DisplayText . "Minute") (RequiredNamespaceImport) (MethodHeader . "Minute") (ReturnType . "int") (Snippet . "Minute$0") (Kind . "Property") (IsSuggestionMode . :json-false)) ((CompletionText . "Month") (Description . "") (DisplayText . "Month") (RequiredNamespaceImport) (MethodHeader . "Month") (ReturnType . "int") (Snippet . "Month$0") (Kind . "Property") (IsSuggestionMode . :json-false)) ((CompletionText . "PrevMonday") (Description . "") (DisplayText . "PrevMonday()") (RequiredNamespaceImport) (MethodHeader . "PrevMonday()") (ReturnType . "DateTime") (Snippet . "PrevMonday()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "PrevWeekDay") (Description . "") (DisplayText . "PrevWeekDay(DayOfWeek day)") (RequiredNamespaceImport) (MethodHeader . "PrevWeekDay(DayOfWeek day)") (ReturnType . "DateTime") (Snippet . "PrevWeekDay(${1:DayOfWeek day})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "RoundSeconds") (Description . "") (DisplayText . "RoundSeconds()") (RequiredNamespaceImport) (MethodHeader . "RoundSeconds()") (ReturnType . "DateTime") (Snippet . "RoundSeconds()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "SaveAddDays") (Description . "") (DisplayText . "SaveAddDays(double _days)") (RequiredNamespaceImport) (MethodHeader . "SaveAddDays(double _days)") (ReturnType . "DateTime") (Snippet . "SaveAddDays(${1:double _days})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "SaveAddMinutes") (Description . "") (DisplayText . "SaveAddMinutes(double _minutes)") (RequiredNamespaceImport) (MethodHeader . "SaveAddMinutes(double _minutes)") (ReturnType . "DateTime") (Snippet . "SaveAddMinutes(${1:double _minutes})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "Second") (Description . "") (DisplayText . "Second") (RequiredNamespaceImport) (MethodHeader . "Second") (ReturnType . "int") (Snippet . "Second$0") (Kind . "Property") (IsSuggestionMode . :json-false)) ((CompletionText . "Subtract") (Description . "") (DisplayText . "Subtract(DateTime value)") (RequiredNamespaceImport) (MethodHeader . "Subtract(DateTime value)") (ReturnType . "TimeSpan") (Snippet . "Subtract(${1:DateTime value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "Subtract") (Description . "") (DisplayText . "Subtract(TimeSpan value)") (RequiredNamespaceImport) (MethodHeader . "Subtract(TimeSpan value)") (ReturnType . "DateTime") (Snippet . "Subtract(${1:TimeSpan value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "Ticks") (Description . "") (DisplayText . "Ticks") (RequiredNamespaceImport) (MethodHeader . "Ticks") (ReturnType . "long") (Snippet . "Ticks$0") (Kind . "Property") (IsSuggestionMode . :json-false)) ((CompletionText . "TimeOfDay") (Description . "") (DisplayText . "TimeOfDay") (RequiredNamespaceImport) (MethodHeader . "TimeOfDay") (ReturnType . "TimeSpan") (Snippet . "TimeOfDay$0") (Kind . "Property") (IsSuggestionMode . :json-false)) ((CompletionText . "ToBinary") (Description . "") (DisplayText . "ToBinary()") (RequiredNamespaceImport) (MethodHeader . "ToBinary()") (ReturnType . "long") (Snippet . "ToBinary()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ToFileTime") (Description . "") (DisplayText . "ToFileTime()") (RequiredNamespaceImport) (MethodHeader . "ToFileTime()") (ReturnType . "long") (Snippet . "ToFileTime()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ToFileTimeUtc") (Description . "") (DisplayText . "ToFileTimeUtc()") (RequiredNamespaceImport) (MethodHeader . "ToFileTimeUtc()") (ReturnType . "long") (Snippet . "ToFileTimeUtc()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ToLocalTime") (Description . "") (DisplayText . "ToLocalTime()") (RequiredNamespaceImport) (MethodHeader . "ToLocalTime()") (ReturnType . "DateTime") (Snippet . "ToLocalTime()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ToLongDateString") (Description . "") (DisplayText . "ToLongDateString()") (RequiredNamespaceImport) (MethodHeader . "ToLongDateString()") (ReturnType . "string") (Snippet . "ToLongDateString()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ToLongTimeString") (Description . "") (DisplayText . "ToLongTimeString()") (RequiredNamespaceImport) (MethodHeader . "ToLongTimeString()") (ReturnType . "string") (Snippet . "ToLongTimeString()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ToMinutes") (Description . "") (DisplayText . "ToMinutes()") (RequiredNamespaceImport) (MethodHeader . "ToMinutes()") (ReturnType . "int") (Snippet . "ToMinutes()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ToOADate") (Description . "") (DisplayText . "ToOADate()") (RequiredNamespaceImport) (MethodHeader . "ToOADate()") (ReturnType . "double") (Snippet . "ToOADate()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ToSaveShortDateString") (Description . "") (DisplayText . "ToSaveShortDateString()") (RequiredNamespaceImport) (MethodHeader . "ToSaveShortDateString()") (ReturnType . "string") (Snippet . "ToSaveShortDateString()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ToSaveShortTimeString") (Description . "") (DisplayText . "ToSaveShortTimeString()") (RequiredNamespaceImport) (MethodHeader . "ToSaveShortTimeString()") (ReturnType . "string") (Snippet . "ToSaveShortTimeString()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ToSaveString") (Description . "") (DisplayText . "ToSaveString()") (RequiredNamespaceImport) (MethodHeader . "ToSaveString()") (ReturnType . "string") (Snippet . "ToSaveString()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ToShortDateString") (Description . "") (DisplayText . "ToShortDateString()") (RequiredNamespaceImport) (MethodHeader . "ToShortDateString()") (ReturnType . "string") (Snippet . "ToShortDateString()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ToShortTimeString") (Description . "") (DisplayText . "ToShortTimeString()") (RequiredNamespaceImport) (MethodHeader . "ToShortTimeString()") (ReturnType . "string") (Snippet . "ToShortTimeString()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ToString") (Description . "") (DisplayText . "ToString()") (RequiredNamespaceImport) (MethodHeader . "ToString()") (ReturnType . "string") (Snippet . "ToString()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ToString") (Description . "") (DisplayText . "ToString(IFormatProvider provider)") (RequiredNamespaceImport) (MethodHeader . "ToString(IFormatProvider provider)") (ReturnType . "string") (Snippet . "ToString(${1:IFormatProvider provider})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ToString") (Description . "") (DisplayText . "ToString(string format)") (RequiredNamespaceImport) (MethodHeader . "ToString(string format)") (ReturnType . "string") (Snippet . "ToString(${1:string format})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ToString") (Description . "") (DisplayText . "ToString(string format, IFormatProvider provider)") (RequiredNamespaceImport) (MethodHeader . "ToString(string format, IFormatProvider provider)") (ReturnType . "string") (Snippet . "ToString(${1:string format}, ${2:IFormatProvider provider})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ToUniversalTime") (Description . "") (DisplayText . "ToUniversalTime()") (RequiredNamespaceImport) (MethodHeader . "ToUniversalTime()") (ReturnType . "DateTime") (Snippet . "ToUniversalTime()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ToUser") (Description . "") (DisplayText . "ToUser()") (RequiredNamespaceImport) (MethodHeader . "ToUser()") (ReturnType . "Assembly") (Snippet . "ToUser()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ToWeekDay") (Description . "") (DisplayText . "ToWeekDay()") (RequiredNamespaceImport) (MethodHeader . "ToWeekDay()") (ReturnType . "int") (Snippet . "ToWeekDay()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ToWeekDayMo0So6") (Description . "") (DisplayText . "ToWeekDayMo0So6()") (RequiredNamespaceImport) (MethodHeader . "ToWeekDayMo0So6()") (ReturnType . "int") (Snippet . "ToWeekDayMo0So6()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "ToWeekDayMo1So7") (Description . "") (DisplayText . "ToWeekDayMo1So7()") (RequiredNamespaceImport) (MethodHeader . "ToWeekDayMo1So7()") (ReturnType . "int") (Snippet . "ToWeekDayMo1So7()$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "TryGetObjectValue") (Description . "Tries to get a object value. 

obj: The object of the property. 
propertyName: The properties name which controls the value. 
value: The value object. 
Returns: If successful then true else false. ") (DisplayText . "TryGetObjectValue(string propertyName, out object value)") (RequiredNamespaceImport) (MethodHeader . "TryGetObjectValue(string propertyName, out object value)") (ReturnType . "bool") (Snippet . "TryGetObjectValue(${1:string propertyName}, ${2:out object value})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "WeekDayOk") (Description . "") (DisplayText . "WeekDayOk(int WochenTage)") (RequiredNamespaceImport) (MethodHeader . "WeekDayOk(int WochenTage)") (ReturnType . "bool") (Snippet . "WeekDayOk(${1:int WochenTage})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "Year") (Description . "") (DisplayText . "Year") (RequiredNamespaceImport) (MethodHeader . "Year") (ReturnType . "int") (Snippet . "Year$0") (Kind . "Property") (IsSuggestionMode . :json-false))]
[10:18:02] <-- 53 /typelookup: ((Type) (Documentation))
[10:18:04] <-- 54 /typelookup: ((Type) (Documentation))
[10:18:15] <-- 55 /autocomplete: [((CompletionText . "AssemblyDefaultAliasAttribute") (Description . "") (DisplayText . "AssemblyDefaultAliasAttribute") (RequiredNamespaceImport) (MethodHeader . "AssemblyDefaultAliasAttribute") (ReturnType) (Snippet . "AssemblyDefaultAliasAttribute$0") (Kind . "Class") (IsSuggestionMode . :json-false)) ((CompletionText . "AssemblyDefaultAliasAttribute") (Description . "") (DisplayText . "AssemblyDefaultAliasAttribute(string defaultAlias)") (RequiredNamespaceImport) (MethodHeader . "AssemblyDefaultAliasAttribute(string defaultAlias)") (ReturnType) (Snippet . "AssemblyDefaultAliasAttribute(${1:string defaultAlias})$0") (Kind . "Method") (IsSuggestionMode . :json-false)) ((CompletionText . "AutoSaveEntityInDefaultView") (Description . "") (DisplayText . "AutoSaveEntityInDefaultView(string entityName, object id)") (RequiredNamespaceImport) (MethodHeader . "AutoSaveEntityInDefaultView(string entityName, object id)") (ReturnType . "void") (Snippet . "AutoSaveEntityInDefaultView(${1:string entityName}, ${2:object id});$0") (Kind . "Method") (IsSuggestionMode . :json-false))]
[10:18:16] <-- 56 /typelookup: ((Type) (Documentation))
[10:18:18] <-- 57 /autocomplete: []
[10:18:19] <-- 58 /typelookup: ((Type) (Documentation))

#+TITLE: Emacs Keys and Commands I Want to Remember

* Global

| =C-h b=       | display key-bindings      |
| =C-^=         | join two lines            |
| =M-z=         | =zap-to-char=               |
| =j j=         | =avy-goto-word=             |
| =j k=         | =avy-goto-char=             |
| =j l=         | =avy-goto-line=             |
| =C-x r l=     | list bookmarks            |
| =M-SPC=       | =hippie-exand=              |
| =C-c .=       | thing at point operations |
| C-c t       | run eshell                |
| C-Backspace | reverse kill line         |
| C-,         | just-one-space            |


** Registers

| =C-x r s a=       | copy region to register =a=               |
| =C-x r i a=       | insert content from register =a= at point |
| =C-u 9 C-x r n a= | insert =9= into register =a=                |
| =C-x C-k x a=     | save last kmacro to regrister =a=         |
| C - x r j a=    | execute macro from register =a=           |



** Searching

*** Isearch

| =M-e=   | edit search string                                                                      |
| =M-r=   | toggle regex                                                                            |
| =M-%=   | run =query-replace=                                                                       |
| =C-M-%= | run =query-replace-regex=                                                                 |
| =C-w=   | insert word at point in search string; press multiple times to insert consecutive words |
| =C-o= | run helm-occure from isearch |

*** ag

| command line arg |

** Functions

| =insert= | insert string at point |

** Debugging

Enter Debugger with =(debug)= or =(debug-on-entry 'f)=. Debugger Commands:

| =R= | evaluate lisp expression |
| =d= | step                     |

** Working with TAGS

| =M-.=            | =find-tag=     |
| =M-*=            | =pop-tag-mark= |
| =visit-tag-file= | load TAGS file |

** .dir-locals.el

Each entry is either

- a mode name or =nil= to set variables in all modes
- a string specifing a directory
* Help Mode

| key | action     |
|-----+------------|
| l   | go back    |
| r   | go forward |

* Ace window

- actions to trigger after =ace-window= was called

| key | action                            |
|-----+-----------------------------------|
| x   | delete selected window            |
| m   | swap current window with selected |
| v   | split window vertically           |
| b   | split window horizontally         |
| i   | maximize selected window          |

* Winner mode

| key         | command     | action                              |
|-------------+-------------+-------------------------------------|
| C-c <LEFT>  | winner-undo | undo change to window configuration |
| C-C <RIGHT> | winner-redo | redo change to window configuration |
* Text Selection

| key | command          | action                                               |
|-----+------------------+------------------------------------------------------|
| M-= | er/expand-region | expand region to next word, sentence, paragraph, ... |
| M-w | easy-kill        | expand selection by                                  |
|     |                  | e: line                                              |
|     |                  | w: word                                              |
|     |                  | s: sexp                                              |
|     |                  | d: defun                                             |
|     |                  | b: buffer-file-name                                  |
|     |                  | other (z.B. j): save selection and exit              |
|     |                  |                                                      |

* Movement

| key | command            | action |
|-----+--------------------+--------|
| M-e | forward-sentence   | same   |
| M-a | forward-sentence   |        |
| M-n | forward-paragraph  | same   |
| M-p | backward-paragraph | same   |
|     |                    |        |

- under windows combining these commands with SHIFT expands region

* Debugging

| key       | command    | action                                                         |
|-----------+------------+----------------------------------------------------------------|
| C-u C-M-x | eval-defun | evaluate current defun expression and instrument it for edebug |
| C-M-x     | eval-defun | evaluate current defun expression and instrument if for edebug |
* Lisp coding

| key     | command                                   | action                   |
|---------+-------------------------------------------+--------------------------|
| C-h C-f | find-function                             | goto function definition |
| M-.     | elisp-slime-nav-find-elisp-thing-at-point | goto function definition |

* Git Svn

| commamds | actions |
|----------+---------|
| =git svn clone <svn repo>= | clone svn repo; equivalent to runnig =git svn init= followed by =git svn fetch=; options: =-T= trunk directory name, =-b= branch directory name, =-tags= tags directory name |
| =git commit= | commit to your local git repo |
| =git svn dcommit= | push local commits to remote svn repo; equivalent to svn commit |
| =git svn rebase= | equivalent to =svn update=; use option =--interactive= for interactive rebasing |
| =git svn show-ignore= | print svn ignores to stdout in gitignore format |

- Nested branches/tags layouts can be specified in git's config file. In this case do =git svn init=, edit config file, and then do =git avn fetch=